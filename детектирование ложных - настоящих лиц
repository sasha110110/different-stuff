{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Копия блокнота \"\"self or spoof\"\"",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sasha110110/different-stuff/blob/main/%D0%B4%D0%B5%D1%82%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%20%D0%BB%D0%BE%D0%B6%D0%BD%D1%8B%D1%85%20-%20%D0%BD%D0%B0%D1%81%D1%82%D0%BE%D1%8F%D1%89%D0%B8%D1%85%20%D0%BB%D0%B8%D1%86\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qrfd6FzSLrE2"
      },
      "source": [
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense, Conv2D, MaxPooling2D, Dropout, Flatten, Input, GlobalAveragePooling2D, BatchNormalization\n",
        "from tensorflow.keras import utils\n",
        "from tensorflow.keras.preprocessing import image\n",
        "from tensorflow.python.keras.preprocessing.image import ImageDataGenerator\n",
        "from tensorflow.keras.callbacks import ReduceLROnPlateau, ModelCheckpoint\n",
        "import tensorflow as tf\n",
        "from sklearn.model_selection import train_test_split\n",
        "from google.colab import files\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline \n",
        "import os\n",
        "import PIL\n",
        "from PIL import Image\n",
        "import io\n",
        "from tensorflow.keras import layers\n",
        "import glob\n",
        "from keras.preprocessing.image import save_img, load_img, img_to_array, array_to_img"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FSlZs9NzU3xd"
      },
      "source": [
        "import tensorflow as tf\n",
        "# sess = tf.compat.v1.Session(graph=tf.import_graph_def(), config=session_conf)\n",
        "sess = tf.compat.v1.Session(graph=tf.compat.v1.get_default_graph())\n",
        "tf.compat.v1.keras.backend.set_session(sess)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rzU1bjUis3ma",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCkgewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwogICAgICBwZXJjZW50LnRleHRDb250ZW50ID0KICAgICAgICAgIGAke01hdGgucm91bmQoKHBvc2l0aW9uIC8gZmlsZURhdGEuYnl0ZUxlbmd0aCkgKiAxMDApfSUgZG9uZWA7CiAgICB9CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 73
        },
        "outputId": "c4607830-93a6-4859-91a3-6cc70a24f9ae"
      },
      "source": [
        "file = files.upload()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-58415639-9cf2-4756-87c1-30a9b6314375\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-58415639-9cf2-4756-87c1-30a9b6314375\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving kc.jpg to kc.jpg\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XZyluXb5lKpv"
      },
      "source": [
        "from tensorflow import image"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ph2lZ2J51fkd"
      },
      "source": [
        "\n",
        "# Importing Image and ImageFilter module from PIL package   \n",
        "from PIL import Image, ImageFilter, ImageEnhance\n",
        "       \n",
        "# creating a image object  \n",
        "im = Image.open(\"/content/kc.jpg\")  \n",
        "       \n",
        "im2arr = np.array(im)\n",
        "\n",
        "\n",
        "ready=image.rgb_to_hsv(im2arr)\n",
        "#i=ready.reshape(ready.shape[0], ready.shape[1])\n",
        "ii=array_to_img(ready)\n",
        "\n",
        "save_img(\"/content/filtered.jpg\", ii)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nfZufw9hTRdh",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 82
        },
        "outputId": "253a68c4-7402-44b6-e90b-b60bee1c134f"
      },
      "source": [
        "!gdown --id 1xmALNsYW-zm-Id9T6Ku2H4_cBWoqn23s"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading...\n",
            "From: https://drive.google.com/uc?id=1xmALNsYW-zm-Id9T6Ku2H4_cBWoqn23s\n",
            "To: /content/IDRND_FASDB_train.tar.gz\n",
            "2.41GB [00:49, 48.9MB/s]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "djscRlCJxdOG"
      },
      "source": [
        "!tar xvzf \"/content/IDRND_FASDB_train.tar.gz\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1MmtEHUA_hrj"
      },
      "source": [
        "\n",
        "for f in os.listdir('/content/IDRND_FASDB_train/real'):\n",
        "  if \"checkpoint\" in f:\n",
        "    print (f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "A-pEwOT-ZaLN"
      },
      "source": [
        "#!rm -r \"/content/IDRND_FASDB_train\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Vu0dTc9XqXwg"
      },
      "source": [
        "## First variant"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o3d_4cdITbwz"
      },
      "source": [
        "\n",
        "from keras.preprocessing.image import load_img\n",
        "from keras.preprocessing.image import img_to_array"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yT53fZCuptgA"
      },
      "source": [
        "from PIL import Image"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1X82oPSBwTCd"
      },
      "source": [
        "import glob\n",
        "from collections import Counter\n",
        "from statistics import mean\n",
        "import numpy as np"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YMjMh7yiObXh"
      },
      "source": [
        "## ######################################################"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9IDu1FwWRgK6"
      },
      "source": [
        "import random\n",
        "import glob"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pSed4ELmtDto"
      },
      "source": [
        "os.chdir(\"/content/sample_data\")\n",
        "!mkdir \"images\"\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s9Uf28fRn18J"
      },
      "source": [
        "Forming new folder"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4FWSLOwmXfi8"
      },
      "source": [
        "os.chdir(\"/content/sample_data\")\n",
        "!mkdir \"training\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "295hE1DqXqqy"
      },
      "source": [
        "os.chdir(\"/content/sample_data/training\")\n",
        "!mkdir \"real\"\n",
        "!mkdir \"spoof\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "P2LgdJt4RxAG"
      },
      "source": [
        "os.chdir(\"/content/sample_data/images\")\n",
        "!mkdir \"real\"\n",
        "!mkdir \"spoof\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qf_6oSrdwRwh"
      },
      "source": [
        "import os\n",
        "import shutil\n",
        "import random\n",
        "\n",
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "\n",
        "dir = (\"/content/IDRND_FASDB_train/real\")\n",
        "dir2 = (\"/content/sample_data/images/real\")\n",
        "\n",
        "files=os.listdir(dir)\n",
        "for img in files[::]:\n",
        "  if os.path.isfile(dir+\"/\"+img):\n",
        "    shutil.copy(dir+\"/\"+img, dir2)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2YRfaOxMg6DK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "718fb7eb-6b60-46a4-b6f9-450904fca4e8"
      },
      "source": [
        "len(os.listdir(\"/content/sample_data/images/real\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1315"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1fktLJ7CSEGC"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "\n",
        "dir = (\"/content/IDRND_FASDB_train/spoof\")\n",
        "dir2 = (\"/content/sample_data/images/spoof\")\n",
        "\n",
        "files=os.listdir(dir)\n",
        "for img in files[:4000]:\n",
        "  if os.path.isfile(dir+\"/\"+img):\n",
        "    shutil.copy(dir+\"/\"+img, dir2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NrzqR2OdRdo3"
      },
      "source": [
        "#!rm -r \"/content/sample_data/images\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BCZYXAOWTfM5"
      },
      "source": [
        "now augmmenting this data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "it41Y__xT-qc"
      },
      "source": [
        "datagen_for_short = ImageDataGenerator(\n",
        "        rotation_range=40,\n",
        "        \n",
        "        zoom_range=0.2,\n",
        "        horizontal_flip=True,\n",
        "        fill_mode='nearest')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2Pbp5pBqUgig"
      },
      "source": [
        "dir='/content/IDRND_FASDB_train/real'\n",
        "for img in os.listdir(dir):\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      im = load_img(dir+\"/\"+img)\n",
        "    except PIL.UnidentifiedImageError:\n",
        "      continue\n",
        "    x = img_to_array(im) \n",
        "    x = x.reshape((1,) + x.shape)  \n",
        "\n",
        "\n",
        "i = 0\n",
        "for batch in datagen_for_short.flow(x, batch_size=1,\n",
        "                          save_to_dir='/content/sample_data/training/real', save_prefix='real', save_format='jpeg'):\n",
        "    i += 1\n",
        "    if i > 50:\n",
        "        break"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "77htnClwsaPm"
      },
      "source": [
        "def feed():\n",
        " \n",
        "  for dir in os.listdir(\"/content/IDRND_FASDB_train\"):\n",
        "    for img in os.listdir(\"/content/IDRND_FASDB_train/\"+dir):\n",
        "      if img.endswith(\"png\"):\n",
        "        try:\n",
        "          im = load_img(dir+\"/\"+img)\n",
        "        except PIL.UnidentifiedImageError:\n",
        "          continue\n",
        "        x = img_to_array(im) \n",
        "        x = x.reshape((1,) + x.shape)  \n",
        "\n",
        "\n",
        "  i = 0\n",
        "  for batch in datagen_for_short.flow(x):\n",
        "    try:\n",
        "      i += 1\n",
        "    except FileNotFoundError:\n",
        "      continue\n",
        "    if i > 50:\n",
        "      break\n",
        "  yield x"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nkNHGbgUxnNi"
      },
      "source": [
        "def feed2():\n",
        " \n",
        "  for dir in os.listdir(\"/content/IDRND_FASDB_train\"):\n",
        "    for img in os.listdir(\"/content/IDRND_FASDB_train/\"+dir)[:100]:\n",
        "      if img.endswith(\"png\"):\n",
        "        try:\n",
        "          im = load_img(dir+\"/\"+img)\n",
        "        except PIL.UnidentifiedImageError:\n",
        "          continue\n",
        "        x = img_to_array(im) \n",
        "        x = x.reshape((1,) + x.shape)  \n",
        "\n",
        "\n",
        "  i = 0\n",
        "  for batch in datagen_for_short.flow(x):\n",
        "    try:\n",
        "      i += 1\n",
        "    except FileNotFoundError:\n",
        "      continue\n",
        "    if i > 50:\n",
        "      break\n",
        "  yield x"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j1xVo9CJYtId"
      },
      "source": [
        "dir2=\"/content/IDRND_FASDB_train/spoof\"\n",
        "for img in os.listdir(dir2):\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      im = load_img(img)\n",
        "    except (PIL.UnidentifiedImageError, FileNotFoundError):\n",
        "      continue\n",
        "    x = img_to_array(im) \n",
        "    x = x.reshape((1,) + x.shape)  \n",
        "\n",
        "\n",
        "i = 0\n",
        "for batch in datagen_for_short.flow(x, batch_size=1,\n",
        "                          save_to_dir='/content/sample_data/training/spoof', save_prefix='spoof', save_format='jpeg'):\n",
        "    i += 1\n",
        "    if i > 50:\n",
        "        break"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DJufUaqfsXi5"
      },
      "source": [
        "## just numpy arrays model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PdoZp_ke08zF"
      },
      "source": [
        "\n",
        "from numpy.random import seed\n",
        "seed(1)\n",
        "from tensorflow import set_random_seed\n",
        "set_random_seed(2)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "U2VIIr5lq-OB"
      },
      "source": [
        "from keras.preprocessing.image import img_to_array\n",
        "from keras.preprocessing.image import load_img"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EboRjeBYsfF7"
      },
      "source": [
        "train_data_part1=[]\n",
        "\n",
        "dir='/content/grey/real'\n",
        "for img in os.listdir(dir):\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      im = load_img(dir+\"/\"+img, target_size=(224, 224))#, color_mode=\"grayscale\")\n",
        "    except PIL.UnidentifiedImageError:\n",
        "      continue\n",
        "    x = img_to_array(im) \n",
        "    train_data_part1.append(x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I7P6rXMqEeHO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "4f6e43bb-3137-4848-eb8e-4a2af47678b5"
      },
      "source": [
        "len(train_data_part2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1200"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "F1E4uZTb2SCk"
      },
      "source": [
        "train_data_part2=[]\n",
        "\n",
        "dir='/content/grey/spoof'\n",
        "for img in os.listdir(dir):#1200\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      im = load_img(dir+\"/\"+img, target_size=(224, 224)) #color_mode=\"grayscale\")\n",
        "    except PIL.UnidentifiedImageError:\n",
        "      continue\n",
        "    x = img_to_array(im) \n",
        "    train_data_part2.append(x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K5xdOKEqHa4g",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "35ecf7c4-4e57-44d9-c887-0d5d23c60dff"
      },
      "source": [
        "train_data_part2[0].shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(224, 224, 3)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 242
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HY0AuAmE4MDS"
      },
      "source": [
        "x_train_data=np.vstack((np.array(train_data_part1), np.array(train_data_part2)))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yKdqyRDJMHoW"
      },
      "source": [
        " np.save(\"x_train_array\", x_train_data)  #x_train_data=np.laod(x_train_array.npy)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xe53snaDvA19"
      },
      "source": [
        "x_train_data=np.load(\"x_train_array.npy\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "em_r2iPxP9aW",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCkgewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwogICAgICBwZXJjZW50LnRleHRDb250ZW50ID0KICAgICAgICAgIGAke01hdGgucm91bmQoKHBvc2l0aW9uIC8gZmlsZURhdGEuYnl0ZUxlbmd0aCkgKiAxMDApfSUgZG9uZWA7CiAgICB9CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 55
        },
        "outputId": "a41695c7-833e-49ba-ef52-5d5fcde644c1"
      },
      "source": [
        "fi = files.upload()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-a5620bb8-93ec-4d77-9eb2-13c5853c0f96\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-a5620bb8-93ec-4d77-9eb2-13c5853c0f96\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "koPws6-lQKWc"
      },
      "source": [
        "##x_train_data=np.load(fi)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VEdUnXqq6GQj"
      },
      "source": [
        "y_train_data=[1]*len(train_data_part1)+[0]*len(train_data_part2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZIn0UJ8NyG4m"
      },
      "source": [
        "#y_train_data=[1]*1223+[0]*1711"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B4BUinONOQyA"
      },
      "source": [
        "y_train_data=np.array(y_train_data)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gX_OXj7jOZRI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b9242184-78a6-472d-ea69-69d41b506c1f"
      },
      "source": [
        "len(y_train_data) #2932"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2400"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 241
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GivHp0tn62Uo"
      },
      "source": [
        "###########train_data=np.concatenate((y_train_data.reshape(2934, 1), x_train_data))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2qdrUh98csj9"
      },
      "source": [
        "C = np.concatenate((A, \n",
        "                    np.broadcast_to(np.array(B)[:, None, None], A.shape[:-1] + (1,))), \n",
        "                   axis = -1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RnR4FEMX8tn8"
      },
      "source": [
        "x_train_data /= 255.0"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RTSSXCIm9Ug_"
      },
      "source": [
        "random_seed = 4\n",
        "X_train, X_val, Y_train, Y_val = train_test_split(x_train_data, y_train_data, test_size = 0.1, random_state=random_seed)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HOyY96MAlJAW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "be4af4ba-4b3f-4e2b-e286-376d76d3931b"
      },
      "source": [
        "Y_val.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(294,)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HahKaMlfoZ4b"
      },
      "source": [
        "datagen = ImageDataGenerator(\n",
        "        width_shift_range=0.1, height_shift_range=0.1, \n",
        "        zoom_range = 0.10,\n",
        "        )"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "45KtXe8Woj1H"
      },
      "source": [
        "model = Sequential()\n",
        "\n",
        "model.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', \n",
        "                 activation ='relu', input_shape = (224, 224, 3)))\n",
        "model.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same', \n",
        "                 activation ='relu'))\n",
        "model.add(MaxPooling2D(pool_size=(2,2)))\n",
        "model.add(Dropout(0.25))\n",
        "\n",
        "\n",
        "model.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', \n",
        "                 activation ='relu'))\n",
        "model.add(Conv2D(filters = 64, kernel_size = (3,3),padding = 'Same', \n",
        "                 activation ='relu'))\n",
        "model.add(MaxPooling2D(pool_size=(2,2), strides=(2,2)))\n",
        "\n",
        "model.add(Flatten())\n",
        "model.add(Dense(256, activation = \"relu\"))\n",
        "model.add(Dense(64, activation = \"relu\"))\n",
        "model.add(Dropout(0.25))\n",
        "model.add(Dense(1, activation = \"sigmoid\"))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0mKSZhc01r_a"
      },
      "source": [
        "optimizer=tf.keras.optimizers.SGD(nesterov=True) "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Zsoohx4Go1tu"
      },
      "source": [
        "model.compile(loss=\"binary_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n",
        "\n",
        "#print(model.summary())# ddd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oxJrgHNqpvLs"
      },
      "source": [
        "\n",
        "сheckpoint = ModelCheckpoint('model_on_arrays.h5', \n",
        "                              monitor='val_accuracy', \n",
        "                              save_best_only=True,\n",
        "                              verbose=1)\n",
        "learning_rate_reduction = ReduceLROnPlateau(monitor='val_accuracy', \n",
        "                                            patience=3, \n",
        "                                            verbose=1, \n",
        "                                            factor=0.5, \n",
        "                                            min_lr=0.00001)\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QxwPkuwoL2xt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 727
        },
        "outputId": "3df05826-0f2d-45fe-d9e4-b1e240400af0"
      },
      "source": [
        "history = model.fit(datagen.flow(X_train,Y_train), batch_size=20, \n",
        "                    epochs=10, \n",
        "                    validation_data=(X_val, Y_val),\n",
        "                    steps_per_epoch=25,\n",
        "                    verbose=1,\n",
        "                    callbacks=[сheckpoint, learning_rate_reduction])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.6211 - accuracy: 0.6607 \n",
            "Epoch 00001: val_accuracy did not improve from 0.68750\n",
            "25/25 [==============================] - 345s 14s/step - loss: 0.6211 - accuracy: 0.6607 - val_loss: 0.6124 - val_accuracy: 0.6833\n",
            "Epoch 2/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.6085 - accuracy: 0.6712 \n",
            "Epoch 00002: val_accuracy did not improve from 0.68750\n",
            "25/25 [==============================] - 352s 14s/step - loss: 0.6085 - accuracy: 0.6712 - val_loss: 0.6003 - val_accuracy: 0.6792\n",
            "Epoch 3/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.6107 - accuracy: 0.6725 \n",
            "Epoch 00003: val_accuracy did not improve from 0.68750\n",
            "25/25 [==============================] - 350s 14s/step - loss: 0.6107 - accuracy: 0.6725 - val_loss: 0.7012 - val_accuracy: 0.5375\n",
            "Epoch 4/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.6165 - accuracy: 0.6684 \n",
            "Epoch 00004: val_accuracy improved from 0.68750 to 0.70000, saving model to model_on_arrays.h5\n",
            "25/25 [==============================] - 347s 14s/step - loss: 0.6165 - accuracy: 0.6684 - val_loss: 0.6065 - val_accuracy: 0.7000\n",
            "Epoch 5/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.5841 - accuracy: 0.6888 \n",
            "Epoch 00005: val_accuracy improved from 0.70000 to 0.72083, saving model to model_on_arrays.h5\n",
            "25/25 [==============================] - 354s 14s/step - loss: 0.5841 - accuracy: 0.6888 - val_loss: 0.5606 - val_accuracy: 0.7208\n",
            "Epoch 6/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.5661 - accuracy: 0.7075 \n",
            "Epoch 00006: val_accuracy did not improve from 0.72083\n",
            "25/25 [==============================] - 351s 14s/step - loss: 0.5661 - accuracy: 0.7075 - val_loss: 0.5873 - val_accuracy: 0.6917\n",
            "Epoch 7/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.5929 - accuracy: 0.7003 \n",
            "Epoch 00007: val_accuracy did not improve from 0.72083\n",
            "25/25 [==============================] - 344s 14s/step - loss: 0.5929 - accuracy: 0.7003 - val_loss: 0.5544 - val_accuracy: 0.7208\n",
            "Epoch 8/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.5332 - accuracy: 0.7296 \n",
            "Epoch 00008: val_accuracy improved from 0.72083 to 0.72500, saving model to model_on_arrays.h5\n",
            "25/25 [==============================] - 347s 14s/step - loss: 0.5332 - accuracy: 0.7296 - val_loss: 0.5104 - val_accuracy: 0.7250\n",
            "Epoch 9/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.5587 - accuracy: 0.6775 \n",
            "Epoch 00009: val_accuracy did not improve from 0.72500\n",
            "25/25 [==============================] - 352s 14s/step - loss: 0.5587 - accuracy: 0.6775 - val_loss: 0.5319 - val_accuracy: 0.7042\n",
            "Epoch 10/10\n",
            "25/25 [==============================] - ETA: 0s - loss: 0.5528 - accuracy: 0.6975 \n",
            "Epoch 00010: val_accuracy did not improve from 0.72500\n",
            "25/25 [==============================] - 351s 14s/step - loss: 0.5528 - accuracy: 0.6975 - val_loss: 0.6736 - val_accuracy: 0.6958\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TP733Ox-qd8g",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        },
        "outputId": "b7e69d7f-2d14-4617-c043-3d07670c98e1"
      },
      "source": [
        "#model.load_weights('mnist-cnn.hdf5')\n",
        "plt.plot(history.history['accuracy'], \n",
        "         label='Доля верных ответов на обучающем наборе')\n",
        "plt.plot(history.history['val_accuracy'], \n",
        "         label='Доля верных ответов на проверочном наборе')\n",
        "plt.xlabel('Эпоха обучения')\n",
        "plt.ylabel('Доля верных ответов')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "piOLkLkzvfwU"
      },
      "source": [
        "tf.keras.backend.clear_session()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KyrNOcwI6a1b"
      },
      "source": [
        "model.load_weights(\"/content/model_on_arrays.h5\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Xv2uzQsIHRVJ"
      },
      "source": [
        "!cd /content/sample_data/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5j1_K-i9642_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 87
        },
        "outputId": "0508244b-6865-444e-a8dd-d7d354774cec"
      },
      "source": [
        "!gdown --id 1teaLCo-F-5RCQM8Puxqbk13bI0evqIzg"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading...\n",
            "From: https://drive.google.com/uc?id=1teaLCo-F-5RCQM8Puxqbk13bI0evqIzg\n",
            "To: /content/IDRND_FASDB_train/spoof/test.tar.gz\n",
            "1.71GB [00:16, 106MB/s]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VJZo6NyjK_vQ"
      },
      "source": [
        "!mv /content/IDRND_FASDB_train/spoof/test.tar.gz /content/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e4EXKRTB7dKl",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "ab715f6e-5700-4e05-fafb-2896d2ac19ef"
      },
      "source": [
        "!tar -xvzf \"/content/test.tar.gz\""
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43mВыходные данные были обрезаны до нескольких последних строк (5000).\u001b[0m\n",
            "test/SJILUT5Q.png\n",
            "test/22BN8P1F.png\n",
            "test/MCL2E8D1.png\n",
            "test/GCD80IZY.png\n",
            "test/EHRXFXQF.png\n",
            "test/O17ZXG8S.png\n",
            "test/TPFUO53O.png\n",
            "test/Y2NFCKTP.png\n",
            "test/A2FL72P9.png\n",
            "test/OQ1WB5SV.png\n",
            "test/PP9O4A6C.png\n",
            "test/WRR6N6JC.png\n",
            "test/XZHE16WA.png\n",
            "test/YEKNM7DD.png\n",
            "test/C1CICGG5.png\n",
            "test/9RZ7UN85.png\n",
            "test/UN1BBB1S.png\n",
            "test/6A4SICHW.png\n",
            "test/UMCN8TTK.png\n",
            "test/7CTGJXTP.png\n",
            "test/Y81P02JH.png\n",
            "test/AOQJFPP7.png\n",
            "test/CEH69DL7.png\n",
            "test/WB6WOVTU.png\n",
            "test/5PU1NIDZ.png\n",
            "test/V6RO0EU5.png\n",
            "test/T56WFIT7.png\n",
            "test/XHIG0GI6.png\n",
            "test/JPII8FI5.png\n",
            "test/43PSGS3J.png\n",
            "test/DC38VMSF.png\n",
            "test/1979MHH3.png\n",
            "test/S0NO6U1B.png\n",
            "test/N95IT95A.png\n",
            "test/Q0N7UQZV.png\n",
            "test/A3MQSQ20.png\n",
            "test/4L9IKW0U.png\n",
            "test/YY6YAPKU.png\n",
            "test/ZPL5RV9H.png\n",
            "test/A5VDG4YC.png\n",
            "test/9Q78QMUT.png\n",
            "test/OA1XFCOO.png\n",
            "test/3WCVWNA6.png\n",
            "test/U2RXZAND.png\n",
            "test/XXYN87DV.png\n",
            "test/7G66F466.png\n",
            "test/J7J9FULL.png\n",
            "test/MCWVSSTQ.png\n",
            "test/MBW22QQR.png\n",
            "test/GGGY773E.png\n",
            "test/UTKR0CFS.png\n",
            "test/PR5ZOD33.png\n",
            "test/MEJ5A7KS.png\n",
            "test/HO43Z1T7.png\n",
            "test/LJFJLLWK.png\n",
            "test/9F00S8MU.png\n",
            "test/4AX7ALEG.png\n",
            "test/CSUZQ45M.png\n",
            "test/5CIWJ64X.png\n",
            "test/LZ1JTJPH.png\n",
            "test/ZB9IV4AZ.png\n",
            "test/IDO1WI9P.png\n",
            "test/GB1XJBE4.png\n",
            "test/YUXP55CF.png\n",
            "test/L5W72LMI.png\n",
            "test/SMPZUU70.png\n",
            "test/BFC3YX0F.png\n",
            "test/F6H1NCR0.png\n",
            "test/PNIL1BMY.png\n",
            "test/CAVU6WGK.png\n",
            "test/AO1YIZJX.png\n",
            "test/YBO9YS12.png\n",
            "test/9JCWHANS.png\n",
            "test/FPPXAEMI.png\n",
            "test/9B8YD2DR.png\n",
            "test/DR5A38X5.png\n",
            "test/DDQ73QBI.png\n",
            "test/XUM1BT63.png\n",
            "test/RY94S86I.png\n",
            "test/4W3HIXVY.png\n",
            "test/QS5LI5DG.png\n",
            "test/JZOGFY5R.png\n",
            "test/Z9WTM49V.png\n",
            "test/L8AM7X3X.png\n",
            "test/MS8M4LT5.png\n",
            "test/1UWX8VO5.png\n",
            "test/1864JLCJ.png\n",
            "test/E1EXL97B.png\n",
            "test/YI3WRR7C.png\n",
            "test/UNJL72D3.png\n",
            "test/YHCXD31R.png\n",
            "test/IRYUI1JX.png\n",
            "test/CUCA2TOF.png\n",
            "test/XOEGEGGO.png\n",
            "test/74MYHXC2.png\n",
            "test/4FJ5J9TX.png\n",
            "test/WI9XZETL.png\n",
            "test/9JPC3JZT.png\n",
            "test/6NJ2B8UI.png\n",
            "test/OM6SP5W1.png\n",
            "test/G2YKI5SM.png\n",
            "test/IA19PGAQ.png\n",
            "test/3L9OQ8A2.png\n",
            "test/271TRZFE.png\n",
            "test/CQ3H9W6V.png\n",
            "test/2QVDPA3Z.png\n",
            "test/LBMTO6IM.png\n",
            "test/Y7RKEZVP.png\n",
            "test/9UAMJDZG.png\n",
            "test/KB9YJ6NH.png\n",
            "test/TI5BC0RH.png\n",
            "test/DFSS5WFF.png\n",
            "test/2ZK353SB.png\n",
            "test/5QRVS5PH.png\n",
            "test/C9C9TGVQ.png\n",
            "test/J5VP0KU5.png\n",
            "test/T6RMZ67E.png\n",
            "test/X5A34A5L.png\n",
            "test/BVSN8TI6.png\n",
            "test/SDTQ3UUD.png\n",
            "test/HZ8E6HP0.png\n",
            "test/ITLREMJR.png\n",
            "test/9SWYIZR9.png\n",
            "test/12OXXGZA.png\n",
            "test/9X6IB99U.png\n",
            "test/8SZ1REOM.png\n",
            "test/QXG1Y87N.png\n",
            "test/F6XFH79E.png\n",
            "test/R7ZCOCA9.png\n",
            "test/I0VJS7T3.png\n",
            "test/FUY8KBQX.png\n",
            "test/DAG1L8WE.png\n",
            "test/9R4OE7GZ.png\n",
            "test/6LW9MBEK.png\n",
            "test/JCJUA3Z3.png\n",
            "test/PSEAOTBN.png\n",
            "test/XX15U47O.png\n",
            "test/X8YQKU6N.png\n",
            "test/N0DB1A93.png\n",
            "test/DR03LFGE.png\n",
            "test/N7LULG7J.png\n",
            "test/IF3047E9.png\n",
            "test/BHC8RLPP.png\n",
            "test/MAGR0515.png\n",
            "test/C24FCGRP.png\n",
            "test/T3RTC75E.png\n",
            "test/GU4GWPX9.png\n",
            "test/CZA117Y0.png\n",
            "test/TD6U8QBF.png\n",
            "test/UCX6MRYN.png\n",
            "test/2VZDB7DE.png\n",
            "test/CU06TWKB.png\n",
            "test/NU2G1F21.png\n",
            "test/KX6JJTNT.png\n",
            "test/83L8HJGI.png\n",
            "test/8QQBGDMR.png\n",
            "test/DYDTMI7S.png\n",
            "test/4HY1K779.png\n",
            "test/T79OAV24.png\n",
            "test/GD0MUIZD.png\n",
            "test/KGRGI6C8.png\n",
            "test/S11CIRV4.png\n",
            "test/V8GHLTQY.png\n",
            "test/ZXMWMAKG.png\n",
            "test/V9NXCK8W.png\n",
            "test/76CLARFM.png\n",
            "test/K5FA9OIL.png\n",
            "test/XWMNWC1A.png\n",
            "test/JZN27YQS.png\n",
            "test/S3K7URUA.png\n",
            "test/F1HK0XR4.png\n",
            "test/369WI4TS.png\n",
            "test/M3B7LUDJ.png\n",
            "test/7RNNNKME.png\n",
            "test/1J4B9GWG.png\n",
            "test/SPNF8E33.png\n",
            "test/J76VMG2X.png\n",
            "test/FF9VRJ0F.png\n",
            "test/1BJV32SN.png\n",
            "test/NL6YXDLJ.png\n",
            "test/A0TJU437.png\n",
            "test/66C3VJI9.png\n",
            "test/DFXBDI13.png\n",
            "test/XVR56HMD.png\n",
            "test/FEZEMTZ9.png\n",
            "test/NO07KZHD.png\n",
            "test/EF4TLWBU.png\n",
            "test/G44RYXYK.png\n",
            "test/WFSHKZJ5.png\n",
            "test/NO07FQDS.png\n",
            "test/TSVFLJPV.png\n",
            "test/0G4KXE2E.png\n",
            "test/WBO2HPEX.png\n",
            "test/6OAB8CLH.png\n",
            "test/5888IC0M.png\n",
            "test/ZHHL03L8.png\n",
            "test/92UM02T9.png\n",
            "test/BSWQ9B7X.png\n",
            "test/WSDMTQSF.png\n",
            "test/N9W7VD76.png\n",
            "test/6UG4RK1B.png\n",
            "test/7JWTY5A1.png\n",
            "test/KXJOAWUB.png\n",
            "test/FY0IA20V.png\n",
            "test/K34SH728.png\n",
            "test/Z025ENSB.png\n",
            "test/5E7C350N.png\n",
            "test/7M6KMSXG.png\n",
            "test/RE1NJ6OG.png\n",
            "test/4IC06SML.png\n",
            "test/WBNA1BJT.png\n",
            "test/6AND4UAZ.png\n",
            "test/I387A6YO.png\n",
            "test/J84F680C.png\n",
            "test/48SPYT14.png\n",
            "test/QMFHZUA8.png\n",
            "test/YVA03OKZ.png\n",
            "test/L9QLPLLH.png\n",
            "test/6C3IV89B.png\n",
            "test/J0D6PSLZ.png\n",
            "test/RCU76TUV.png\n",
            "test/ZV0MVBFQ.png\n",
            "test/7WJX1OYK.png\n",
            "test/CIKBS1MQ.png\n",
            "test/ZZK5MPVA.png\n",
            "test/4DOJ69VY.png\n",
            "test/E2MZXBX5.png\n",
            "test/5Q1MEY3A.png\n",
            "test/BZO9YRON.png\n",
            "test/PVYE8JLT.png\n",
            "test/UGA85GBN.png\n",
            "test/PRHJ03JY.png\n",
            "test/NJIYLB8G.png\n",
            "test/HBYS69ZN.png\n",
            "test/0CFVRE6U.png\n",
            "test/EWPYCNND.png\n",
            "test/1EN1XVC4.png\n",
            "test/YRCAR8IV.png\n",
            "test/RPEPPSC0.png\n",
            "test/1QHYUWVF.png\n",
            "test/STL0A3GP.png\n",
            "test/VQOT1LNY.png\n",
            "test/HMQFI9FN.png\n",
            "test/ACBBS10X.png\n",
            "test/PHLUL84N.png\n",
            "test/27DKN79T.png\n",
            "test/68YW1SX8.png\n",
            "test/CFOBJVPE.png\n",
            "test/CRIRB70E.png\n",
            "test/PTP2305H.png\n",
            "test/M3AFDIVF.png\n",
            "test/VHEOZD27.png\n",
            "test/E4WBU4VK.png\n",
            "test/J161MUFJ.png\n",
            "test/LCORFMTY.png\n",
            "test/978CTK47.png\n",
            "test/Z67B2Z0V.png\n",
            "test/C56MY9I2.png\n",
            "test/GVUQBIZ4.png\n",
            "test/HTKZLNXV.png\n",
            "test/L9PT8FBR.png\n",
            "test/PDJ4T5DI.png\n",
            "test/VBBM0D8Q.png\n",
            "test/NN79E257.png\n",
            "test/SXMCRGWH.png\n",
            "test/4JY91SUF.png\n",
            "test/1ZL85PO1.png\n",
            "test/7EVRLOTN.png\n",
            "test/1KDAQK93.png\n",
            "test/GHEJ4HPS.png\n",
            "test/NR1I3PIX.png\n",
            "test/GA8LPLUE.png\n",
            "test/JSXBDF8I.png\n",
            "test/CNUCJC29.png\n",
            "test/CF7CPG8I.png\n",
            "test/KC66VAEK.png\n",
            "test/CW2XFC40.png\n",
            "test/AF517CT0.png\n",
            "test/AZ6JE40I.png\n",
            "test/BQ1DNYBB.png\n",
            "test/LZ5IDYFC.png\n",
            "test/EKZ2DU6Q.png\n",
            "test/9ZNLPZ93.png\n",
            "test/TTEUH1S0.png\n",
            "test/3Q5OJJKZ.png\n",
            "test/5BJ1TB0A.png\n",
            "test/2BZS2MCE.png\n",
            "test/8Y1LSWE1.png\n",
            "test/ZCMWMXGL.png\n",
            "test/BRY8KQGQ.png\n",
            "test/Y26LMTAN.png\n",
            "test/YSGK3R00.png\n",
            "test/N6P2AO65.png\n",
            "test/3C950HQQ.png\n",
            "test/RSO62RDX.png\n",
            "test/C0RV0QGD.png\n",
            "test/BOXPT0LJ.png\n",
            "test/S77R6JI4.png\n",
            "test/T6TD2CI4.png\n",
            "test/F2O0ZDW7.png\n",
            "test/H2SS9ADA.png\n",
            "test/EXBEIAW7.png\n",
            "test/KXCBIRHX.png\n",
            "test/LVOE8NU8.png\n",
            "test/T6ORMZJH.png\n",
            "test/GO2X9CBW.png\n",
            "test/T6X2E7U5.png\n",
            "test/FB00YP2F.png\n",
            "test/1PEWS2FS.png\n",
            "test/I8VD0NFN.png\n",
            "test/OXUG4VZM.png\n",
            "test/EW9XPDE9.png\n",
            "test/YUTXRGQ3.png\n",
            "test/5DTSNY7K.png\n",
            "test/BEO851S1.png\n",
            "test/VPAUKWXJ.png\n",
            "test/JF2X1T44.png\n",
            "test/B0EZ86P7.png\n",
            "test/6OSLZ18S.png\n",
            "test/Q9EOBQ4J.png\n",
            "test/XW9YEAK5.png\n",
            "test/VTI51M8J.png\n",
            "test/N1QHJ92M.png\n",
            "test/NFF6I5U2.png\n",
            "test/87YP8SOQ.png\n",
            "test/Z3ENC77F.png\n",
            "test/UHU5JWPY.png\n",
            "test/PBLWRTQ5.png\n",
            "test/9FRZG29V.png\n",
            "test/MBWBEYEQ.png\n",
            "test/BZ594SKS.png\n",
            "test/CYYU6MWM.png\n",
            "test/5LFAFXCF.png\n",
            "test/MXMFGORH.png\n",
            "test/U55NX981.png\n",
            "test/1GBVG3C5.png\n",
            "test/O1FG28NW.png\n",
            "test/DZ9SEWN7.png\n",
            "test/1T2TNXWM.png\n",
            "test/I1R7SG9D.png\n",
            "test/SQE13NBM.png\n",
            "test/HULAVIC2.png\n",
            "test/QJRBBLVD.png\n",
            "test/PM3TC408.png\n",
            "test/2P0SFK9S.png\n",
            "test/LUOFT1T6.png\n",
            "test/USQ8MF3A.png\n",
            "test/NM6J45G8.png\n",
            "test/U7RJ8BJY.png\n",
            "test/LKSEVB89.png\n",
            "test/XQ09I2WP.png\n",
            "test/VBCE6463.png\n",
            "test/7658LO1P.png\n",
            "test/V1CRNSCT.png\n",
            "test/YJM5EV81.png\n",
            "test/G7AN8VTT.png\n",
            "test/GXXR6NLF.png\n",
            "test/KJ02V9CN.png\n",
            "test/6U7IQG48.png\n",
            "test/15FTPZQ5.png\n",
            "test/UBZRSUZZ.png\n",
            "test/QQQS45US.png\n",
            "test/J9A1RRD9.png\n",
            "test/ERBS6WAZ.png\n",
            "test/05K8W8IB.png\n",
            "test/2TB0RVSX.png\n",
            "test/92ZVO3K2.png\n",
            "test/DPT3Q3L4.png\n",
            "test/J6MK6HRH.png\n",
            "test/R96SDTGL.png\n",
            "test/TETFIB7M.png\n",
            "test/QSNUCKDV.png\n",
            "test/XDVSW8EE.png\n",
            "test/RVY21IR7.png\n",
            "test/GPT7WFH0.png\n",
            "test/IS52LY9T.png\n",
            "test/SL0RSMIK.png\n",
            "test/J6F3WDDQ.png\n",
            "test/KDNFRAZN.png\n",
            "test/ULK0VYI4.png\n",
            "test/7VV8RYFN.png\n",
            "test/DOHS5WYS.png\n",
            "test/NK72TJAM.png\n",
            "test/NW5V8SSM.png\n",
            "test/V8SLCECC.png\n",
            "test/MBNJ5WL1.png\n",
            "test/O148V9G5.png\n",
            "test/WKCXJC4P.png\n",
            "test/PPEUJB0L.png\n",
            "test/IVLN21PY.png\n",
            "test/5ZCHLJAP.png\n",
            "test/GOL0PAPW.png\n",
            "test/P6B8HCYF.png\n",
            "test/UQG3TSP3.png\n",
            "test/H19FWT9E.png\n",
            "test/GF4XZ9QV.png\n",
            "test/O3RFJM4D.png\n",
            "test/EPS0YN84.png\n",
            "test/MSOLTHBU.png\n",
            "test/ASAKS5OW.png\n",
            "test/ENDAKIRD.png\n",
            "test/PQSG6DO0.png\n",
            "test/ZEW7N3HE.png\n",
            "test/AQ76R4X8.png\n",
            "test/MDO8Z73G.png\n",
            "test/FSRQ174N.png\n",
            "test/IFCJ09HK.png\n",
            "test/1HDCMACC.png\n",
            "test/WWRG7ZSD.png\n",
            "test/LEUPAYLT.png\n",
            "test/XJZ8PR21.png\n",
            "test/RV6SGCV4.png\n",
            "test/DM6WVCW8.png\n",
            "test/DQL6YV9U.png\n",
            "test/LMV0Z8RB.png\n",
            "test/WTWT9UI9.png\n",
            "test/CHJA00DS.png\n",
            "test/T1S6OLLJ.png\n",
            "test/30XZEV5P.png\n",
            "test/9D28MH8E.png\n",
            "test/94JRUE4T.png\n",
            "test/ZCVGVR4B.png\n",
            "test/399Z6U1N.png\n",
            "test/VJI6EWPL.png\n",
            "test/7EW0JXVB.png\n",
            "test/VJXY72HP.png\n",
            "test/9IW9S3RB.png\n",
            "test/34VU45Z6.png\n",
            "test/EL4Q6GDS.png\n",
            "test/WYL1UUB0.png\n",
            "test/35DG6VBL.png\n",
            "test/RJVF0YTL.png\n",
            "test/FMC9YCIA.png\n",
            "test/B16T60AF.png\n",
            "test/DA8ZGO0U.png\n",
            "test/IP9RU5XO.png\n",
            "test/DLIQPJAP.png\n",
            "test/P9KFJHYQ.png\n",
            "test/6BCU9X1H.png\n",
            "test/AR288TFQ.png\n",
            "test/4WSQAHZK.png\n",
            "test/58WACMXY.png\n",
            "test/NW28XMPE.png\n",
            "test/IUNI5F1O.png\n",
            "test/OTHVI1W3.png\n",
            "test/5DWWOLAM.png\n",
            "test/GYQFYXD3.png\n",
            "test/HZOUL3RY.png\n",
            "test/VHGAMD7D.png\n",
            "test/2WX31PNJ.png\n",
            "test/U6DQ247P.png\n",
            "test/B797UNZ7.png\n",
            "test/4SNJTBML.png\n",
            "test/3NTMLH93.png\n",
            "test/QRO0ZF8T.png\n",
            "test/BTKZXGWT.png\n",
            "test/WDDGEUQ9.png\n",
            "test/1ZAUYDG7.png\n",
            "test/6K4N77E5.png\n",
            "test/FX9XSN1V.png\n",
            "test/6HDXNO1U.png\n",
            "test/QQ54RV4G.png\n",
            "test/2V3BUP0U.png\n",
            "test/1TSYX0YC.png\n",
            "test/JP7W30F2.png\n",
            "test/5Z40B65Q.png\n",
            "test/1KSS8YA9.png\n",
            "test/OITE08HN.png\n",
            "test/S42G4D05.png\n",
            "test/6N8MKKY7.png\n",
            "test/1YMJ35KT.png\n",
            "test/848HEZXZ.png\n",
            "test/19PPXP5N.png\n",
            "test/20WNZ9ND.png\n",
            "test/W8TTDLJY.png\n",
            "test/2T3BKW5C.png\n",
            "test/18D4LOGD.png\n",
            "test/BUM1A71C.png\n",
            "test/QIJ7PBAQ.png\n",
            "test/387Y81E8.png\n",
            "test/LIJZZ5IZ.png\n",
            "test/LHBPDVUI.png\n",
            "test/XAOSWHH5.png\n",
            "test/EKUBOIHL.png\n",
            "test/CP8W6MLJ.png\n",
            "test/G2K26C90.png\n",
            "test/ZZFN9V20.png\n",
            "test/4XYH8WHD.png\n",
            "test/GQXLR553.png\n",
            "test/WR5WD4JQ.png\n",
            "test/W22DK7CA.png\n",
            "test/TEMZ1LLT.png\n",
            "test/PAZGRJ0R.png\n",
            "test/VQXMY6ZN.png\n",
            "test/WSLMLA15.png\n",
            "test/29GZBZ85.png\n",
            "test/62ZX8WRB.png\n",
            "test/6ZT5R9XD.png\n",
            "test/A1I38KID.png\n",
            "test/A14E0XBX.png\n",
            "test/I7D4PLLG.png\n",
            "test/VEGKJFHP.png\n",
            "test/88DBAUGJ.png\n",
            "test/H20ESXEL.png\n",
            "test/GFK6MWR9.png\n",
            "test/6UVP28ZH.png\n",
            "test/C7V854CH.png\n",
            "test/KLOYQ30H.png\n",
            "test/ATQ4M86T.png\n",
            "test/BMVHOIWU.png\n",
            "test/MGTL21IL.png\n",
            "test/VOZWYNSC.png\n",
            "test/KO0ZJFIM.png\n",
            "test/T69SN3XG.png\n",
            "test/DSOITL3U.png\n",
            "test/A2YQ41SU.png\n",
            "test/2UYG8D6G.png\n",
            "test/UGMARKA7.png\n",
            "test/ND2XEZS5.png\n",
            "test/KMC8K6C9.png\n",
            "test/0SOQZDZ2.png\n",
            "test/8Q6MUDF8.png\n",
            "test/B9CQG19E.png\n",
            "test/SYHQE2K7.png\n",
            "test/MJX4G7B2.png\n",
            "test/EJU57CWL.png\n",
            "test/P8VHI43C.png\n",
            "test/KURIPEDA.png\n",
            "test/9LBHX7J3.png\n",
            "test/VRSIW511.png\n",
            "test/HSJHJCX6.png\n",
            "test/NDFISNTE.png\n",
            "test/QBT5BWZQ.png\n",
            "test/U4VWMRTM.png\n",
            "test/QJAYYCMR.png\n",
            "test/M6KVMVNH.png\n",
            "test/W10LHRPL.png\n",
            "test/PEG6YLDQ.png\n",
            "test/I9YHA9DR.png\n",
            "test/M0ZKM2CC.png\n",
            "test/TDZ1R4M9.png\n",
            "test/C48450MN.png\n",
            "test/5KSYYZIF.png\n",
            "test/2QN5PE5M.png\n",
            "test/ZQPNK9DD.png\n",
            "test/GNKDUCIT.png\n",
            "test/KS0VFCJR.png\n",
            "test/PT6Y6CTO.png\n",
            "test/039UOUG3.png\n",
            "test/E9OQ9E3N.png\n",
            "test/RYP9PCVJ.png\n",
            "test/O8GEX9RQ.png\n",
            "test/BL56SF2N.png\n",
            "test/J9RD56EY.png\n",
            "test/NP4QNHL3.png\n",
            "test/3VQHDHP7.png\n",
            "test/ZVNXIL3I.png\n",
            "test/SO16J27U.png\n",
            "test/V07TXRSD.png\n",
            "test/U04UFVJF.png\n",
            "test/D4SEMH1I.png\n",
            "test/L7Z6PUG0.png\n",
            "test/FRNKXLMJ.png\n",
            "test/W5VXG1SA.png\n",
            "test/3NR0EE4L.png\n",
            "test/LYQMVCKI.png\n",
            "test/I5IYT1GL.png\n",
            "test/9SUS03TD.png\n",
            "test/A241MAE1.png\n",
            "test/EZM66PPF.png\n",
            "test/LBJG89MZ.png\n",
            "test/RT4EVCEJ.png\n",
            "test/UNY2V1XJ.png\n",
            "test/EQPGBPPN.png\n",
            "test/TWRGSXGK.png\n",
            "test/P8R8PGAT.png\n",
            "test/YR992I6J.png\n",
            "test/BE6O8LNH.png\n",
            "test/J6B3LNU4.png\n",
            "test/0B1992BA.png\n",
            "test/1OGL3TK6.png\n",
            "test/T2K26QGV.png\n",
            "test/XWFRTY27.png\n",
            "test/VV8I1PFY.png\n",
            "test/FGQNEL6O.png\n",
            "test/0HDE1NJR.png\n",
            "test/5X2SH9KQ.png\n",
            "test/E4J4I3CO.png\n",
            "test/9PGF837L.png\n",
            "test/PDNDLV9D.png\n",
            "test/H1QK3M2G.png\n",
            "test/Q020G67P.png\n",
            "test/QUW63BN0.png\n",
            "test/KI8I35PO.png\n",
            "test/E40130LA.png\n",
            "test/2P1C18WJ.png\n",
            "test/23Z6OS6G.png\n",
            "test/P49VAKVH.png\n",
            "test/2NSMK1UJ.png\n",
            "test/TY8S08HD.png\n",
            "test/FPIJZLZM.png\n",
            "test/V43L5UQZ.png\n",
            "test/Z64ZEHF2.png\n",
            "test/13XACYUB.png\n",
            "test/KPDEQPJ2.png\n",
            "test/2BM4DV2M.png\n",
            "test/3T27UW5C.png\n",
            "test/SLGJX10M.png\n",
            "test/A2SO7X67.png\n",
            "test/D6BJN6EC.png\n",
            "test/CI88GBZS.png\n",
            "test/B3GBGGQM.png\n",
            "test/JGYN47RR.png\n",
            "test/GK1F9J4J.png\n",
            "test/XYI8LV3F.png\n",
            "test/K45FGT5D.png\n",
            "test/K0DZ8XV7.png\n",
            "test/0GTAC342.png\n",
            "test/NDPQGPNZ.png\n",
            "test/RN1BE01K.png\n",
            "test/JEF26VJ4.png\n",
            "test/3ZNW7BCQ.png\n",
            "test/THDVY7R0.png\n",
            "test/F4MTZ5KM.png\n",
            "test/1KVLE02O.png\n",
            "test/YQP46NRT.png\n",
            "test/9G9YITXO.png\n",
            "test/EE4QAZCG.png\n",
            "test/7UXBCGEH.png\n",
            "test/MLTM6BVF.png\n",
            "test/6QVS0KM3.png\n",
            "test/9OGV0JUP.png\n",
            "test/O9ZB0RQ5.png\n",
            "test/4IRQGXZ2.png\n",
            "test/VKQQGEFK.png\n",
            "test/NS5ZK9KL.png\n",
            "test/YSPIA80G.png\n",
            "test/2UCJQQ2K.png\n",
            "test/BXENP3JJ.png\n",
            "test/KY4K4IXB.png\n",
            "test/5SZT903J.png\n",
            "test/NTRG0WRJ.png\n",
            "test/CNFC0L9U.png\n",
            "test/I4GU23ZC.png\n",
            "test/JN56QFO0.png\n",
            "test/LVX6NSGC.png\n",
            "test/ND9CCC2Q.png\n",
            "test/P70M5XGS.png\n",
            "test/I6EH0FVL.png\n",
            "test/QNWFUM0Z.png\n",
            "test/6H0IZG2X.png\n",
            "test/7KVREB2X.png\n",
            "test/SKFW0HUI.png\n",
            "test/UZ2BUJL6.png\n",
            "test/V38J2VNN.png\n",
            "test/IXKT4JWO.png\n",
            "test/G91R2F7Z.png\n",
            "test/TOSZRQGN.png\n",
            "test/ON0AT33T.png\n",
            "test/6CD4C49C.png\n",
            "test/DCZ7LO1J.png\n",
            "test/28JRF370.png\n",
            "test/2XY9VFXJ.png\n",
            "test/GI1FSJHQ.png\n",
            "test/SU6YIS0V.png\n",
            "test/1IIG034O.png\n",
            "test/M8ZTZF2J.png\n",
            "test/NNKLEIHP.png\n",
            "test/91VCS07K.png\n",
            "test/EKZ177OV.png\n",
            "test/9Z8OSIPI.png\n",
            "test/QQHI54ZN.png\n",
            "test/PTRJPC0M.png\n",
            "test/MIDM6C0L.png\n",
            "test/KFYT2VNM.png\n",
            "test/55FI7TR0.png\n",
            "test/GDCGFU0P.png\n",
            "test/WNWUDCL9.png\n",
            "test/PX2DOLMG.png\n",
            "test/JJBJJEVE.png\n",
            "test/WA8PQQDY.png\n",
            "test/MG7MY0TC.png\n",
            "test/58UEWYYV.png\n",
            "test/AVN6JLSX.png\n",
            "test/GRIP87ML.png\n",
            "test/MY3BNWP2.png\n",
            "test/AJ3877EA.png\n",
            "test/606P6495.png\n",
            "test/FMQ9HYGP.png\n",
            "test/Z846RBNC.png\n",
            "test/I3Z0AVTY.png\n",
            "test/UENVLKYD.png\n",
            "test/GL2YJ5N8.png\n",
            "test/8BH1TKRR.png\n",
            "test/6FV6Z22A.png\n",
            "test/RSRONEBO.png\n",
            "test/T3NYTB5A.png\n",
            "test/8FYW1WFH.png\n",
            "test/VHT3E0W3.png\n",
            "test/IGGLFHB1.png\n",
            "test/0VBMV92X.png\n",
            "test/IPIRA6RF.png\n",
            "test/BKAOFDQF.png\n",
            "test/5WRC43WE.png\n",
            "test/VTGW6LTI.png\n",
            "test/ZUHDTJM4.png\n",
            "test/1NG7BMC6.png\n",
            "test/K27U0H2X.png\n",
            "test/DIISBBCY.png\n",
            "test/MXZR4D6R.png\n",
            "test/CS9I8F6L.png\n",
            "test/W8SDB9RH.png\n",
            "test/60A4CWB2.png\n",
            "test/C5A01YWP.png\n",
            "test/DZMN1GTC.png\n",
            "test/PN5OC753.png\n",
            "test/3AL0MOUC.png\n",
            "test/SOVCW8H7.png\n",
            "test/731DX2JM.png\n",
            "test/ERV21ODF.png\n",
            "test/WVVDGKGF.png\n",
            "test/Z8ZIGDAC.png\n",
            "test/GQWF2ZGK.png\n",
            "test/APEX6R2V.png\n",
            "test/R3ET8PAQ.png\n",
            "test/00BMIGHK.png\n",
            "test/GWNR1I2G.png\n",
            "test/VHJZMXDF.png\n",
            "test/ZCYUMFHQ.png\n",
            "test/6OAWGQXM.png\n",
            "test/IJMQHUOE.png\n",
            "test/71A4K4AE.png\n",
            "test/HEZWU8RJ.png\n",
            "test/YETH9XC9.png\n",
            "test/RPTRLXJL.png\n",
            "test/91LKCZ3V.png\n",
            "test/C83MU05C.png\n",
            "test/26Y6FLKZ.png\n",
            "test/G58KFLDN.png\n",
            "test/EILJG8TP.png\n",
            "test/WRC5YJLN.png\n",
            "test/M0SDYV47.png\n",
            "test/CXI511V5.png\n",
            "test/1C4UEHD1.png\n",
            "test/GCE8N9EO.png\n",
            "test/K6JJJEBV.png\n",
            "test/VJTLBPN8.png\n",
            "test/9LT8PCU5.png\n",
            "test/4JHGSTJA.png\n",
            "test/7Z8TKJRD.png\n",
            "test/P6DWAQ0T.png\n",
            "test/UQR75O40.png\n",
            "test/KYOTCOHN.png\n",
            "test/EUW1JSX2.png\n",
            "test/KADN3V91.png\n",
            "test/J7RE8M8N.png\n",
            "test/HM4LR09O.png\n",
            "test/TNML65IQ.png\n",
            "test/ZTYQURRD.png\n",
            "test/APWDOWI9.png\n",
            "test/RMMSGHH9.png\n",
            "test/DR8AHOJS.png\n",
            "test/J0EUVWY0.png\n",
            "test/SIAKJE9S.png\n",
            "test/ESMEDWUU.png\n",
            "test/B5M119X5.png\n",
            "test/M2JLUANS.png\n",
            "test/RM126N3U.png\n",
            "test/I393ESOM.png\n",
            "test/GVMX5OKB.png\n",
            "test/D6MP3Y90.png\n",
            "test/NL5NSGSJ.png\n",
            "test/INOJDJRT.png\n",
            "test/K9Z67H3J.png\n",
            "test/4COPSQ2F.png\n",
            "test/RKS35E9L.png\n",
            "test/7772OVD9.png\n",
            "test/RCUVWUSV.png\n",
            "test/THCHUKX0.png\n",
            "test/L3VVOD0B.png\n",
            "test/XA41XKWZ.png\n",
            "test/XAGOLH34.png\n",
            "test/G4TA2MLQ.png\n",
            "test/QAORNR8W.png\n",
            "test/1A9JIOGT.png\n",
            "test/211DKQ2V.png\n",
            "test/VSV6X4FZ.png\n",
            "test/DCY2V1J8.png\n",
            "test/PUG5ZXT3.png\n",
            "test/SGHUMGW9.png\n",
            "test/JDKH79XA.png\n",
            "test/P0F8DE50.png\n",
            "test/LW0V9BH8.png\n",
            "test/HPP2YO0U.png\n",
            "test/JYFLIITL.png\n",
            "test/Q8H2J8LC.png\n",
            "test/CRF96EZ4.png\n",
            "test/SVBJR1KM.png\n",
            "test/9CMTYONT.png\n",
            "test/EEIURO2S.png\n",
            "test/5AFWAII1.png\n",
            "test/4TCO2CR6.png\n",
            "test/UOEI7A9L.png\n",
            "test/RVEW1TNV.png\n",
            "test/1FULLLFW.png\n",
            "test/SZGLAVT4.png\n",
            "test/SC6Z1KXJ.png\n",
            "test/ILSHBTWX.png\n",
            "test/KKP5ABH8.png\n",
            "test/MGXYX96J.png\n",
            "test/US59P7G0.png\n",
            "test/O9RZSXAX.png\n",
            "test/141RYRWD.png\n",
            "test/3TAJ3QEZ.png\n",
            "test/ZRZ13Q3X.png\n",
            "test/CJ0W3YE7.png\n",
            "test/09VIVQDZ.png\n",
            "test/IRAR8ZDY.png\n",
            "test/B8XMHR3V.png\n",
            "test/TJVRH53S.png\n",
            "test/49KHFMJB.png\n",
            "test/P2SJ8M42.png\n",
            "test/PGEX94A9.png\n",
            "test/WZB3L02Y.png\n",
            "test/2WG2ENYP.png\n",
            "test/7P95UAWZ.png\n",
            "test/LS5J257T.png\n",
            "test/89ST2C7C.png\n",
            "test/SFT3DT3A.png\n",
            "test/YXLIG3BX.png\n",
            "test/HPZWUCKM.png\n",
            "test/AE02VIJW.png\n",
            "test/J5E85F8D.png\n",
            "test/KA95OJIK.png\n",
            "test/JX2G0Z5S.png\n",
            "test/XQCUPGAZ.png\n",
            "test/3M9ILKO4.png\n",
            "test/QSZTSJ19.png\n",
            "test/FE9IJMIA.png\n",
            "test/T41WEYVP.png\n",
            "test/R74210CW.png\n",
            "test/EZTMHWVF.png\n",
            "test/MNBBRWDE.png\n",
            "test/EM7RFP82.png\n",
            "test/WO5XMU3P.png\n",
            "test/X0BURJDR.png\n",
            "test/J5T6JQXO.png\n",
            "test/LB3FQLCT.png\n",
            "test/Z65WKIWA.png\n",
            "test/BTLJ6ALU.png\n",
            "test/OE1S3SQW.png\n",
            "test/5J7NOGFT.png\n",
            "test/TOVJI7TS.png\n",
            "test/1UKJCHFF.png\n",
            "test/3PL445ZQ.png\n",
            "test/RL71G5SR.png\n",
            "test/DS3R0KXK.png\n",
            "test/ZW6I1CFW.png\n",
            "test/Q5JTI77L.png\n",
            "test/C3RXG2DW.png\n",
            "test/OXSOFQ4H.png\n",
            "test/2KGN4TSJ.png\n",
            "test/OF6CWEHI.png\n",
            "test/6XQOWLOK.png\n",
            "test/1A9C2W5C.png\n",
            "test/YW9XGTLG.png\n",
            "test/1BEYC6ZQ.png\n",
            "test/CZHA1K5C.png\n",
            "test/R47WFQU7.png\n",
            "test/Z6K52OJM.png\n",
            "test/WPGI7U61.png\n",
            "test/YCS3Y0HU.png\n",
            "test/X65Z4GY0.png\n",
            "test/3BX0ECQZ.png\n",
            "test/9XTXV1SV.png\n",
            "test/JZ4CE90T.png\n",
            "test/I78AF13J.png\n",
            "test/LCMEH10B.png\n",
            "test/IXRY22EE.png\n",
            "test/BW0EOLHP.png\n",
            "test/852S0RM1.png\n",
            "test/YEB88ZTR.png\n",
            "test/7ZFWLZG3.png\n",
            "test/4JL0F5V7.png\n",
            "test/XNG720RP.png\n",
            "test/U5WHHPVI.png\n",
            "test/WYEOAXHZ.png\n",
            "test/4V15YL8W.png\n",
            "test/T8RNXKI0.png\n",
            "test/7P5Q9AT7.png\n",
            "test/AYTWXFHA.png\n",
            "test/QFT1CX1J.png\n",
            "test/RBDIJGXX.png\n",
            "test/QOCPMQVQ.png\n",
            "test/X29OB8KX.png\n",
            "test/CA5ZUW1G.png\n",
            "test/UYW9QD5B.png\n",
            "test/Z12SET6R.png\n",
            "test/XJDC6S0M.png\n",
            "test/ZYDJ2JG9.png\n",
            "test/X8J0FO1J.png\n",
            "test/NAB7LDP5.png\n",
            "test/2X7HO8UZ.png\n",
            "test/KZMVR6HG.png\n",
            "test/NQMWK9SX.png\n",
            "test/YKNXPIDQ.png\n",
            "test/S09XBU66.png\n",
            "test/765CKTZ1.png\n",
            "test/WLXRZD6G.png\n",
            "test/T4BGVE7N.png\n",
            "test/7CUI800O.png\n",
            "test/TX4KXFX5.png\n",
            "test/9B50BK2X.png\n",
            "test/0SE5FNRD.png\n",
            "test/B7NTN9Q5.png\n",
            "test/8YFZOXDS.png\n",
            "test/4K39E7BI.png\n",
            "test/F3WRZWFI.png\n",
            "test/1LWJ7NWW.png\n",
            "test/8PX0QVZI.png\n",
            "test/I2DY77G3.png\n",
            "test/T3HE61XW.png\n",
            "test/D5ZGDJLO.png\n",
            "test/ZBS4LDQP.png\n",
            "test/DLXHVCTO.png\n",
            "test/X8YZ18KS.png\n",
            "test/I080RKKC.png\n",
            "test/W7XQ0HTN.png\n",
            "test/M8ZUCOSV.png\n",
            "test/YSFWPMQC.png\n",
            "test/PB7IODI8.png\n",
            "test/PFGFDND4.png\n",
            "test/R06N9S9U.png\n",
            "test/EFHDQ28H.png\n",
            "test/C1SVN01E.png\n",
            "test/85GECT4B.png\n",
            "test/D7GP6INU.png\n",
            "test/81YFWR6R.png\n",
            "test/EIQ7M6AI.png\n",
            "test/TMTD6DVS.png\n",
            "test/9VXGL282.png\n",
            "test/3T00KNQ0.png\n",
            "test/K7L6IWU3.png\n",
            "test/IJR7X18F.png\n",
            "test/6KGW8MAJ.png\n",
            "test/WLEPSHCT.png\n",
            "test/VA6M23NP.png\n",
            "test/8BUFP08Y.png\n",
            "test/KNQ8YYPM.png\n",
            "test/9XFTZIFJ.png\n",
            "test/T0UI4J3A.png\n",
            "test/167AQBRD.png\n",
            "test/IQHD8JX9.png\n",
            "test/CBVOMBZ3.png\n",
            "test/XPBAW7NU.png\n",
            "test/10T4UJRK.png\n",
            "test/HFF2XP21.png\n",
            "test/ZP5Y3LNG.png\n",
            "test/LT43G9FW.png\n",
            "test/WO30M162.png\n",
            "test/YULLZQUC.png\n",
            "test/OP65HHRG.png\n",
            "test/TIUT4UQO.png\n",
            "test/JL7J0DB7.png\n",
            "test/V2HAQ104.png\n",
            "test/78YXT11C.png\n",
            "test/LPRXX6J6.png\n",
            "test/CSJDUR61.png\n",
            "test/EBCCTL2V.png\n",
            "test/5QA56BTK.png\n",
            "test/UCQ6B8O9.png\n",
            "test/PGX6QGWS.png\n",
            "test/RIEZVRXM.png\n",
            "test/S4L9YCPN.png\n",
            "test/DXUSRR6L.png\n",
            "test/THMP624R.png\n",
            "test/AN8JT090.png\n",
            "test/HI109S03.png\n",
            "test/VNENHRP8.png\n",
            "test/8Y8JWO1M.png\n",
            "test/HSP0D90J.png\n",
            "test/9WD1YI61.png\n",
            "test/4SEKL4RC.png\n",
            "test/2Q1QIQNN.png\n",
            "test/YIBRV4JV.png\n",
            "test/CIHVVT9M.png\n",
            "test/UF3JI5L8.png\n",
            "test/W5HJOCOI.png\n",
            "test/S4V100M9.png\n",
            "test/5E0NB1QG.png\n",
            "test/E7YD5VN1.png\n",
            "test/CE5RKEW9.png\n",
            "test/FWDWFILQ.png\n",
            "test/DTRJXIKQ.png\n",
            "test/HCOO32DE.png\n",
            "test/M4QTE9CC.png\n",
            "test/XBJI266N.png\n",
            "test/KEAG0ZB5.png\n",
            "test/1JEY0WCG.png\n",
            "test/3IQ00PZV.png\n",
            "test/UCOUW47O.png\n",
            "test/BUH5GKST.png\n",
            "test/27CMKMPS.png\n",
            "test/LYD5X8KK.png\n",
            "test/WE1KXX2F.png\n",
            "test/PINU80JQ.png\n",
            "test/FQLM8G5Q.png\n",
            "test/O7I1I7ZS.png\n",
            "test/M9J6CVJ4.png\n",
            "test/37OH4XBC.png\n",
            "test/BT8GF0ME.png\n",
            "test/4LMG84TD.png\n",
            "test/TI3W6VVN.png\n",
            "test/SENVEBRL.png\n",
            "test/IQYQVZ6N.png\n",
            "test/QDOYBO1V.png\n",
            "test/86WS8U9O.png\n",
            "test/Q14LQTUM.png\n",
            "test/VGJ9QU2L.png\n",
            "test/ADV6G1UW.png\n",
            "test/NHP2YUL8.png\n",
            "test/4GXEWCIN.png\n",
            "test/3G7L3CVA.png\n",
            "test/EUB1VLPH.png\n",
            "test/9YRGA0TM.png\n",
            "test/MDWA1GOG.png\n",
            "test/A8TC49NK.png\n",
            "test/AMWT4LI6.png\n",
            "test/NMLG3EBE.png\n",
            "test/K3K9DCRW.png\n",
            "test/DDDHNJY0.png\n",
            "test/MK0UQ9LP.png\n",
            "test/9YD8D7K4.png\n",
            "test/SZB997BO.png\n",
            "test/8A2E2I1J.png\n",
            "test/CJAS0JAX.png\n",
            "test/97MS567K.png\n",
            "test/E14C78CA.png\n",
            "test/APSQRJIX.png\n",
            "test/7CP271YK.png\n",
            "test/YGOGYWLG.png\n",
            "test/81FPN29U.png\n",
            "test/HTMVZ73P.png\n",
            "test/XB9ULB7S.png\n",
            "test/YZSYXCMS.png\n",
            "test/O8V183XK.png\n",
            "test/9DOF3Y8H.png\n",
            "test/IL8GH4YK.png\n",
            "test/AA0AGOJ1.png\n",
            "test/DDI537YP.png\n",
            "test/AU5KE0DB.png\n",
            "test/ZDQ5CQ0P.png\n",
            "test/WF1CDRZG.png\n",
            "test/Y9W57GSQ.png\n",
            "test/ZUAFNDYD.png\n",
            "test/9H21JM8H.png\n",
            "test/GEVOZS2X.png\n",
            "test/S7FAJU8Q.png\n",
            "test/SHQNQS0H.png\n",
            "test/L6BMPCI0.png\n",
            "test/W893ED8G.png\n",
            "test/60DGTQ6K.png\n",
            "test/GC2WXAOT.png\n",
            "test/147QVHL1.png\n",
            "test/LEKO8I5X.png\n",
            "test/7VQBGWWR.png\n",
            "test/8VZ7O6GF.png\n",
            "test/N12927GE.png\n",
            "test/A1GMCD2R.png\n",
            "test/RT3603TH.png\n",
            "test/8GMWZUHO.png\n",
            "test/694DYCAZ.png\n",
            "test/4A0G05QB.png\n",
            "test/EVBDD38M.png\n",
            "test/SWB089I9.png\n",
            "test/9KLV9A7N.png\n",
            "test/AG5GXBG3.png\n",
            "test/1Z5W6H4O.png\n",
            "test/NXBHXMAZ.png\n",
            "test/XMPUPC7C.png\n",
            "test/NAB96K93.png\n",
            "test/E8GB1A3O.png\n",
            "test/HY2MQ8PM.png\n",
            "test/TX1DY4HY.png\n",
            "test/ZHNURZH3.png\n",
            "test/V3ZWY8VS.png\n",
            "test/1EGUJACE.png\n",
            "test/6BIZCDA7.png\n",
            "test/DVXZ8SL3.png\n",
            "test/CK3FRB3I.png\n",
            "test/ST3B4M3G.png\n",
            "test/TTSQ2N02.png\n",
            "test/TMD372QS.png\n",
            "test/25SKNSV1.png\n",
            "test/0Z9XYPVS.png\n",
            "test/VCOXL1UW.png\n",
            "test/4G5IIGQU.png\n",
            "test/TD5CMFNY.png\n",
            "test/96GKMV59.png\n",
            "test/9VHWQSEL.png\n",
            "test/PEON354L.png\n",
            "test/903NHZLZ.png\n",
            "test/V9TPVFCN.png\n",
            "test/VGMUZJ8E.png\n",
            "test/IS695UU0.png\n",
            "test/QO829PDW.png\n",
            "test/N6MGGCLY.png\n",
            "test/PKVQPLAG.png\n",
            "test/GQNNH8Q6.png\n",
            "test/2AJFLHQA.png\n",
            "test/IIX7G1Z0.png\n",
            "test/GLCCZWU5.png\n",
            "test/DULW0DKL.png\n",
            "test/5T9UU1SI.png\n",
            "test/RUNU5XC6.png\n",
            "test/XZS1FQQR.png\n",
            "test/SETG0XUR.png\n",
            "test/MC08L8JV.png\n",
            "test/P9M2E94F.png\n",
            "test/1XPYFXIO.png\n",
            "test/8KYHN5KB.png\n",
            "test/4GMZBFX8.png\n",
            "test/D5I5LE4O.png\n",
            "test/O4VZLZXX.png\n",
            "test/070IT1B3.png\n",
            "test/QI976I87.png\n",
            "test/XRQB81IG.png\n",
            "test/NJJ1V45J.png\n",
            "test/8BBJHOQM.png\n",
            "test/1P067VKX.png\n",
            "test/MBALZ91D.png\n",
            "test/YEQEN3J7.png\n",
            "test/8A9AQU56.png\n",
            "test/IHQ923KU.png\n",
            "test/BMBJG0TM.png\n",
            "test/YHY7FUN2.png\n",
            "test/IUNJWFPE.png\n",
            "test/CEULIGKQ.png\n",
            "test/YP07U0ZA.png\n",
            "test/DYS75E3S.png\n",
            "test/59IEVDSR.png\n",
            "test/FCC8TYI2.png\n",
            "test/HFTM1FJS.png\n",
            "test/9HTPIZO7.png\n",
            "test/QVI3MI1R.png\n",
            "test/9U684S1R.png\n",
            "test/3MRSM7EA.png\n",
            "test/M9P7I8AS.png\n",
            "test/AVSW36FU.png\n",
            "test/D0JYT15T.png\n",
            "test/BV36KT6A.png\n",
            "test/WT0209G6.png\n",
            "test/6R4Y590R.png\n",
            "test/2EYWVNIC.png\n",
            "test/HLW05T3T.png\n",
            "test/HXMD7GU6.png\n",
            "test/2GTCL2T1.png\n",
            "test/YDGN05LH.png\n",
            "test/KPRFMFSR.png\n",
            "test/Q6PV7O5B.png\n",
            "test/4JB2JNH8.png\n",
            "test/NIXA0QZ1.png\n",
            "test/9UF0VFWJ.png\n",
            "test/DENEGR8M.png\n",
            "test/LDCUS6OV.png\n",
            "test/IEVUXGER.png\n",
            "test/Y2D5NETZ.png\n",
            "test/6XEC7RCQ.png\n",
            "test/HG08TNR0.png\n",
            "test/FEQV1BY3.png\n",
            "test/0D1WVB94.png\n",
            "test/Y0FB04RZ.png\n",
            "test/1JHXAVSQ.png\n",
            "test/QYE3RY8P.png\n",
            "test/K8DXDN8W.png\n",
            "test/EO1ZWHDQ.png\n",
            "test/5SO9QW6A.png\n",
            "test/IUP9KD37.png\n",
            "test/X0EQSY0G.png\n",
            "test/8J7SAKDP.png\n",
            "test/K4XAOGQ6.png\n",
            "test/TSYYEM2A.png\n",
            "test/LIX0OMR0.png\n",
            "test/V5BJQDHD.png\n",
            "test/P8EG2VPB.png\n",
            "test/X5PVOZYR.png\n",
            "test/0P2TKBKZ.png\n",
            "test/2CCA833K.png\n",
            "test/S11CYTJM.png\n",
            "test/FGUE0HIG.png\n",
            "test/G00242FS.png\n",
            "test/IVC3ZZZS.png\n",
            "test/7MT4M2R2.png\n",
            "test/BNG41ETH.png\n",
            "test/YJ7431MP.png\n",
            "test/8Q4JNC15.png\n",
            "test/V8HT87H7.png\n",
            "test/FW1TMY8J.png\n",
            "test/5MFANICH.png\n",
            "test/IO4KC944.png\n",
            "test/M2SGDUH6.png\n",
            "test/T4Y9OGCO.png\n",
            "test/3CHJQ2F1.png\n",
            "test/R31SCY9R.png\n",
            "test/M8SJS3GM.png\n",
            "test/G8IDD3CH.png\n",
            "test/5GMHTOKQ.png\n",
            "test/QILTJCDD.png\n",
            "test/7VGQE8R4.png\n",
            "test/CJ5YP7CE.png\n",
            "test/FCGVEV3X.png\n",
            "test/VR0XSQST.png\n",
            "test/CAU32Y8S.png\n",
            "test/CV4LFY09.png\n",
            "test/2BDS7I66.png\n",
            "test/HUW1K6C2.png\n",
            "test/ABH0SFSF.png\n",
            "test/8BHM6WFX.png\n",
            "test/B0MBIX1N.png\n",
            "test/E82CTFRZ.png\n",
            "test/K1CF5IH4.png\n",
            "test/MO1AFOH5.png\n",
            "test/ZF1B9ESL.png\n",
            "test/ZF3U4BGM.png\n",
            "test/CMUOYHYE.png\n",
            "test/MK8ET4YQ.png\n",
            "test/T1TN3SHW.png\n",
            "test/URZBZHMN.png\n",
            "test/00Y667ZT.png\n",
            "test/3PB2RPBQ.png\n",
            "test/ZXEGFFIT.png\n",
            "test/P3WW2P7V.png\n",
            "test/XI8Q42YE.png\n",
            "test/SLZQYSW8.png\n",
            "test/IG9KRNKS.png\n",
            "test/BNZBW895.png\n",
            "test/J4W3N732.png\n",
            "test/HZB8BOP5.png\n",
            "test/VW7QDKBX.png\n",
            "test/ACTLVR6D.png\n",
            "test/GX3RS4MN.png\n",
            "test/IUCFP0F6.png\n",
            "test/8MNIJS3U.png\n",
            "test/48W7T2SF.png\n",
            "test/WCUCUCNP.png\n",
            "test/5W23V9SP.png\n",
            "test/MWWTVDOH.png\n",
            "test/YM82CI2N.png\n",
            "test/C1BYYQLX.png\n",
            "test/3ZJ79YWC.png\n",
            "test/7KAWDI9M.png\n",
            "test/249LOEU6.png\n",
            "test/2IQNTP4W.png\n",
            "test/1Y3FQ6HA.png\n",
            "test/JE9VJTFE.png\n",
            "test/8VWNI8IC.png\n",
            "test/JEXVE6N5.png\n",
            "test/1LL2Z2QD.png\n",
            "test/C1T33WB4.png\n",
            "test/ARZ4VQMA.png\n",
            "test/GQNMLBMJ.png\n",
            "test/BE0OBB69.png\n",
            "test/N55SBCP4.png\n",
            "test/WQRSI2QQ.png\n",
            "test/57IWS61V.png\n",
            "test/KRLNHJZF.png\n",
            "test/Y8Y3ZLZK.png\n",
            "test/MWIUM7E9.png\n",
            "test/IVYX4MNK.png\n",
            "test/8FAB9Z4J.png\n",
            "test/05JGQBY4.png\n",
            "test/SYR3VOB2.png\n",
            "test/51OPPN02.png\n",
            "test/VKAST9HE.png\n",
            "test/3BHT4W0O.png\n",
            "test/CCTTYJHJ.png\n",
            "test/ZDF34GC8.png\n",
            "test/E29GR0TM.png\n",
            "test/SX4VR01J.png\n",
            "test/YGTF2KZH.png\n",
            "test/CUXQVHSZ.png\n",
            "test/6YF4M6AI.png\n",
            "test/1CTBIDY0.png\n",
            "test/N1Y5FMQ6.png\n",
            "test/1QRHXY3G.png\n",
            "test/59XEC3WD.png\n",
            "test/SMBYXDJV.png\n",
            "test/535KIBVU.png\n",
            "test/8LVOSUFZ.png\n",
            "test/KGU04VSU.png\n",
            "test/KI20H86W.png\n",
            "test/GHW544YB.png\n",
            "test/H55JY8ME.png\n",
            "test/5JNAAYUX.png\n",
            "test/I828WHWO.png\n",
            "test/P7L9XS1A.png\n",
            "test/7Y56HMHT.png\n",
            "test/FIF52W9Z.png\n",
            "test/V0BMSXQQ.png\n",
            "test/5A6SLEXM.png\n",
            "test/6L0A4943.png\n",
            "test/PGMWJTEN.png\n",
            "test/X0GATY8C.png\n",
            "test/4I9LPPFK.png\n",
            "test/8WKTTN3E.png\n",
            "test/W8BB5K3W.png\n",
            "test/HR9N8P29.png\n",
            "test/CPHJJEB3.png\n",
            "test/ARYLBDFW.png\n",
            "test/7PGYG7NT.png\n",
            "test/8R767JP5.png\n",
            "test/T9C1FU3U.png\n",
            "test/5A52OGT1.png\n",
            "test/BOMVV0EL.png\n",
            "test/T1G7MN9C.png\n",
            "test/RD9HLS1Y.png\n",
            "test/NR28DSIN.png\n",
            "test/GY2J4YIH.png\n",
            "test/UXX2MWHP.png\n",
            "test/XAHMR5GQ.png\n",
            "test/PGV7WOGI.png\n",
            "test/MUMXXJ17.png\n",
            "test/MJF092GE.png\n",
            "test/EI048CE4.png\n",
            "test/UCBA52OE.png\n",
            "test/A8GHOUL2.png\n",
            "test/AVB15YA2.png\n",
            "test/FLFT6JIN.png\n",
            "test/HQC8EGI7.png\n",
            "test/JZAL8DHH.png\n",
            "test/LSSTNI04.png\n",
            "test/QJ7KQWC2.png\n",
            "test/658J7GNH.png\n",
            "test/DVWZL6AL.png\n",
            "test/7CC18NP9.png\n",
            "test/O9S9KY6D.png\n",
            "test/C2KZDE1Z.png\n",
            "test/EMOPF9GF.png\n",
            "test/I626S9LN.png\n",
            "test/Z062F6OC.png\n",
            "test/SS0P5Y79.png\n",
            "test/H2NELL6E.png\n",
            "test/Q7YF6E0K.png\n",
            "test/1X5SF05Z.png\n",
            "test/UVKJ8YB8.png\n",
            "test/O7B7PXG0.png\n",
            "test/PFCXP6K5.png\n",
            "test/SP1I6FGG.png\n",
            "test/DMU8Y14S.png\n",
            "test/LDEKNT4M.png\n",
            "test/OB7E05KR.png\n",
            "test/RN20KCQE.png\n",
            "test/5S136H5G.png\n",
            "test/FDT8C188.png\n",
            "test/XBYVR2H7.png\n",
            "test/O2VINN4U.png\n",
            "test/H66VHC1L.png\n",
            "test/6AII1NI4.png\n",
            "test/1TUPCLFN.png\n",
            "test/053YUCZK.png\n",
            "test/33SNQVYF.png\n",
            "test/1WG1X0VY.png\n",
            "test/U2Z77GYI.png\n",
            "test/AW8812EX.png\n",
            "test/OK29KD5U.png\n",
            "test/TE6PLDCF.png\n",
            "test/6RVPRALB.png\n",
            "test/8DH7AMR3.png\n",
            "test/BP83UJUY.png\n",
            "test/EH29JFBP.png\n",
            "test/3GYC5GUM.png\n",
            "test/VOONINYK.png\n",
            "test/XYELE4ND.png\n",
            "test/SP5FAWWK.png\n",
            "test/JWD0DGNK.png\n",
            "test/CEQMF6V3.png\n",
            "test/H85G4U2Q.png\n",
            "test/48MAFA3G.png\n",
            "test/FVX4AEFV.png\n",
            "test/GAFBN6F9.png\n",
            "test/KV1FUD78.png\n",
            "test/W3W0Z91Z.png\n",
            "test/BKFY0IPI.png\n",
            "test/LWI9HNLS.png\n",
            "test/O7UFVGI2.png\n",
            "test/1IAKE870.png\n",
            "test/Y2SKQHQB.png\n",
            "test/FPORXUEV.png\n",
            "test/TPQ1458A.png\n",
            "test/E4VMNJ2Z.png\n",
            "test/NTAS3A5S.png\n",
            "test/O81UWEN5.png\n",
            "test/FKTO2M9Q.png\n",
            "test/KIPFRO5S.png\n",
            "test/5YKZ4JE1.png\n",
            "test/WQ71DYZC.png\n",
            "test/QMHYPU19.png\n",
            "test/JA9WW5KB.png\n",
            "test/MK3SX8I7.png\n",
            "test/AGQ0AAYI.png\n",
            "test/GTIEWBO4.png\n",
            "test/5KQGU6DQ.png\n",
            "test/A0NQ3YRQ.png\n",
            "test/OCW77DK4.png\n",
            "test/L21AEHDV.png\n",
            "test/EFM1IYKY.png\n",
            "test/M0E1XSSU.png\n",
            "test/P60S2JME.png\n",
            "test/J3XOL0RX.png\n",
            "test/6DEIF0GY.png\n",
            "test/2A90PUUQ.png\n",
            "test/1E3XZG05.png\n",
            "test/U4WX0TBW.png\n",
            "test/XF9358EZ.png\n",
            "test/GL4HN78G.png\n",
            "test/2Y99WN6H.png\n",
            "test/Y1N6DRZR.png\n",
            "test/QBWRZHA3.png\n",
            "test/YT71FN9O.png\n",
            "test/2NERUY2R.png\n",
            "test/62S8MK18.png\n",
            "test/F7PLS622.png\n",
            "test/8UZRX4X1.png\n",
            "test/8HH6WT8O.png\n",
            "test/GCX23I2A.png\n",
            "test/VEKFE8C1.png\n",
            "test/9GB1LE56.png\n",
            "test/VMF8PRHF.png\n",
            "test/GJLDZHKT.png\n",
            "test/EU7FOKNZ.png\n",
            "test/0XEIHSSM.png\n",
            "test/Y0WH0KZL.png\n",
            "test/KZEQ1H77.png\n",
            "test/Y5UY6NQF.png\n",
            "test/1BWR6EB1.png\n",
            "test/LKLB9DIX.png\n",
            "test/L3WJ3TW0.png\n",
            "test/TIOAUIT2.png\n",
            "test/5ZZ683JI.png\n",
            "test/MY31UI7Q.png\n",
            "test/73Y9QJS6.png\n",
            "test/L1P9M611.png\n",
            "test/7STMP1YO.png\n",
            "test/69J25MUX.png\n",
            "test/Y38XPSZ0.png\n",
            "test/8S3H6OHJ.png\n",
            "test/I7OCFOXI.png\n",
            "test/OGF5KKOQ.png\n",
            "test/33QESVZ0.png\n",
            "test/PYAT6JT1.png\n",
            "test/1NYE277I.png\n",
            "test/NHEIR3EY.png\n",
            "test/0L3OCAHF.png\n",
            "test/GZ9ZU0YD.png\n",
            "test/Q9KEQHEX.png\n",
            "test/IAPW72NY.png\n",
            "test/1RAXAYE8.png\n",
            "test/A59SGY7G.png\n",
            "test/2FLXR0VW.png\n",
            "test/GW4H9EKE.png\n",
            "test/F6RB86GC.png\n",
            "test/BMONDX8Y.png\n",
            "test/4EL3ARRX.png\n",
            "test/3MQNM1XW.png\n",
            "test/DJDG2QSC.png\n",
            "test/WYTBDLM7.png\n",
            "test/MV1MD6BH.png\n",
            "test/MGNE7A9B.png\n",
            "test/4TDTCH37.png\n",
            "test/KR13PKV5.png\n",
            "test/IZHQZ4WF.png\n",
            "test/9MLOMD9O.png\n",
            "test/M01PPL9C.png\n",
            "test/VDYBOSY8.png\n",
            "test/2XMEXL5Q.png\n",
            "test/G0UUI7ZZ.png\n",
            "test/CZNLSUK1.png\n",
            "test/Z83XGWIQ.png\n",
            "test/3A62F5U0.png\n",
            "test/1DIJY31B.png\n",
            "test/PXWQXEW3.png\n",
            "test/K93QCGJR.png\n",
            "test/SB4H26OM.png\n",
            "test/PQ727WEC.png\n",
            "test/5TUHSOLH.png\n",
            "test/SHJ7XS2D.png\n",
            "test/JJ6QEVTQ.png\n",
            "test/8HMH20Y9.png\n",
            "test/ZUA03HOT.png\n",
            "test/B462TAMS.png\n",
            "test/SYD9D01D.png\n",
            "test/ER0M7HF6.png\n",
            "test/7BICJV5Z.png\n",
            "test/8DPEQMZN.png\n",
            "test/O8W6HTYQ.png\n",
            "test/AZDTHMWM.png\n",
            "test/OK4Q289P.png\n",
            "test/QHF2AQ5U.png\n",
            "test/PD3NK2YN.png\n",
            "test/2QZRTSQB.png\n",
            "test/BM0EFLTI.png\n",
            "test/GFG2375Y.png\n",
            "test/CDHAE02W.png\n",
            "test/8DRUL0SL.png\n",
            "test/Q6KAJACJ.png\n",
            "test/92V95JZ8.png\n",
            "test/IG8ORE5X.png\n",
            "test/ATZF1C1D.png\n",
            "test/PAYOMNWI.png\n",
            "test/4UXSVJIY.png\n",
            "test/M8P79ZK7.png\n",
            "test/QYF1KQFE.png\n",
            "test/XHNF27DQ.png\n",
            "test/JY0FULLT.png\n",
            "test/5M9VF0VH.png\n",
            "test/HHC8M5LE.png\n",
            "test/4OHNOBR0.png\n",
            "test/3NFRU8C7.png\n",
            "test/TKJHUWOH.png\n",
            "test/NKTGWAFM.png\n",
            "test/2YXPX5PB.png\n",
            "test/358XC6M3.png\n",
            "test/RLITR8FQ.png\n",
            "test/40WYT8U4.png\n",
            "test/S6AHU0K2.png\n",
            "test/BN6KBJRM.png\n",
            "test/CYKR54DK.png\n",
            "test/2JP61UU9.png\n",
            "test/6BCSBNDJ.png\n",
            "test/XX0ZNA6H.png\n",
            "test/J4ASW2BJ.png\n",
            "test/RLE79D0B.png\n",
            "test/5FZ08G7V.png\n",
            "test/X8DT4IG7.png\n",
            "test/QYZCPQT5.png\n",
            "test/IY3C0D4D.png\n",
            "test/MKL7M6TK.png\n",
            "test/ZQGQKGZN.png\n",
            "test/JE79001K.png\n",
            "test/QRCNA1F7.png\n",
            "test/OM0Z0VQ5.png\n",
            "test/3AY8WGBT.png\n",
            "test/GHFVSUIV.png\n",
            "test/P9AI4F02.png\n",
            "test/H7VLGABT.png\n",
            "test/H72U3MKW.png\n",
            "test/DTUKSONV.png\n",
            "test/P7DT1LIL.png\n",
            "test/VNP7NWJ2.png\n",
            "test/526M704Y.png\n",
            "test/G3GP6WBB.png\n",
            "test/Z1ABZY9Q.png\n",
            "test/NZQWW05C.png\n",
            "test/XI8Q5U5U.png\n",
            "test/COF43UQV.png\n",
            "test/6CC1C1A2.png\n",
            "test/6GM7BJFD.png\n",
            "test/PL067TPW.png\n",
            "test/QVG2GI7L.png\n",
            "test/OOQOD7BH.png\n",
            "test/RSEZBF5T.png\n",
            "test/2NVMP0AN.png\n",
            "test/PK5XH3Q3.png\n",
            "test/ZGGCAIN2.png\n",
            "test/0KBTCEJ8.png\n",
            "test/T5DZT0OI.png\n",
            "test/6SSFYY02.png\n",
            "test/D3HT1K3A.png\n",
            "test/R96JPO2X.png\n",
            "test/FJFG9SQZ.png\n",
            "test/XLIVLW31.png\n",
            "test/YKHQ9R0S.png\n",
            "test/6T2PTSYW.png\n",
            "test/GXV6MAFN.png\n",
            "test/5627CEH0.png\n",
            "test/NRNNZ1VK.png\n",
            "test/F2TOHDUY.png\n",
            "test/TIBRTC2Q.png\n",
            "test/PPSY5TXK.png\n",
            "test/DSVXP08Z.png\n",
            "test/IN65LUVQ.png\n",
            "test/X6QTPS5S.png\n",
            "test/BHRA6D2T.png\n",
            "test/S2ZHAKAV.png\n",
            "test/08PJKDUD.png\n",
            "test/JOTFTJDU.png\n",
            "test/9IGND9JV.png\n",
            "test/ERSGT8ML.png\n",
            "test/Z0175HET.png\n",
            "test/2F7Z0Z4Q.png\n",
            "test/E1XVPO9U.png\n",
            "test/HISYJ8VI.png\n",
            "test/S1R6QO3A.png\n",
            "test/I5XN9QCD.png\n",
            "test/DQQY6F28.png\n",
            "test/6VMLDO2E.png\n",
            "test/3Q7POQHQ.png\n",
            "test/Q2M4STSE.png\n",
            "test/0URKALRN.png\n",
            "test/HLSRPSUP.png\n",
            "test/VGU9VCNZ.png\n",
            "test/76MKV8KX.png\n",
            "test/LNL5KSV3.png\n",
            "test/3VW526VY.png\n",
            "test/KQC6MX2E.png\n",
            "test/4SRA7N5I.png\n",
            "test/PHBHUDM3.png\n",
            "test/2KYUN749.png\n",
            "test/QDMP8K2F.png\n",
            "test/2M881MW7.png\n",
            "test/R18L8SFI.png\n",
            "test/VOEU2ZYT.png\n",
            "test/F0CFU5ZU.png\n",
            "test/BN48COQ4.png\n",
            "test/RNXNHAI4.png\n",
            "test/ZX7PV5BH.png\n",
            "test/EAB97M27.png\n",
            "test/6XSWL3NT.png\n",
            "test/VK67HA7E.png\n",
            "test/83ZQI2CO.png\n",
            "test/CLXGTH3U.png\n",
            "test/DYJDXB5Z.png\n",
            "test/I7P5N4LR.png\n",
            "test/NT755EH9.png\n",
            "test/JXK7NOG2.png\n",
            "test/6FDR2EX3.png\n",
            "test/LUDQJMJ3.png\n",
            "test/CJZ2BCQK.png\n",
            "test/K1N6BINY.png\n",
            "test/08F4B5WZ.png\n",
            "test/88E2SY5X.png\n",
            "test/DK43JTNN.png\n",
            "test/GA2PIUKX.png\n",
            "test/GWYTW15G.png\n",
            "test/3ULPC5VS.png\n",
            "test/HVVRRUSG.png\n",
            "test/GY9HIQQ9.png\n",
            "test/XJKYBPAL.png\n",
            "test/HQBNCEGS.png\n",
            "test/N538OYQ6.png\n",
            "test/CG21XQT5.png\n",
            "test/1NLCNZYM.png\n",
            "test/6NNJEV49.png\n",
            "test/V3EDDWM2.png\n",
            "test/GNQTXAVY.png\n",
            "test/Y6CW0WLE.png\n",
            "test/LZOS8QWR.png\n",
            "test/UXCWH7GN.png\n",
            "test/T2AK3AAV.png\n",
            "test/1H9Z54UC.png\n",
            "test/6UVQ1XHG.png\n",
            "test/6F91CUAU.png\n",
            "test/B2P9VKLM.png\n",
            "test/ZDJNTX97.png\n",
            "test/AITFWKES.png\n",
            "test/JXFCTB3Z.png\n",
            "test/SW6GSMNF.png\n",
            "test/UPHSKA2F.png\n",
            "test/PPCDUR16.png\n",
            "test/KZLSPZPS.png\n",
            "test/K8Y8W4BJ.png\n",
            "test/HD1I18SL.png\n",
            "test/G3ZTM85F.png\n",
            "test/G5FC0XSN.png\n",
            "test/WURQ99ZE.png\n",
            "test/QORTPHUS.png\n",
            "test/3AO4T5Q3.png\n",
            "test/9F92KLR2.png\n",
            "test/GE292PIN.png\n",
            "test/OIXNIN8M.png\n",
            "test/Y9NTGZCG.png\n",
            "test/SSFEFJ4X.png\n",
            "test/0AX1QPG9.png\n",
            "test/H971LH18.png\n",
            "test/QLB8F1XF.png\n",
            "test/9WUFC6FE.png\n",
            "test/4AQ77QGS.png\n",
            "test/HEOQ5M0X.png\n",
            "test/Q7QDWZQT.png\n",
            "test/FY6VUEEC.png\n",
            "test/6HXH5HDA.png\n",
            "test/KN5TM9HD.png\n",
            "test/54M3SM1U.png\n",
            "test/XSCK1BHE.png\n",
            "test/H78W1PV8.png\n",
            "test/WYQ92TS9.png\n",
            "test/SB7KMADP.png\n",
            "test/XXCQXL04.png\n",
            "test/52SDK3QC.png\n",
            "test/XMPLVA3T.png\n",
            "test/1CYD0J6M.png\n",
            "test/11P74VZV.png\n",
            "test/GVV8OXMX.png\n",
            "test/AOCSGA0N.png\n",
            "test/Q0DD3W17.png\n",
            "test/YROKP4SR.png\n",
            "test/DQR81THL.png\n",
            "test/BGQV3DZZ.png\n",
            "test/VAFT7PPJ.png\n",
            "test/C8TJHA64.png\n",
            "test/XS3VS8FW.png\n",
            "test/38DVYMUP.png\n",
            "test/VA495YRZ.png\n",
            "test/PX5BG9GG.png\n",
            "test/075FQBQ2.png\n",
            "test/DE41ETBN.png\n",
            "test/UM92OG6T.png\n",
            "test/YJAX7AE8.png\n",
            "test/685NO91O.png\n",
            "test/B5QZFREM.png\n",
            "test/XSISQOPS.png\n",
            "test/WMUQ8U7N.png\n",
            "test/8DZ5Z6MI.png\n",
            "test/HM19CNIG.png\n",
            "test/ZST4UHAU.png\n",
            "test/OGBG2FLC.png\n",
            "test/AOEDT01M.png\n",
            "test/C88VSSKD.png\n",
            "test/0O0GEVG3.png\n",
            "test/M26WPHPE.png\n",
            "test/CPPQCBSM.png\n",
            "test/5VOZK5RG.png\n",
            "test/2NW0GM1L.png\n",
            "test/FY6VAO0U.png\n",
            "test/Q7C6WGD4.png\n",
            "test/2F7XJ52Y.png\n",
            "test/XIKNCVZR.png\n",
            "test/AR9XOL89.png\n",
            "test/73F07JKT.png\n",
            "test/167WBHTT.png\n",
            "test/KTAYKGO4.png\n",
            "test/XP8ZPIVJ.png\n",
            "test/JGPJ5PMO.png\n",
            "test/WOL830IN.png\n",
            "test/0CUKEXUM.png\n",
            "test/66EG3XO5.png\n",
            "test/4FVZQAAJ.png\n",
            "test/NH4FGJI0.png\n",
            "test/ICAYUWUX.png\n",
            "test/T1U0X8TE.png\n",
            "test/FE5SH6FT.png\n",
            "test/3ONMXYQR.png\n",
            "test/O895PLWW.png\n",
            "test/U9LUQOAA.png\n",
            "test/I7TK1ZM6.png\n",
            "test/4FN71HPN.png\n",
            "test/OV0E1RIV.png\n",
            "test/4WBZM047.png\n",
            "test/JLET7A2L.png\n",
            "test/KCKLEW5V.png\n",
            "test/0004TGCC.png\n",
            "test/NZJUZLSI.png\n",
            "test/8MVQ6Z3C.png\n",
            "test/4YM8T5QA.png\n",
            "test/VPZPGIQE.png\n",
            "test/9XV3OVFJ.png\n",
            "test/K7WE5ILO.png\n",
            "test/O34M1IAQ.png\n",
            "test/HLMIV557.png\n",
            "test/GUSKOTQ9.png\n",
            "test/8CQ0FWJF.png\n",
            "test/VGF39I62.png\n",
            "test/T3HEFYTZ.png\n",
            "test/BSIOXI82.png\n",
            "test/UAGNQ8AM.png\n",
            "test/BFXVPQZ4.png\n",
            "test/GHGUQ143.png\n",
            "test/X9O4WIXA.png\n",
            "test/1Z71S9EQ.png\n",
            "test/TP89OPBQ.png\n",
            "test/8KK7PRHD.png\n",
            "test/QHQFWQJN.png\n",
            "test/X42W1O9H.png\n",
            "test/PZ4EO62D.png\n",
            "test/5LGODR1K.png\n",
            "test/K7N619BX.png\n",
            "test/0IBUZ1ZN.png\n",
            "test/9NQJQP1A.png\n",
            "test/ILCI39MK.png\n",
            "test/TQ7SRZAI.png\n",
            "test/U859GOW8.png\n",
            "test/O7YKLKW1.png\n",
            "test/RSWES4E2.png\n",
            "test/0WCUFAV4.png\n",
            "test/9BO7E13U.png\n",
            "test/NX0GJ5AS.png\n",
            "test/EUVE233C.png\n",
            "test/57I3EBWA.png\n",
            "test/WUSGZ5H4.png\n",
            "test/E44A61EX.png\n",
            "test/D1ZNRAWA.png\n",
            "test/B0NK8ZPS.png\n",
            "test/QLVSMHIM.png\n",
            "test/A83T6JML.png\n",
            "test/ZM6NU34T.png\n",
            "test/EMUPBDW4.png\n",
            "test/2MOIYZSH.png\n",
            "test/5BPG9DZ7.png\n",
            "test/WFJA6VRB.png\n",
            "test/Q7M5XW9Z.png\n",
            "test/98XEHJ9P.png\n",
            "test/9WMM4CPJ.png\n",
            "test/KOW0CR8P.png\n",
            "test/NAEA17AR.png\n",
            "test/SKJEIOEV.png\n",
            "test/8YELZGA8.png\n",
            "test/K4R7V5L2.png\n",
            "test/NF7VWT9I.png\n",
            "test/704HNIK7.png\n",
            "test/2NRBTI8A.png\n",
            "test/VPPADO79.png\n",
            "test/OUAE9CTG.png\n",
            "test/P3IAY3HR.png\n",
            "test/2A5MIRFE.png\n",
            "test/DGQPQ4I4.png\n",
            "test/DCBGYY8P.png\n",
            "test/PVCKAIW4.png\n",
            "test/ASE9I31F.png\n",
            "test/XYQGY6XY.png\n",
            "test/V85OZKIC.png\n",
            "test/K05BYQEE.png\n",
            "test/ISFAI54B.png\n",
            "test/RVID6870.png\n",
            "test/U3WST0O4.png\n",
            "test/3DKDRQ5U.png\n",
            "test/H3H1BU9T.png\n",
            "test/HYK0BO54.png\n",
            "test/7NB187HZ.png\n",
            "test/Y2MVJNZL.png\n",
            "test/CQ00FG35.png\n",
            "test/UH1TI7TM.png\n",
            "test/PX0SFKH9.png\n",
            "test/TRU2TX9N.png\n",
            "test/26T2FGPQ.png\n",
            "test/CLRYJ8YV.png\n",
            "test/EQ3B8UWJ.png\n",
            "test/4DUH3KWP.png\n",
            "test/VJ2A5610.png\n",
            "test/1NCNVQGC.png\n",
            "test/69AZF7M9.png\n",
            "test/XFZ9NCG2.png\n",
            "test/EJ1N1Z9T.png\n",
            "test/2JGYFUO2.png\n",
            "test/NLMVTALO.png\n",
            "test/PYGTOWQU.png\n",
            "test/T36CPUIA.png\n",
            "test/XWK73SSN.png\n",
            "test/GIN0SZDQ.png\n",
            "test/HPGY4NN4.png\n",
            "test/IS96UN66.png\n",
            "test/ZR9K3N3D.png\n",
            "test/0XFN38ZE.png\n",
            "test/93OZP6GP.png\n",
            "test/TWKY07T9.png\n",
            "test/MLDO6X6B.png\n",
            "test/T0WJTRQH.png\n",
            "test/KY6RVQ2I.png\n",
            "test/SXTZIHQC.png\n",
            "test/5LTDJWYX.png\n",
            "test/YSASLFNF.png\n",
            "test/U7XQIFDA.png\n",
            "test/L4DSF0Z5.png\n",
            "test/W1PZXIGW.png\n",
            "test/WMLPNTPB.png\n",
            "test/ETW2Y2HB.png\n",
            "test/1NCCHGG3.png\n",
            "test/YKSNIZ7B.png\n",
            "test/WN2BU7YR.png\n",
            "test/NPA57XHY.png\n",
            "test/HKD7ZJPR.png\n",
            "test/OKND1CSN.png\n",
            "test/I2L4EJV5.png\n",
            "test/VCI61H3D.png\n",
            "test/K2D3972U.png\n",
            "test/RB9Y8Y5W.png\n",
            "test/ZIK55751.png\n",
            "test/EOE5YZFS.png\n",
            "test/PIRQCETT.png\n",
            "test/UZXYKBUT.png\n",
            "test/5V05U3EH.png\n",
            "test/P90KD7X4.png\n",
            "test/N5JEAVJZ.png\n",
            "test/K0WGDESN.png\n",
            "test/LM2UU690.png\n",
            "test/D8GW7TRQ.png\n",
            "test/2T1B8VPF.png\n",
            "test/6CRALVM3.png\n",
            "test/IV787HN6.png\n",
            "test/75QK2K6P.png\n",
            "test/SNFB1BFU.png\n",
            "test/4Q3SES76.png\n",
            "test/F4KCL0Y8.png\n",
            "test/BN60Z591.png\n",
            "test/593LZVV8.png\n",
            "test/D0SITLJW.png\n",
            "test/3L7H2A3S.png\n",
            "test/CGI5P5PO.png\n",
            "test/S45F61LX.png\n",
            "test/N26DZFQL.png\n",
            "test/50EL0DQV.png\n",
            "test/ADBSXJ7M.png\n",
            "test/5BDUZAUJ.png\n",
            "test/18BO29W0.png\n",
            "test/GQEXHR8L.png\n",
            "test/4I5BTYDU.png\n",
            "test/AR3B9FMD.png\n",
            "test/HFJ3DUXH.png\n",
            "test/RWSJGO10.png\n",
            "test/XZXWAUCJ.png\n",
            "test/1W26Y5QY.png\n",
            "test/7OLNZVKG.png\n",
            "test/W03K9BAT.png\n",
            "test/GAY1EEAK.png\n",
            "test/NX440T34.png\n",
            "test/ZLOOTSRS.png\n",
            "test/1I2FSEFZ.png\n",
            "test/V1TLWYGW.png\n",
            "test/15KLRMZP.png\n",
            "test/FCQBIVBS.png\n",
            "test/AFKIK0CP.png\n",
            "test/67WH2T7G.png\n",
            "test/AY4YJBJ0.png\n",
            "test/6UC9ODVJ.png\n",
            "test/20AJM1BF.png\n",
            "test/IN2GX462.png\n",
            "test/B21GNF5P.png\n",
            "test/MK507L7T.png\n",
            "test/0EZSRU6M.png\n",
            "test/HHGJ8X4F.png\n",
            "test/M230FKST.png\n",
            "test/K8XUOKAB.png\n",
            "test/GRYERW9O.png\n",
            "test/JGY0O013.png\n",
            "test/9VOZPJRQ.png\n",
            "test/FZOJNA1J.png\n",
            "test/K7GS6URM.png\n",
            "test/M46MS4ZU.png\n",
            "test/XFLW7L9V.png\n",
            "test/0Y9BOQOT.png\n",
            "test/B3Y6ZD8N.png\n",
            "test/IIAD7ZR4.png\n",
            "test/74Z0LUGP.png\n",
            "test/8XBJG7AE.png\n",
            "test/R74B56IQ.png\n",
            "test/S7M123S9.png\n",
            "test/I5HPVALF.png\n",
            "test/5GID3ITJ.png\n",
            "test/RHVOGFJL.png\n",
            "test/CDQMSKAP.png\n",
            "test/LBDLWACS.png\n",
            "test/V7I3ZCHQ.png\n",
            "test/I6DQS3LL.png\n",
            "test/MFMG1FDX.png\n",
            "test/OROJMVP4.png\n",
            "test/KZCZ6G3O.png\n",
            "test/RFHN3G1R.png\n",
            "test/8OOR8MLK.png\n",
            "test/GHAGFONB.png\n",
            "test/ZV8D1P4A.png\n",
            "test/CN2PB45M.png\n",
            "test/5T4TME3M.png\n",
            "test/F955SWBV.png\n",
            "test/8K4SHS43.png\n",
            "test/EG2ROSZ5.png\n",
            "test/1OFZN3CU.png\n",
            "test/TKBJ3VP5.png\n",
            "test/J3BF4ZXY.png\n",
            "test/E08HNKRJ.png\n",
            "test/QFR7STYM.png\n",
            "test/XR00I2U7.png\n",
            "test/0VAWP3L8.png\n",
            "test/NEFRUU30.png\n",
            "test/7AERGO9A.png\n",
            "test/TEFGICLN.png\n",
            "test/H9Y17XYG.png\n",
            "test/T34I6GLI.png\n",
            "test/UP3V9PG5.png\n",
            "test/SQBOAFOK.png\n",
            "test/F860E9AT.png\n",
            "test/KEPUXV2M.png\n",
            "test/QE17W70K.png\n",
            "test/9T662RRM.png\n",
            "test/TEWAUAAY.png\n",
            "test/W40JHTOY.png\n",
            "test/TWD99QXR.png\n",
            "test/EPY31OBP.png\n",
            "test/0C96Z772.png\n",
            "test/WJQ8LYXF.png\n",
            "test/6MH4EX5A.png\n",
            "test/FPHNKCQD.png\n",
            "test/ZKA9FB8E.png\n",
            "test/9GCSNH9A.png\n",
            "test/Y1E9VG57.png\n",
            "test/R3ZH5AGS.png\n",
            "test/8GXGT4ZF.png\n",
            "test/MSW79LZH.png\n",
            "test/6R840PJQ.png\n",
            "test/HJCXB4PB.png\n",
            "test/V9J3X5G7.png\n",
            "test/QDYBCM5P.png\n",
            "test/O226AHUG.png\n",
            "test/KFMPHW5B.png\n",
            "test/FM5I1TN3.png\n",
            "test/3P18YUE9.png\n",
            "test/5ZVZNBSE.png\n",
            "test/7WQUPJPJ.png\n",
            "test/XMX5XKO3.png\n",
            "test/XB1XYPRU.png\n",
            "test/QF2D2ZEA.png\n",
            "test/TMMGL2YC.png\n",
            "test/PLVNF158.png\n",
            "test/QQ4YLZDN.png\n",
            "test/S1P3BI71.png\n",
            "test/1FDP4SV4.png\n",
            "test/H5WJDFL0.png\n",
            "test/LH1HULYL.png\n",
            "test/FQFWO9MY.png\n",
            "test/PGK6AWQ9.png\n",
            "test/4QM42XYW.png\n",
            "test/7LD7RY8T.png\n",
            "test/PUABA3BV.png\n",
            "test/H3H4OT5P.png\n",
            "test/9V3TPKMU.png\n",
            "test/THE68GVT.png\n",
            "test/4WGFQ34M.png\n",
            "test/63ICDZK2.png\n",
            "test/NIZYIKON.png\n",
            "test/19GXPZ49.png\n",
            "test/HA76TRN6.png\n",
            "test/ROTQ4YJ9.png\n",
            "test/1RYS9J5G.png\n",
            "test/CWCMKI05.png\n",
            "test/5V56QING.png\n",
            "test/LJPD35IG.png\n",
            "test/1O0MRWDH.png\n",
            "test/KW7WPHXG.png\n",
            "test/6A78ERE7.png\n",
            "test/BB98FJT4.png\n",
            "test/22SDX8DS.png\n",
            "test/WRMBGV1N.png\n",
            "test/M2NWWLY4.png\n",
            "test/PGVA0N7J.png\n",
            "test/TV93JIKA.png\n",
            "test/F6ZGTUCM.png\n",
            "test/EHW7OK57.png\n",
            "test/GAD3710Z.png\n",
            "test/MYNHAVDS.png\n",
            "test/PVWYD7TO.png\n",
            "test/RSR32A4B.png\n",
            "test/I337CE8O.png\n",
            "test/GHR6IYGK.png\n",
            "test/9J9QYTHQ.png\n",
            "test/ZWTZWPGL.png\n",
            "test/FX5JXIUF.png\n",
            "test/YW9CGI1L.png\n",
            "test/E7SZX4PX.png\n",
            "test/F66NZ6Y5.png\n",
            "test/FE5QFT8K.png\n",
            "test/CRNDZXXN.png\n",
            "test/MWB66D79.png\n",
            "test/AMFO1IQX.png\n",
            "test/XS8ZE17V.png\n",
            "test/Y1OFLTID.png\n",
            "test/Z05NFTIQ.png\n",
            "test/GQJM916R.png\n",
            "test/5HJYMQFN.png\n",
            "test/VXY66GBD.png\n",
            "test/Y6YL86GE.png\n",
            "test/GN58KQ19.png\n",
            "test/XJ8TD9SH.png\n",
            "test/KOUF5B66.png\n",
            "test/W15GZJOD.png\n",
            "test/ZXSZ1U7V.png\n",
            "test/ERGQVBV4.png\n",
            "test/AH6GJCDI.png\n",
            "test/8SU3XOLU.png\n",
            "test/N7F3M8AB.png\n",
            "test/GN47COBJ.png\n",
            "test/ZM0ECR30.png\n",
            "test/ONCPUEU6.png\n",
            "test/GS09BVZJ.png\n",
            "test/VNCA2SIF.png\n",
            "test/RFH9RJSI.png\n",
            "test/5N2BGV1A.png\n",
            "test/CV96IO2S.png\n",
            "test/OXGHY3QI.png\n",
            "test/HLDFLLAL.png\n",
            "test/LBVLWYCS.png\n",
            "test/9LU6YFWY.png\n",
            "test/S4VR0V0Q.png\n",
            "test/Y4O0AFN4.png\n",
            "test/ZDQC4362.png\n",
            "test/A5XOMJJI.png\n",
            "test/TZV7NDZF.png\n",
            "test/Z66L8LZJ.png\n",
            "test/9WXO2IFZ.png\n",
            "test/NDPJF7S4.png\n",
            "test/ZR7KOOVN.png\n",
            "test/27FY042Q.png\n",
            "test/A67PEAM0.png\n",
            "test/KEWVDFIF.png\n",
            "test/F941GAQ2.png\n",
            "test/0B1Q99FL.png\n",
            "test/E0GC43AX.png\n",
            "test/YDX7GJLG.png\n",
            "test/SFD35PN7.png\n",
            "test/YCHB5XWC.png\n",
            "test/GVF58QGO.png\n",
            "test/E4IOC0UZ.png\n",
            "test/1OQ3L09F.png\n",
            "test/CKW8Q2MF.png\n",
            "test/9J10EQV2.png\n",
            "test/ZS1P7V8T.png\n",
            "test/SKHCR08Z.png\n",
            "test/HTMZE9JV.png\n",
            "test/NKPBD3O5.png\n",
            "test/VWWUUHJB.png\n",
            "test/XHEI62OX.png\n",
            "test/AK0QCAJA.png\n",
            "test/B2DS88VC.png\n",
            "test/ZB2MUBUU.png\n",
            "test/GRGH1SAP.png\n",
            "test/4GYIE8MK.png\n",
            "test/D0JHS5Z2.png\n",
            "test/TGTFJQZK.png\n",
            "test/ZGVPMEFV.png\n",
            "test/UNZ9UKCD.png\n",
            "test/ZG8OC3G3.png\n",
            "test/G06P1VIL.png\n",
            "test/XSNXT2DY.png\n",
            "test/5LAUJVQI.png\n",
            "test/U9V4ZQFZ.png\n",
            "test/0SOJO99Q.png\n",
            "test/GOCOJKUV.png\n",
            "test/ULDJ3J2J.png\n",
            "test/Y6CGYA6M.png\n",
            "test/6Z0NSGH8.png\n",
            "test/FTSZ0MAO.png\n",
            "test/0IQ9KP95.png\n",
            "test/PFVAF8FE.png\n",
            "test/FJMN5BJX.png\n",
            "test/O8794KIC.png\n",
            "test/LOG9BDS2.png\n",
            "test/MSZOHW8D.png\n",
            "test/4X45ABMU.png\n",
            "test/KCZ8N5AG.png\n",
            "test/2BHVHBIE.png\n",
            "test/REJBC8V3.png\n",
            "test/1JCFNMPR.png\n",
            "test/NYTT3G2I.png\n",
            "test/CSA5BER2.png\n",
            "test/RC9YCHDP.png\n",
            "test/F02OWVDM.png\n",
            "test/19Y2ML4S.png\n",
            "test/3U06ZM96.png\n",
            "test/SJQUTCO6.png\n",
            "test/6QGOPL5P.png\n",
            "test/1JSEZCTN.png\n",
            "test/IJCIO1ZI.png\n",
            "test/45YEB1RM.png\n",
            "test/HQUXLOXJ.png\n",
            "test/SAJXAQUX.png\n",
            "test/4HZ5UXIJ.png\n",
            "test/MLFBN6OS.png\n",
            "test/A7SZU9N3.png\n",
            "test/GR3IUJ76.png\n",
            "test/MKY8AJY2.png\n",
            "test/HLA9KVNX.png\n",
            "test/TYOM8H0X.png\n",
            "test/Y2HKOBMJ.png\n",
            "test/1EYMJX9K.png\n",
            "test/RGKACZAA.png\n",
            "test/5VGV7KFR.png\n",
            "test/WT1SLEUN.png\n",
            "test/609833GW.png\n",
            "test/R6ZWKG41.png\n",
            "test/YNXO1SUA.png\n",
            "test/WVS4IQ9B.png\n",
            "test/4JAB7OX3.png\n",
            "test/SV4CXGYK.png\n",
            "test/ZK4ZMN29.png\n",
            "test/6SUIU2U3.png\n",
            "test/XF5PEW7P.png\n",
            "test/3TV8CXU2.png\n",
            "test/GJF6V2R7.png\n",
            "test/EC3OXFN9.png\n",
            "test/XSTRHHVP.png\n",
            "test/7XFXHXLP.png\n",
            "test/HS9W8QPT.png\n",
            "test/NU9LB8XS.png\n",
            "test/JOXK8EC2.png\n",
            "test/TYBFPIZ6.png\n",
            "test/Y8YCSDUT.png\n",
            "test/ZFPMY00L.png\n",
            "test/XNH4Z2CE.png\n",
            "test/B4H2WTPZ.png\n",
            "test/UPEV7EZZ.png\n",
            "test/31QI1WI0.png\n",
            "test/0K7TZ5JJ.png\n",
            "test/88QBFWGB.png\n",
            "test/RJ8TVHSC.png\n",
            "test/7W21SNIL.png\n",
            "test/1AZEVUCU.png\n",
            "test/SQQ4A592.png\n",
            "test/W5SRI74A.png\n",
            "test/4X4KI0II.png\n",
            "test/5MGURYOP.png\n",
            "test/42JDF4SJ.png\n",
            "test/UHBSA4U7.png\n",
            "test/PKSHSP9T.png\n",
            "test/4EG5Y6L3.png\n",
            "test/CWZ55JJ7.png\n",
            "test/P9OI7I37.png\n",
            "test/CGHMZYVC.png\n",
            "test/UFJ4RX9K.png\n",
            "test/AU50LL04.png\n",
            "test/RZ2R56H1.png\n",
            "test/0KZLNP0E.png\n",
            "test/6603VS8Y.png\n",
            "test/D2FT9VK1.png\n",
            "test/V1FBFP43.png\n",
            "test/7VYQUIYM.png\n",
            "test/DZMNJ7DH.png\n",
            "test/SH0M5Y7V.png\n",
            "test/2UO7X8PA.png\n",
            "test/LRFQT247.png\n",
            "test/HKUMDA5D.png\n",
            "test/3APF6Y2Y.png\n",
            "test/KJNVK5MQ.png\n",
            "test/3XM66XAY.png\n",
            "test/Q1PJHS2K.png\n",
            "test/HIEC03CW.png\n",
            "test/KDN1M6Q2.png\n",
            "test/7RIQG294.png\n",
            "test/TK3B6DVJ.png\n",
            "test/JC4FR0WT.png\n",
            "test/1GCY49BL.png\n",
            "test/5PV1RDUJ.png\n",
            "test/9HBEQ17Z.png\n",
            "test/2HA9SBJZ.png\n",
            "test/TXFZTSSW.png\n",
            "test/KW5WTE13.png\n",
            "test/P3IE3L1E.png\n",
            "test/0AFN5ZV5.png\n",
            "test/H43BJ8VE.png\n",
            "test/ATBA9TXT.png\n",
            "test/4ITVIR86.png\n",
            "test/C6LYK3CM.png\n",
            "test/WDRRDE5T.png\n",
            "test/NM568AJ0.png\n",
            "test/KAW466ZY.png\n",
            "test/L1NO9WZG.png\n",
            "test/65E9EMY0.png\n",
            "test/53IHQU8W.png\n",
            "test/AIQEJBF3.png\n",
            "test/KS03MB42.png\n",
            "test/EOKWQ1Y8.png\n",
            "test/K82KSBRZ.png\n",
            "test/ENLJC5PE.png\n",
            "test/2JNWPCQO.png\n",
            "test/BLLZIC1B.png\n",
            "test/RSX5C5F0.png\n",
            "test/5XXKP9FK.png\n",
            "test/REB4N7B0.png\n",
            "test/WT3KFMVX.png\n",
            "test/RQFAMQ7Q.png\n",
            "test/YNVU31RW.png\n",
            "test/G4LQ1XXJ.png\n",
            "test/I8CO2DTW.png\n",
            "test/4EYU1R9A.png\n",
            "test/ROHO7OSA.png\n",
            "test/DQE6WY68.png\n",
            "test/50GAN0R5.png\n",
            "test/FXN3MN5H.png\n",
            "test/J6AWQATJ.png\n",
            "test/XT6OG6W2.png\n",
            "test/DIHAQQ3P.png\n",
            "test/7CRKIILE.png\n",
            "test/VNL6NS9G.png\n",
            "test/EW0NMC7T.png\n",
            "test/38D6VLAW.png\n",
            "test/6XLMAGHI.png\n",
            "test/71IGLLIK.png\n",
            "test/LR84VNIE.png\n",
            "test/UZPXK5GE.png\n",
            "test/WTFL38GO.png\n",
            "test/ERFNM34V.png\n",
            "test/ZBFTUNTE.png\n",
            "test/78KIRLRJ.png\n",
            "test/0VM6GNNF.png\n",
            "test/EF40Y2BK.png\n",
            "test/KSQATTPW.png\n",
            "test/EUXQU81S.png\n",
            "test/6ERZL4SJ.png\n",
            "test/E2T7N6N5.png\n",
            "test/GAOI200V.png\n",
            "test/PD88YXOA.png\n",
            "test/NFL07FDH.png\n",
            "test/N86G1HZK.png\n",
            "test/AEX25DQR.png\n",
            "test/MEEWETAA.png\n",
            "test/APANI9NM.png\n",
            "test/0SSD08XC.png\n",
            "test/NK8BV1T6.png\n",
            "test/WATR0XYE.png\n",
            "test/SHUI96QS.png\n",
            "test/LU13UFSX.png\n",
            "test/W98ABM1I.png\n",
            "test/DTEBI8CP.png\n",
            "test/LEMSL7S0.png\n",
            "test/W6JMXIE2.png\n",
            "test/4QNU4SSY.png\n",
            "test/NM2YPP3S.png\n",
            "test/0GNGXM28.png\n",
            "test/FEUJHDUD.png\n",
            "test/C0Y01ZA7.png\n",
            "test/6KRHPY8H.png\n",
            "test/VG6ZHYYB.png\n",
            "test/T0VXWY5G.png\n",
            "test/NGK78SQE.png\n",
            "test/YHN5RCED.png\n",
            "test/WBPIU4OF.png\n",
            "test/R0K2BEVA.png\n",
            "test/8O5TYPRR.png\n",
            "test/X3YHE8G9.png\n",
            "test/CXBFP0A3.png\n",
            "test/7YUSF7WR.png\n",
            "test/RDLZAK51.png\n",
            "test/Y8XKVCHS.png\n",
            "test/KQRVK73I.png\n",
            "test/EQIT3IWY.png\n",
            "test/XMVCR5FX.png\n",
            "test/XE8HIX8C.png\n",
            "test/5CQKGJ1X.png\n",
            "test/QJK2O8S9.png\n",
            "test/SY2OWL4B.png\n",
            "test/JHDQ64SC.png\n",
            "test/CVSO4IWM.png\n",
            "test/ERUX82GT.png\n",
            "test/Y496C6FA.png\n",
            "test/W7IZMJ57.png\n",
            "test/IY7MEVBB.png\n",
            "test/3V6KF13B.png\n",
            "test/4OLSX1ZB.png\n",
            "test/8V5BN8AS.png\n",
            "test/PYHGXNJV.png\n",
            "test/DXNTKYER.png\n",
            "test/344V6F43.png\n",
            "test/IG5S4D6G.png\n",
            "test/LRI5SLHA.png\n",
            "test/WM4IDMDN.png\n",
            "test/YIVPWSW3.png\n",
            "test/6EIGARX9.png\n",
            "test/3HV3MYGM.png\n",
            "test/NFYJ3HJZ.png\n",
            "test/N0U2ZY9D.png\n",
            "test/REODPPH6.png\n",
            "test/5DNZJILM.png\n",
            "test/RAJI4HEY.png\n",
            "test/PML7ZJ5A.png\n",
            "test/HWWV2X5J.png\n",
            "test/YK21X94O.png\n",
            "test/MBFT15I0.png\n",
            "test/UWGVR9NY.png\n",
            "test/IAVUEKYA.png\n",
            "test/V5LZ6LVU.png\n",
            "test/0R61112H.png\n",
            "test/YJLUKMWO.png\n",
            "test/F7SD4MKH.png\n",
            "test/DDD4SLYD.png\n",
            "test/0UENFM0T.png\n",
            "test/LKOJ11IK.png\n",
            "test/LWQE018D.png\n",
            "test/NE8EI8L2.png\n",
            "test/OEVV19T9.png\n",
            "test/MVHLDA08.png\n",
            "test/4AFELH16.png\n",
            "test/K7XGSQ7V.png\n",
            "test/JRA2GZ4Q.png\n",
            "test/WD6IR21V.png\n",
            "test/2ARJM4V0.png\n",
            "test/417M4POV.png\n",
            "test/UJ4BCZ6R.png\n",
            "test/PODUJU9Z.png\n",
            "test/FJ1RZ3U4.png\n",
            "test/7Q9I3Z1X.png\n",
            "test/PB1KXNCM.png\n",
            "test/7ABYKUP0.png\n",
            "test/8PA1625S.png\n",
            "test/BKKMVLS5.png\n",
            "test/XMF3MAX0.png\n",
            "test/WX5N0MIT.png\n",
            "test/DTVZDD0O.png\n",
            "test/VXYNWVML.png\n",
            "test/75TI7G3F.png\n",
            "test/HALK8555.png\n",
            "test/E4RQ0C9J.png\n",
            "test/VIUSDELS.png\n",
            "test/6PXYETZ9.png\n",
            "test/1QSTYDT0.png\n",
            "test/U5R4P8NV.png\n",
            "test/KMOQLOR3.png\n",
            "test/WQFMKWFI.png\n",
            "test/VDPN3KVS.png\n",
            "test/41QVMCLG.png\n",
            "test/USZGIPW4.png\n",
            "test/TZ3XTX5Y.png\n",
            "test/113TM2OZ.png\n",
            "test/LSOLLT7G.png\n",
            "test/SHSUE8V8.png\n",
            "test/G57REWAX.png\n",
            "test/Z57S3OUS.png\n",
            "test/A1I29ITS.png\n",
            "test/3UTVZDRE.png\n",
            "test/RN8AKRKR.png\n",
            "test/3ZEEIUGO.png\n",
            "test/4UDFN2Q0.png\n",
            "test/I1CMXNT4.png\n",
            "test/GBLZPEY4.png\n",
            "test/FPF8VVYI.png\n",
            "test/QQKZAY8C.png\n",
            "test/T1KMSU18.png\n",
            "test/CCK6CRH5.png\n",
            "test/EZEPMIQQ.png\n",
            "test/E51GNSWH.png\n",
            "test/LOBE7HFP.png\n",
            "test/S8KC5APO.png\n",
            "test/ZRZULSW0.png\n",
            "test/KPQNVLH1.png\n",
            "test/X8V1MG4O.png\n",
            "test/BJ0OHQWT.png\n",
            "test/VXIM5WK0.png\n",
            "test/15ME2CT2.png\n",
            "test/U1A7I89R.png\n",
            "test/D890BYIO.png\n",
            "test/4XZKICS2.png\n",
            "test/KCIU2B2F.png\n",
            "test/95H02EXA.png\n",
            "test/NEA1PYH9.png\n",
            "test/V5U86JBI.png\n",
            "test/IATQDF0F.png\n",
            "test/5FAXBM0N.png\n",
            "test/9GGO466W.png\n",
            "test/PP4PGH4S.png\n",
            "test/UHHUMUOD.png\n",
            "test/UTTIKFDM.png\n",
            "test/MGFQXGK9.png\n",
            "test/BYOA5E3Y.png\n",
            "test/PSURR8GU.png\n",
            "test/SQMS9QJU.png\n",
            "test/1S7Y0Y66.png\n",
            "test/R5W18BW7.png\n",
            "test/BLVVYECY.png\n",
            "test/HK3EWDYD.png\n",
            "test/USC37IPN.png\n",
            "test/FQPF5GPT.png\n",
            "test/180ORPRB.png\n",
            "test/BPVD78KF.png\n",
            "test/1JSNI8RR.png\n",
            "test/X876D6HQ.png\n",
            "test/YB13QK71.png\n",
            "test/1PN9WZH0.png\n",
            "test/HSRFM6CG.png\n",
            "test/W7R3HFUK.png\n",
            "test/1EDIKOCH.png\n",
            "test/MERBFCWS.png\n",
            "test/RMA0XX6Z.png\n",
            "test/O6GNYV41.png\n",
            "test/5QR9TTEB.png\n",
            "test/DMPZKG16.png\n",
            "test/8KCH2BQJ.png\n",
            "test/1PSL9N9J.png\n",
            "test/NJRLE80Y.png\n",
            "test/VYZ8N8AM.png\n",
            "test/O9BU4QDR.png\n",
            "test/HOYXY4XE.png\n",
            "test/B2NTHQOV.png\n",
            "test/ALYTK9DJ.png\n",
            "test/Z2WN47VT.png\n",
            "test/5IFWAMJD.png\n",
            "test/F4BCIISH.png\n",
            "test/UUOKO7ZH.png\n",
            "test/D0706IDR.png\n",
            "test/XPM3J7QG.png\n",
            "test/3EX8HXKY.png\n",
            "test/X1OM3S0K.png\n",
            "test/9T6QIAZ2.png\n",
            "test/SDZ4B4LA.png\n",
            "test/7Y5MY1IM.png\n",
            "test/SSSW8JIA.png\n",
            "test/9OQO8DCU.png\n",
            "test/P7M7D7P5.png\n",
            "test/CFMH0ECC.png\n",
            "test/GFIK12GI.png\n",
            "test/W2ZJGJ9T.png\n",
            "test/0FDJUUT3.png\n",
            "test/EUGXNYPR.png\n",
            "test/VNPGWW9E.png\n",
            "test/QJPQIXPS.png\n",
            "test/CYGADT6F.png\n",
            "test/GUA1XK4U.png\n",
            "test/319AY5T7.png\n",
            "test/3JK0LAL6.png\n",
            "test/STB76XPJ.png\n",
            "test/ZOTHWY3V.png\n",
            "test/NRYSKLKU.png\n",
            "test/JEL62H3S.png\n",
            "test/6QJ9X8Z0.png\n",
            "test/2G194BII.png\n",
            "test/YCG5YAVQ.png\n",
            "test/PJXUYOV2.png\n",
            "test/Y044OCVH.png\n",
            "test/0J735KWI.png\n",
            "test/TW6DYZ3Y.png\n",
            "test/LW6P1FNV.png\n",
            "test/7RGA3R3B.png\n",
            "test/0PR1HR1N.png\n",
            "test/QAAYJ6OO.png\n",
            "test/6D0BYOLD.png\n",
            "test/PVTP59XA.png\n",
            "test/JZMZ6P7N.png\n",
            "test/YYU842LX.png\n",
            "test/20X76HIT.png\n",
            "test/D9TU7JBX.png\n",
            "test/BURKZYCO.png\n",
            "test/3Z1ODXID.png\n",
            "test/OXEH9HBP.png\n",
            "test/M7ET09KZ.png\n",
            "test/LSRTZ6AE.png\n",
            "test/EPT2UOAH.png\n",
            "test/67YIE0IX.png\n",
            "test/O1G8OCFL.png\n",
            "test/XVC1MAME.png\n",
            "test/UQ6VM68R.png\n",
            "test/HDFSMETI.png\n",
            "test/R0JG017M.png\n",
            "test/1XBH4L4I.png\n",
            "test/AQJV1ZLL.png\n",
            "test/HMOR3M4Y.png\n",
            "test/N3HTU3WU.png\n",
            "test/AN3TPH8D.png\n",
            "test/DTDSNWX6.png\n",
            "test/YCKXLKKH.png\n",
            "test/CRCEK26H.png\n",
            "test/30IHK1QR.png\n",
            "test/TGMN2AWR.png\n",
            "test/9RLGMPP6.png\n",
            "test/KA3SJRAL.png\n",
            "test/MSDZN9A2.png\n",
            "test/ACFZL14Z.png\n",
            "test/YP8K6EMN.png\n",
            "test/JHO7VBKK.png\n",
            "test/VQ0O1MHS.png\n",
            "test/48UW8KXP.png\n",
            "test/65Y08YZE.png\n",
            "test/W24VW01B.png\n",
            "test/9PF51RF2.png\n",
            "test/KQ0D0ER4.png\n",
            "test/SQEPZUAE.png\n",
            "test/OKOQCMZH.png\n",
            "test/1VXY73QX.png\n",
            "test/NWV01D66.png\n",
            "test/7FGCV4HN.png\n",
            "test/TI5UW382.png\n",
            "test/DWBGE2CK.png\n",
            "test/8SQRJ5RE.png\n",
            "test/4AGXH0ZY.png\n",
            "test/X7QXAFAV.png\n",
            "test/9B1HEG6Y.png\n",
            "test/KODTWP9B.png\n",
            "test/R3KH9I4M.png\n",
            "test/BYMPJOBL.png\n",
            "test/C58ZR6A0.png\n",
            "test/3ZQRU0H6.png\n",
            "test/52HTN5LS.png\n",
            "test/4MG4OAF2.png\n",
            "test/T318YY54.png\n",
            "test/1GKT5C6X.png\n",
            "test/PKYJLANT.png\n",
            "test/JKF0CCIQ.png\n",
            "test/MCYLT2IE.png\n",
            "test/E65888NI.png\n",
            "test/263HRY3W.png\n",
            "test/2FXAP61V.png\n",
            "test/00J6CTJ6.png\n",
            "test/DRUICDXR.png\n",
            "test/O78K3U0E.png\n",
            "test/82P5KA4S.png\n",
            "test/RNOAILT9.png\n",
            "test/DH2C21YL.png\n",
            "test/Y6MYW9KG.png\n",
            "test/FAOKO60F.png\n",
            "test/98AN6KWP.png\n",
            "test/5WFWCK5M.png\n",
            "test/GLLS6MHN.png\n",
            "test/1LU8FA17.png\n",
            "test/KV8YIMRY.png\n",
            "test/37G8V3C5.png\n",
            "test/RPIE60D4.png\n",
            "test/CA657NI5.png\n",
            "test/ABA3ZZIO.png\n",
            "test/BQIAL618.png\n",
            "test/NLRX3RGA.png\n",
            "test/ACCNR8ZJ.png\n",
            "test/WY0NCI5P.png\n",
            "test/D1T42S7O.png\n",
            "test/B07DVZQJ.png\n",
            "test/QOOXNPAU.png\n",
            "test/1J30PP4W.png\n",
            "test/4GH6EQEI.png\n",
            "test/X8MRPD1I.png\n",
            "test/9DYSJG3I.png\n",
            "test/BH0GURP4.png\n",
            "test/UIQ4S4DK.png\n",
            "test/OX2E1FO8.png\n",
            "test/TKGVTGGR.png\n",
            "test/BDL4VW9B.png\n",
            "test/B70LTF6W.png\n",
            "test/SOTIMYQO.png\n",
            "test/VMWYTCKD.png\n",
            "test/CEVG6H9D.png\n",
            "test/TABM60YK.png\n",
            "test/3PHF6QAP.png\n",
            "test/X45AMEJN.png\n",
            "test/3NWVMJWH.png\n",
            "test/KBLPO551.png\n",
            "test/IEEO30F0.png\n",
            "test/HUC64LWV.png\n",
            "test/Q9ZF8KS0.png\n",
            "test/NRFSKZP0.png\n",
            "test/VWEXE6QU.png\n",
            "test/0543S2ZJ.png\n",
            "test/QIYMSAHS.png\n",
            "test/RVPSVM5G.png\n",
            "test/ERSIBA9Y.png\n",
            "test/WBJVF4OS.png\n",
            "test/383GJBEX.png\n",
            "test/X39HPQLZ.png\n",
            "test/LW3TX1LK.png\n",
            "test/AINE637Z.png\n",
            "test/B9G10AX8.png\n",
            "test/LFBKT38C.png\n",
            "test/TW6VFL5D.png\n",
            "test/840WPGN4.png\n",
            "test/RKNMB5T7.png\n",
            "test/W4EPUZA8.png\n",
            "test/XIRFXGFX.png\n",
            "test/GP9UYZS2.png\n",
            "test/TPYRWZVV.png\n",
            "test/FZI8QLSJ.png\n",
            "test/RHNU5HZ3.png\n",
            "test/GS2OT7MQ.png\n",
            "test/8VOIC035.png\n",
            "test/IN1BOAHK.png\n",
            "test/HAD2QVZG.png\n",
            "test/WIX1P7GK.png\n",
            "test/8K54BXU5.png\n",
            "test/93NVOVUD.png\n",
            "test/8HDL1FW7.png\n",
            "test/SHAVMJEC.png\n",
            "test/L00M06BJ.png\n",
            "test/GF040LMM.png\n",
            "test/T8AKXUTG.png\n",
            "test/P38ZIJ4Q.png\n",
            "test/V4GLVKI5.png\n",
            "test/FXWJCZ30.png\n",
            "test/LZNKV02O.png\n",
            "test/0YGLIDPW.png\n",
            "test/DMQA9QYU.png\n",
            "test/U7881UE4.png\n",
            "test/SJNKTR61.png\n",
            "test/NTSVVNAW.png\n",
            "test/GV0YW8A1.png\n",
            "test/AI7ZA9Z7.png\n",
            "test/Q1IU319V.png\n",
            "test/VOTVV2VY.png\n",
            "test/JZ1QH7AR.png\n",
            "test/VYNKZAN2.png\n",
            "test/JHIR8KLE.png\n",
            "test/Y8PB6TNT.png\n",
            "test/2IFCQCOP.png\n",
            "test/OPWEMERA.png\n",
            "test/V59NWVL3.png\n",
            "test/FWTRYKH3.png\n",
            "test/GERTUHCA.png\n",
            "test/GY2FI2WE.png\n",
            "test/FQOM6C6E.png\n",
            "test/KP8UD0C2.png\n",
            "test/ISVKAC5V.png\n",
            "test/CSD6ALIF.png\n",
            "test/F7W1937E.png\n",
            "test/RW9IOQ3O.png\n",
            "test/8PEODYQL.png\n",
            "test/AJTM8ASP.png\n",
            "test/LTRBIBJR.png\n",
            "test/TQSABVHN.png\n",
            "test/57ROSBIQ.png\n",
            "test/QU1C2USD.png\n",
            "test/ICEGZLQU.png\n",
            "test/DP7MVFDJ.png\n",
            "test/TPZ3EP8M.png\n",
            "test/NW6PH4P2.png\n",
            "test/9P0NXMLS.png\n",
            "test/4IOWQQVN.png\n",
            "test/MLNB3GRD.png\n",
            "test/MA5OUBUG.png\n",
            "test/UC03UNPB.png\n",
            "test/7C51K599.png\n",
            "test/RMVKJ2O4.png\n",
            "test/0KKW56DP.png\n",
            "test/YYLSOS94.png\n",
            "test/V3HUNAUS.png\n",
            "test/I3Z1W5ZU.png\n",
            "test/537RI5LV.png\n",
            "test/P1EF6UFB.png\n",
            "test/GZ0JI6IN.png\n",
            "test/UC6KMZE9.png\n",
            "test/0ZDGAQ66.png\n",
            "test/CID5H9F1.png\n",
            "test/EIONOY4J.png\n",
            "test/7MTGZ33F.png\n",
            "test/2SUQIF9F.png\n",
            "test/XT1L8C8U.png\n",
            "test/4QWLQDTV.png\n",
            "test/PHI5VEGF.png\n",
            "test/E75R304A.png\n",
            "test/4TB0SD67.png\n",
            "test/4B24VTIS.png\n",
            "test/17VAWD6D.png\n",
            "test/JZG2DEIV.png\n",
            "test/J1LJWVZ8.png\n",
            "test/4CLMFB49.png\n",
            "test/6BGEUXQR.png\n",
            "test/205OPHJL.png\n",
            "test/EYTWSN2L.png\n",
            "test/V6NX1MTQ.png\n",
            "test/IKEL2Q6Q.png\n",
            "test/KZWBVVRB.png\n",
            "test/03KA7ID9.png\n",
            "test/W0MGZENZ.png\n",
            "test/8QT4EH91.png\n",
            "test/ASHQOTPT.png\n",
            "test/TZZC8N2T.png\n",
            "test/ALBMB8ER.png\n",
            "test/2490C0EH.png\n",
            "test/VIAZYXPB.png\n",
            "test/X030ER5B.png\n",
            "test/3HMTWEZH.png\n",
            "test/M7EXNJID.png\n",
            "test/FDKMUYSP.png\n",
            "test/VPT4TLKN.png\n",
            "test/7FHKBTSY.png\n",
            "test/SPR25482.png\n",
            "test/YAQPKB3P.png\n",
            "test/8W3M5082.png\n",
            "test/L16SZHYC.png\n",
            "test/RXEYS8RV.png\n",
            "test/N1MXCJR5.png\n",
            "test/R6PZ6VVO.png\n",
            "test/SOQVOSXP.png\n",
            "test/9O0IKO62.png\n",
            "test/4EHL5QKL.png\n",
            "test/8B7MKXUZ.png\n",
            "test/MUQWPXAK.png\n",
            "test/1CB3S6SE.png\n",
            "test/5M23VXW5.png\n",
            "test/62SQNJTO.png\n",
            "test/GUT1Z0E6.png\n",
            "test/F604ZPSC.png\n",
            "test/QS03Z6UU.png\n",
            "test/KGERABZH.png\n",
            "test/IGQ9LHD4.png\n",
            "test/4WLIWOWT.png\n",
            "test/1UTHR6BB.png\n",
            "test/RHD6UT3K.png\n",
            "test/1D40ML8F.png\n",
            "test/2JQV939I.png\n",
            "test/18JN5LLC.png\n",
            "test/OSHFOR5K.png\n",
            "test/SNM1S386.png\n",
            "test/LNQPU9FI.png\n",
            "test/UXFK6IQL.png\n",
            "test/ALVC9C52.png\n",
            "test/XWF6KIQU.png\n",
            "test/ZC5ECIN7.png\n",
            "test/FN8OP16Q.png\n",
            "test/ZGC3OLAS.png\n",
            "test/2SI197S6.png\n",
            "test/TJ2IAI73.png\n",
            "test/HINM2IRP.png\n",
            "test/4NXCDUS0.png\n",
            "test/HRYVZHOB.png\n",
            "test/C569CEJS.png\n",
            "test/10V61SLT.png\n",
            "test/1CSPCQ4M.png\n",
            "test/5LFW8HJC.png\n",
            "test/3KLH7HVX.png\n",
            "test/IWH9ZKSU.png\n",
            "test/VXN21UR9.png\n",
            "test/09VCYD6C.png\n",
            "test/PHLUVYBJ.png\n",
            "test/GWH06L1J.png\n",
            "test/RMEHUA7I.png\n",
            "test/O0GRASV5.png\n",
            "test/IAKPLIWR.png\n",
            "test/XTUHEZQN.png\n",
            "test/KXNFOAAE.png\n",
            "test/M1Z172TO.png\n",
            "test/KHKH82I4.png\n",
            "test/7KAVW5TN.png\n",
            "test/K1HN3U8Q.png\n",
            "test/L2T2R1BC.png\n",
            "test/WDSBMLTB.png\n",
            "test/1GB1P26C.png\n",
            "test/TK293IKA.png\n",
            "test/233Y1OLM.png\n",
            "test/6HYO4K3S.png\n",
            "test/GLJEJDV5.png\n",
            "test/6VYYL18V.png\n",
            "test/V8LU2SGV.png\n",
            "test/3R031Y5H.png\n",
            "test/9LH8ECSA.png\n",
            "test/ORVMY0LW.png\n",
            "test/JDDUODZ1.png\n",
            "test/TJG791IG.png\n",
            "test/R60F6GMK.png\n",
            "test/DPT2XHE4.png\n",
            "test/ZCQHRVOK.png\n",
            "test/OBDAGTLB.png\n",
            "test/YAYXCAWI.png\n",
            "test/BQVMKQWE.png\n",
            "test/9FMZ04RT.png\n",
            "test/KN9IPBR1.png\n",
            "test/DKJGX0AN.png\n",
            "test/EG058IYL.png\n",
            "test/8Y5DQIG7.png\n",
            "test/AQ84LNAQ.png\n",
            "test/HMIG9O5L.png\n",
            "test/DOATGE9T.png\n",
            "test/CJDVSMNO.png\n",
            "test/CDAH0OI7.png\n",
            "test/ZO322R4Q.png\n",
            "test/U3ATFJGI.png\n",
            "test/IU3LCAQG.png\n",
            "test/IT9OVRVT.png\n",
            "test/9VUJWVI0.png\n",
            "test/WKRN2EEY.png\n",
            "test/5XSQ5MJP.png\n",
            "test/AKF99O4Q.png\n",
            "test/WXTJP8EW.png\n",
            "test/HPU406YH.png\n",
            "test/XVU5FNTV.png\n",
            "test/E3GDH7V5.png\n",
            "test/5DJZAHOE.png\n",
            "test/KYCQGUEF.png\n",
            "test/61H23JWF.png\n",
            "test/Q7W6H5QE.png\n",
            "test/HIIZIARW.png\n",
            "test/7TXE7KS4.png\n",
            "test/TT3TXS6K.png\n",
            "test/4WZYMBTC.png\n",
            "test/IYFU8OWI.png\n",
            "test/Y57IZH6M.png\n",
            "test/UUUZKEHR.png\n",
            "test/29UX8GMZ.png\n",
            "test/RF3IHK2L.png\n",
            "test/OBYHB00C.png\n",
            "test/SROH7UNA.png\n",
            "test/VJQZKFD1.png\n",
            "test/Q58CDQTW.png\n",
            "test/YSMJLK18.png\n",
            "test/D51VDMB8.png\n",
            "test/P8SJPKXK.png\n",
            "test/DMY1BEN0.png\n",
            "test/1IZPXPN9.png\n",
            "test/0LPNHTSB.png\n",
            "test/I3RF4P12.png\n",
            "test/BNVBKTI8.png\n",
            "test/75M4NPQX.png\n",
            "test/368XHYZU.png\n",
            "test/XM445G6H.png\n",
            "test/UONOTLGZ.png\n",
            "test/8HMKNUDF.png\n",
            "test/XMHE25ME.png\n",
            "test/2236XNNK.png\n",
            "test/9YDW0HZJ.png\n",
            "test/NEVJAVKH.png\n",
            "test/Y24KUQCQ.png\n",
            "test/VZ90CIFO.png\n",
            "test/ISYKPQGU.png\n",
            "test/X3PQOFHE.png\n",
            "test/HJZ9J511.png\n",
            "test/0QFJJX9Y.png\n",
            "test/LU37KQZL.png\n",
            "test/TMFXGYSA.png\n",
            "test/WFQ1074P.png\n",
            "test/MU0S5OQJ.png\n",
            "test/WOZJ3FFV.png\n",
            "test/2R26FNMH.png\n",
            "test/UFKB255I.png\n",
            "test/7UKQRGT6.png\n",
            "test/6QP6YQBT.png\n",
            "test/JZP2Z8HY.png\n",
            "test/KQBICNWA.png\n",
            "test/J3WXCDPI.png\n",
            "test/0F8JN3RW.png\n",
            "test/GUMOJ8A8.png\n",
            "test/53TJDY8L.png\n",
            "test/A8X0TQUI.png\n",
            "test/FQQOTW1I.png\n",
            "test/AEOQ2743.png\n",
            "test/59P9P77R.png\n",
            "test/U906AFHF.png\n",
            "test/9IE28XLP.png\n",
            "test/UOC4V9HZ.png\n",
            "test/4TA4LY2A.png\n",
            "test/QWVXPG8E.png\n",
            "test/0EBV5UDU.png\n",
            "test/534O9IND.png\n",
            "test/LX21PCJJ.png\n",
            "test/C0228R73.png\n",
            "test/TTVJZYQ6.png\n",
            "test/DVESOV0C.png\n",
            "test/LP24EVV5.png\n",
            "test/X72GB7P7.png\n",
            "test/O942NVA3.png\n",
            "test/YS5WKWPY.png\n",
            "test/WIWG4QCT.png\n",
            "test/U2G44JKC.png\n",
            "test/GZGSORQH.png\n",
            "test/QJAMK4ZC.png\n",
            "test/KYTLWXMJ.png\n",
            "test/1MFZTPJ5.png\n",
            "test/6HWMKHV1.png\n",
            "test/J9WZT6SF.png\n",
            "test/I6QA7ACE.png\n",
            "test/X7JDLVMZ.png\n",
            "test/QNESUFVZ.png\n",
            "test/QME0Q7ND.png\n",
            "test/0YFFUI4H.png\n",
            "test/5WNSTGV9.png\n",
            "test/NJC5EOXO.png\n",
            "test/Y4LV9WZ0.png\n",
            "test/YVTIL8QG.png\n",
            "test/O5W5A5RY.png\n",
            "test/5GIHV655.png\n",
            "test/64WNSRC0.png\n",
            "test/2BU5I6MN.png\n",
            "test/ZZJ1YE0X.png\n",
            "test/KP2C8A03.png\n",
            "test/UV8KLKXO.png\n",
            "test/1KBXVX6T.png\n",
            "test/CCEP375J.png\n",
            "test/R25BQBEW.png\n",
            "test/EJTUBH4E.png\n",
            "test/1EPSLBGK.png\n",
            "test/0ELVTTLJ.png\n",
            "test/CYOI40ZD.png\n",
            "test/47K84DEM.png\n",
            "test/BXUBZKC4.png\n",
            "test/Q4SSGWU2.png\n",
            "test/ZZYISCEF.png\n",
            "test/WDUX4NYQ.png\n",
            "test/A8WMCM6F.png\n",
            "test/9RUKU5JA.png\n",
            "test/1GKIRSWF.png\n",
            "test/FDSE84SU.png\n",
            "test/Q9ECQBJK.png\n",
            "test/JLZV6LQK.png\n",
            "test/7PII4YXO.png\n",
            "test/XYLNEBTN.png\n",
            "test/SL2J03L9.png\n",
            "test/QTHJSB05.png\n",
            "test/A58V5E40.png\n",
            "test/YDX0X3NN.png\n",
            "test/KQE1E7BR.png\n",
            "test/85Q9TR0F.png\n",
            "test/2N81NQRX.png\n",
            "test/DH443ZLP.png\n",
            "test/GUKMINAJ.png\n",
            "test/QSE5BNAM.png\n",
            "test/952MI5UT.png\n",
            "test/AEFP9ETB.png\n",
            "test/UEFC32SF.png\n",
            "test/6MMGJRK1.png\n",
            "test/5LDLRY3F.png\n",
            "test/IHAOKR9C.png\n",
            "test/Y6P4NHGX.png\n",
            "test/RL54XM68.png\n",
            "test/WU0U8HES.png\n",
            "test/RPAUKBTZ.png\n",
            "test/EIR6SLX2.png\n",
            "test/BSMBMC5R.png\n",
            "test/0TWYKW1Z.png\n",
            "test/6IKJ2C43.png\n",
            "test/V3BVTI37.png\n",
            "test/NLF0UL8U.png\n",
            "test/A67J7UGV.png\n",
            "test/2QZDM0R3.png\n",
            "test/VBF4BZT5.png\n",
            "test/66BZO2BJ.png\n",
            "test/JGHMI5MS.png\n",
            "test/CLJV4YUY.png\n",
            "test/XGPU40WR.png\n",
            "test/BRAVW3RW.png\n",
            "test/NENN1Q06.png\n",
            "test/WYSL7V1E.png\n",
            "test/QZENM89M.png\n",
            "test/YPFMXYSP.png\n",
            "test/O5KJ485U.png\n",
            "test/B11QV5VU.png\n",
            "test/MWQORBLH.png\n",
            "test/7UKRF42F.png\n",
            "test/B3ZF00IL.png\n",
            "test/YE6W3F1Y.png\n",
            "test/BG8M16VU.png\n",
            "test/7CGKHG7C.png\n",
            "test/NCB0HTLW.png\n",
            "test/I5UVOSFS.png\n",
            "test/1BS292V2.png\n",
            "test/B2TUO7Q7.png\n",
            "test/ADQWLMGB.png\n",
            "test/MMINKMWI.png\n",
            "test/3VMB9PO3.png\n",
            "test/P8J4XRKG.png\n",
            "test/0NF9V7B1.png\n",
            "test/4QO26MW3.png\n",
            "test/QQ6AFU36.png\n",
            "test/QNP4BSZY.png\n",
            "test/YNYP8TJM.png\n",
            "test/AVJU1G9D.png\n",
            "test/LQ5UDWX9.png\n",
            "test/836UPAGY.png\n",
            "test/TSQ3L0YA.png\n",
            "test/E4I8ZBZH.png\n",
            "test/ZDZK6VWM.png\n",
            "test/L4YNFVUQ.png\n",
            "test/NBSUX0BA.png\n",
            "test/7DVA018L.png\n",
            "test/XE73UTGK.png\n",
            "test/KZ1M9B5W.png\n",
            "test/24U7U3AO.png\n",
            "test/WRLJHSAV.png\n",
            "test/1ML58ZRM.png\n",
            "test/T168EAMQ.png\n",
            "test/PAB1G86O.png\n",
            "test/EI6HDRH1.png\n",
            "test/886I7HE5.png\n",
            "test/933Z0KWB.png\n",
            "test/9MBSBBL7.png\n",
            "test/YG7RKP9Z.png\n",
            "test/07A36LI8.png\n",
            "test/Q4WGPJSA.png\n",
            "test/07G0C5EE.png\n",
            "test/WYDPWSN6.png\n",
            "test/NVY6ZZB0.png\n",
            "test/3XQGK83C.png\n",
            "test/BH4FLV4C.png\n",
            "test/YDTFU474.png\n",
            "test/UMMM4W0M.png\n",
            "test/752UW0OO.png\n",
            "test/ST08WZTQ.png\n",
            "test/X73PRPB0.png\n",
            "test/R7V0CIGV.png\n",
            "test/ZBFZXGWR.png\n",
            "test/PCNL43C4.png\n",
            "test/TG7EOXZ6.png\n",
            "test/4KB5FGHL.png\n",
            "test/AMVPE6CW.png\n",
            "test/OXN5BAJC.png\n",
            "test/HL0Q3VYT.png\n",
            "test/MWZ942O1.png\n",
            "test/YXRN9ZKU.png\n",
            "test/BC8J1XXF.png\n",
            "test/I5S56I9Y.png\n",
            "test/1ZPADL94.png\n",
            "test/F10Y3235.png\n",
            "test/GQRQJLE5.png\n",
            "test/X486I4TM.png\n",
            "test/CTRNZCKG.png\n",
            "test/BND13K4J.png\n",
            "test/VCGOPJ9A.png\n",
            "test/0J8ZY0VK.png\n",
            "test/DPJ88RBB.png\n",
            "test/4VV1WJ5Y.png\n",
            "test/KCSEE4PQ.png\n",
            "test/9CIFRS0C.png\n",
            "test/K0H73V6O.png\n",
            "test/4GE0EKNS.png\n",
            "test/458CSAXW.png\n",
            "test/B1PPKDXH.png\n",
            "test/8BXQSBDH.png\n",
            "test/PCL62IVK.png\n",
            "test/P9CAQJZC.png\n",
            "test/68CL6HL3.png\n",
            "test/VPHRZKZ9.png\n",
            "test/M6H9QW2G.png\n",
            "test/B5YA2PPX.png\n",
            "test/OVHU816L.png\n",
            "test/OWNURSUI.png\n",
            "test/JZYG9X4V.png\n",
            "test/LJRMD67L.png\n",
            "test/NJL7Q1TA.png\n",
            "test/NTBLLSJG.png\n",
            "test/WY9RB2NR.png\n",
            "test/A8D9O5YY.png\n",
            "test/AORZ85L6.png\n",
            "test/K8GW7AK9.png\n",
            "test/4BI3IR7P.png\n",
            "test/Y6L8KPK1.png\n",
            "test/CQ3WRHP3.png\n",
            "test/2PPS0TAN.png\n",
            "test/29YYMXSQ.png\n",
            "test/3QQ355RD.png\n",
            "test/APE19N8G.png\n",
            "test/0YINV6H8.png\n",
            "test/H02R0PQZ.png\n",
            "test/8PUEAXGB.png\n",
            "test/58Q78TH3.png\n",
            "test/AKFS3BE1.png\n",
            "test/HEBI15FU.png\n",
            "test/65N45CFU.png\n",
            "test/V6581PZY.png\n",
            "test/NS6DHFKK.png\n",
            "test/H4PEN6X4.png\n",
            "test/1SETICJQ.png\n",
            "test/IBD14DO2.png\n",
            "test/WWZ0JCKI.png\n",
            "test/F0WLQX7T.png\n",
            "test/4ARYOLP3.png\n",
            "test/AMWERXDC.png\n",
            "test/2XL4WUXD.png\n",
            "test/LMCWT5NS.png\n",
            "test/9DHREV93.png\n",
            "test/Y9459LY4.png\n",
            "test/OOLIQN93.png\n",
            "test/57K812D6.png\n",
            "test/EPN9BZAB.png\n",
            "test/F59YSIMI.png\n",
            "test/CIVR75WY.png\n",
            "test/HPENCR6I.png\n",
            "test/45NKT80Q.png\n",
            "test/601DDMCU.png\n",
            "test/0GFDLVW5.png\n",
            "test/E0BPJQTJ.png\n",
            "test/LXIE0YG8.png\n",
            "test/OJDL0QIU.png\n",
            "test/0NTCGGKJ.png\n",
            "test/4MR4RL8N.png\n",
            "test/E4KFXBBY.png\n",
            "test/YG8ZKI4P.png\n",
            "test/NVSRQ2VW.png\n",
            "test/M92A6JEY.png\n",
            "test/BQXRB93Z.png\n",
            "test/3JN12XQ5.png\n",
            "test/XSK7JX67.png\n",
            "test/IYZ43U6Z.png\n",
            "test/5501UZ8O.png\n",
            "test/JERKE5ML.png\n",
            "test/3QHLJXDD.png\n",
            "test/RHICBZGL.png\n",
            "test/S0C2GYLT.png\n",
            "test/BAPUIPN5.png\n",
            "test/3ZGM4JZ7.png\n",
            "test/39HZ4F4Q.png\n",
            "test/87X3C7YK.png\n",
            "test/MNHOK4A9.png\n",
            "test/TQJNBB5O.png\n",
            "test/XIKIGGI0.png\n",
            "test/YCCT3W7C.png\n",
            "test/F10SZ1M6.png\n",
            "test/0M5LL865.png\n",
            "test/JA5TQO63.png\n",
            "test/FZT6ULUO.png\n",
            "test/VC1LVL03.png\n",
            "test/CXEUKB25.png\n",
            "test/EP3U0NM7.png\n",
            "test/M82KA9EO.png\n",
            "test/V5FEWSNY.png\n",
            "test/VCCMXJOX.png\n",
            "test/8APZZCOC.png\n",
            "test/FDEJWJUI.png\n",
            "test/WJ7TVIPF.png\n",
            "test/ZPATN7V5.png\n",
            "test/MQGD6CJE.png\n",
            "test/7DQ5F4HP.png\n",
            "test/YCCZQJBW.png\n",
            "test/VRVWYVMM.png\n",
            "test/W4KGY34G.png\n",
            "test/D9NMRV8R.png\n",
            "test/65WQO4FO.png\n",
            "test/HIYPJNCQ.png\n",
            "test/E29WMU8G.png\n",
            "test/VGGVEU6T.png\n",
            "test/DQNOIEJI.png\n",
            "test/KN4S44B8.png\n",
            "test/HQPMTF4D.png\n",
            "test/D3JBNN7Y.png\n",
            "test/089YV089.png\n",
            "test/CZSFOUDC.png\n",
            "test/36818YMA.png\n",
            "test/T34OX8R6.png\n",
            "test/F5O3KT80.png\n",
            "test/2ZH8N5VX.png\n",
            "test/2KMJIN79.png\n",
            "test/FZOTUIWQ.png\n",
            "test/93CFOW5F.png\n",
            "test/DCQE5FBE.png\n",
            "test/RNNHIDM2.png\n",
            "test/7L1ULCCN.png\n",
            "test/DDD9SS0J.png\n",
            "test/1JTB9XEW.png\n",
            "test/AQXXK9MB.png\n",
            "test/PRBXGITI.png\n",
            "test/D1HY6WWJ.png\n",
            "test/EE59W5LL.png\n",
            "test/6SQIQMYM.png\n",
            "test/EWE5HK8K.png\n",
            "test/GMDIW4W4.png\n",
            "test/XP9X1BF2.png\n",
            "test/6SNSWQQK.png\n",
            "test/U1LJWF6B.png\n",
            "test/BRZYUZD1.png\n",
            "test/XA9Z1RTU.png\n",
            "test/71Y018PM.png\n",
            "test/VEMMWI8Z.png\n",
            "test/7LEKAS3Z.png\n",
            "test/HE1ZLE34.png\n",
            "test/QDG3AJAN.png\n",
            "test/CBGIVDK3.png\n",
            "test/KLUTTBOP.png\n",
            "test/63PEHCBW.png\n",
            "test/Y8JY1P0D.png\n",
            "test/WU4TRJ0C.png\n",
            "test/BITHZR4X.png\n",
            "test/KVWVZAWR.png\n",
            "test/W4P8N2FE.png\n",
            "test/DCZ48NDT.png\n",
            "test/3ZY3WI84.png\n",
            "test/1OHSZW0P.png\n",
            "test/2URRET13.png\n",
            "test/BBQB3LHL.png\n",
            "test/9XI8GX6T.png\n",
            "test/7B9FLZ8F.png\n",
            "test/0G511ZTP.png\n",
            "test/BORRPSV6.png\n",
            "test/IN8NSBBY.png\n",
            "test/KDEP3HSW.png\n",
            "test/G5RDB18S.png\n",
            "test/Y4WZEVGI.png\n",
            "test/9R1Z2VPD.png\n",
            "test/H1UVNVGY.png\n",
            "test/S534BHHP.png\n",
            "test/D5RR99R2.png\n",
            "test/28AJXKGN.png\n",
            "test/X2ZDS1RR.png\n",
            "test/NJF7OX8D.png\n",
            "test/SV05QS1J.png\n",
            "test/UX2TYCBH.png\n",
            "test/21S6KAR8.png\n",
            "test/EGX6PI7U.png\n",
            "test/Y0CER1PQ.png\n",
            "test/8E20RQD5.png\n",
            "test/XEDL34IY.png\n",
            "test/PXYO03RX.png\n",
            "test/9XH3LYYI.png\n",
            "test/DIPRX2H3.png\n",
            "test/O5HGY8IJ.png\n",
            "test/9O7XN1XG.png\n",
            "test/4II1P3R9.png\n",
            "test/MFFN81AC.png\n",
            "test/9R3S4JL7.png\n",
            "test/AFOMBHWM.png\n",
            "test/W1FD8UCR.png\n",
            "test/80O79ZOX.png\n",
            "test/5R5LG9YY.png\n",
            "test/EZKMCAW7.png\n",
            "test/THLFSV13.png\n",
            "test/LSJT4J07.png\n",
            "test/WVDRBOA9.png\n",
            "test/JLRVMCHF.png\n",
            "test/A3K4K9G3.png\n",
            "test/OEZ27R6R.png\n",
            "test/J87J7X5B.png\n",
            "test/3SC79C7H.png\n",
            "test/IGTU9CTD.png\n",
            "test/H2VYZVRG.png\n",
            "test/G6KM9YFV.png\n",
            "test/03JU8VX8.png\n",
            "test/LRCMR0AS.png\n",
            "test/FRRPRC1A.png\n",
            "test/57XWLXWC.png\n",
            "test/NNQEJ815.png\n",
            "test/B4003R7S.png\n",
            "test/509SPO5T.png\n",
            "test/IY7PPE69.png\n",
            "test/E6I2NPKC.png\n",
            "test/TX3AH4QA.png\n",
            "test/IYO1FNTL.png\n",
            "test/EVMNO2JT.png\n",
            "test/DWSWZK57.png\n",
            "test/5QEOPTGN.png\n",
            "test/U1MJ9EZN.png\n",
            "test/F3385KY4.png\n",
            "test/Z4JFH7L2.png\n",
            "test/UCZTBBJX.png\n",
            "test/ZE8JQW6E.png\n",
            "test/7NC9NK9K.png\n",
            "test/HAC5SBJN.png\n",
            "test/2L2L4NPE.png\n",
            "test/Y2CSJ51F.png\n",
            "test/IGPCOIBN.png\n",
            "test/DIDKS5CD.png\n",
            "test/B7EL9HO9.png\n",
            "test/QC9NP4BT.png\n",
            "test/MD3XLVUZ.png\n",
            "test/ETUV16F1.png\n",
            "test/PNE35B65.png\n",
            "test/L3N1YEDX.png\n",
            "test/AF8L6RSM.png\n",
            "test/CV8OY21H.png\n",
            "test/ZRMC1T0M.png\n",
            "test/868C9BLV.png\n",
            "test/V73URR7M.png\n",
            "test/J7F42Z6I.png\n",
            "test/SXZQ8HZT.png\n",
            "test/XLOIZLN5.png\n",
            "test/HQANPYW9.png\n",
            "test/ETETMS2P.png\n",
            "test/CL1TFH3B.png\n",
            "test/3XRY48ZP.png\n",
            "test/3W7D8WT3.png\n",
            "test/1OTNM2T2.png\n",
            "test/RJDXCBOI.png\n",
            "test/FML5BVP0.png\n",
            "test/MKDSXQ4S.png\n",
            "test/J2KZ402V.png\n",
            "test/E1H5MQ3Y.png\n",
            "test/5WGRJ9DA.png\n",
            "test/SC99BAH6.png\n",
            "test/8CJ86H68.png\n",
            "test/7CQNNCM3.png\n",
            "test/E5I5U62R.png\n",
            "test/9ZAL22BF.png\n",
            "test/2MDSUYAR.png\n",
            "test/L1SAF6F5.png\n",
            "test/SO4Y0RPP.png\n",
            "test/TO5O5O0W.png\n",
            "test/X24KVWTJ.png\n",
            "test/2QLIKHLE.png\n",
            "test/LKJHUJQ2.png\n",
            "test/2PHF3RCN.png\n",
            "test/NY4YU4OX.png\n",
            "test/CTGXON8M.png\n",
            "test/CFOK2AGV.png\n",
            "test/P7HYPC44.png\n",
            "test/1I745RPP.png\n",
            "test/D11XBFB7.png\n",
            "test/A45MIJL8.png\n",
            "test/4DVAE833.png\n",
            "test/RYAHC39W.png\n",
            "test/GAK56N6S.png\n",
            "test/XDYZMG9N.png\n",
            "test/15DG55LO.png\n",
            "test/JCN7Z3DL.png\n",
            "test/40C38Z08.png\n",
            "test/VQHVFX4K.png\n",
            "test/3HFUK3MH.png\n",
            "test/4YAJ2ZR6.png\n",
            "test/2P5478RR.png\n",
            "test/P5UJSRNM.png\n",
            "test/08Y94B5H.png\n",
            "test/1DLERTMO.png\n",
            "test/MQ18N7Z7.png\n",
            "test/LWMDU9GA.png\n",
            "test/FDNILULW.png\n",
            "test/KZKKWU4I.png\n",
            "test/LJNEK6OB.png\n",
            "test/8A8N2H5E.png\n",
            "test/D1QZ6D42.png\n",
            "test/J22BR4ZK.png\n",
            "test/WE8WK6F1.png\n",
            "test/AL8MOSRW.png\n",
            "test/4AF02WV6.png\n",
            "test/Y88FHTID.png\n",
            "test/KBYXIV8E.png\n",
            "test/L86MPPOG.png\n",
            "test/J6W8KDL4.png\n",
            "test/KTCPN24Y.png\n",
            "test/UA6QQUF9.png\n",
            "test/G8OGQC3Y.png\n",
            "test/MX23FZ3X.png\n",
            "test/HBB8YTJV.png\n",
            "test/A6DKGFAL.png\n",
            "test/CL22HUJP.png\n",
            "test/PK2WGCU4.png\n",
            "test/U6PDSW8B.png\n",
            "test/CLYY4MF8.png\n",
            "test/SCXCNZND.png\n",
            "test/PNCKRTHK.png\n",
            "test/88EJFJT7.png\n",
            "test/9R236ORJ.png\n",
            "test/ZD7VGQ2Q.png\n",
            "test/QT0DS3H8.png\n",
            "test/NO80UB4F.png\n",
            "test/6FFI935K.png\n",
            "test/6R2Y5ZVN.png\n",
            "test/BFTS7O8C.png\n",
            "test/OLW6LGMR.png\n",
            "test/CH11R9MM.png\n",
            "test/5IQEWA8F.png\n",
            "test/YJ83RVD5.png\n",
            "test/L3DSR0C5.png\n",
            "test/8RS9M021.png\n",
            "test/ZG74CYGA.png\n",
            "test/I5QU7R8C.png\n",
            "test/OBEZ1EWZ.png\n",
            "test/C7X5LERQ.png\n",
            "test/KUWAOYH7.png\n",
            "test/4KPUFM8L.png\n",
            "test/IXWF2M16.png\n",
            "test/05Z2GRV3.png\n",
            "test/C9XJE6OI.png\n",
            "test/MHUJKFLF.png\n",
            "test/IPPB2AU8.png\n",
            "test/NNF8PHH4.png\n",
            "test/YIISF6K0.png\n",
            "test/OCXTLM4N.png\n",
            "test/9X5KVMBU.png\n",
            "test/XC093J56.png\n",
            "test/CVNJLF43.png\n",
            "test/HQ0210JF.png\n",
            "test/FKKDRYYE.png\n",
            "test/QGUY6N6U.png\n",
            "test/4603HXUY.png\n",
            "test/77HHNM5G.png\n",
            "test/HXUO307J.png\n",
            "test/65YFM5RC.png\n",
            "test/9OODMRSO.png\n",
            "test/7FB4GPBW.png\n",
            "test/J4N384JK.png\n",
            "test/1X73L1Y6.png\n",
            "test/IIG12E3H.png\n",
            "test/GHPD39GG.png\n",
            "test/8PJYCN81.png\n",
            "test/K8J4V7AG.png\n",
            "test/HC2F4AH8.png\n",
            "test/ML2RO4TZ.png\n",
            "test/C5SOMALF.png\n",
            "test/YM18KQ8Q.png\n",
            "test/4IL6J3Y8.png\n",
            "test/QIEK1JSG.png\n",
            "test/UY2XWCRZ.png\n",
            "test/FVCP3NDL.png\n",
            "test/J3017Z87.png\n",
            "test/Q3OGB19K.png\n",
            "test/KR0DMJJX.png\n",
            "test/36RDLPMU.png\n",
            "test/F4CKJ5TA.png\n",
            "test/2A97I9D7.png\n",
            "test/R20SXK9A.png\n",
            "test/RQ0F2HWQ.png\n",
            "test/J8ZTVCNY.png\n",
            "test/36SHQV9H.png\n",
            "test/LTFB0D3D.png\n",
            "test/6P4R7FZQ.png\n",
            "test/82F3PESD.png\n",
            "test/DL5I3HYK.png\n",
            "test/ELMOG2HU.png\n",
            "test/IQ33O6QO.png\n",
            "test/CRHY5LQ0.png\n",
            "test/JIS2HF8C.png\n",
            "test/X301GFNH.png\n",
            "test/NL7OCL3Q.png\n",
            "test/PS1NP7FQ.png\n",
            "test/5RWYM60M.png\n",
            "test/Y9JXYWFD.png\n",
            "test/B5TE7R4N.png\n",
            "test/FUVE870U.png\n",
            "test/801AMRUS.png\n",
            "test/7UT1NXIW.png\n",
            "test/SDYEYUYQ.png\n",
            "test/VKT1WIPH.png\n",
            "test/O65XAJBQ.png\n",
            "test/ZO5U4JBV.png\n",
            "test/2T4L3YMM.png\n",
            "test/YV7IO2IZ.png\n",
            "test/4OBNZA9S.png\n",
            "test/8EZADR2Z.png\n",
            "test/CS5QAL5O.png\n",
            "test/KAH45NEF.png\n",
            "test/6VWLXR1U.png\n",
            "test/S9G9XMFP.png\n",
            "test/04VF78BE.png\n",
            "test/8PSV54XV.png\n",
            "test/0HNRB77O.png\n",
            "test/0RXDDZFE.png\n",
            "test/UAXAQGL0.png\n",
            "test/TVAQ86ZW.png\n",
            "test/37ZSRXXA.png\n",
            "test/2G4LNW2C.png\n",
            "test/FV79MRBP.png\n",
            "test/YVHVOOWH.png\n",
            "test/ZD7NPJ85.png\n",
            "test/NVZI880K.png\n",
            "test/K2BJUUBW.png\n",
            "test/HK155WS4.png\n",
            "test/KACAY2JQ.png\n",
            "test/VPSI0CEV.png\n",
            "test/MOODSHO2.png\n",
            "test/9TZ2FRU0.png\n",
            "test/7BJ59S25.png\n",
            "test/4FURVPU4.png\n",
            "test/PL6DDLV8.png\n",
            "test/4FUUM0LW.png\n",
            "test/BD1XIOLY.png\n",
            "test/BBCFR7V9.png\n",
            "test/9PXS3A85.png\n",
            "test/IL81RILT.png\n",
            "test/O2ADBK2B.png\n",
            "test/1UC19KBT.png\n",
            "test/5TBIMN6F.png\n",
            "test/2PJ5C3GJ.png\n",
            "test/4VIYXVLW.png\n",
            "test/SRTFTFEQ.png\n",
            "test/0MBHGC19.png\n",
            "test/04CK8NU2.png\n",
            "test/20HGK0Y8.png\n",
            "test/SV82JM0C.png\n",
            "test/G80KRTB6.png\n",
            "test/PEXXTS5J.png\n",
            "test/RJ610JW0.png\n",
            "test/PIX9UJ7A.png\n",
            "test/VZH4IWHA.png\n",
            "test/Q0ANB8DV.png\n",
            "test/2KQ756OU.png\n",
            "test/C00448OP.png\n",
            "test/CLRR0IDB.png\n",
            "test/RSYXEA47.png\n",
            "test/ORKYBGW5.png\n",
            "test/U4E37NVC.png\n",
            "test/JQJNRK8Q.png\n",
            "test/6OA6PFAR.png\n",
            "test/AR8YBKEB.png\n",
            "test/JH6H00NC.png\n",
            "test/IHHUUNUM.png\n",
            "test/6ARZFZO1.png\n",
            "test/0FS97PDP.png\n",
            "test/108KYSON.png\n",
            "test/DWQ8W745.png\n",
            "test/PGH0478C.png\n",
            "test/C5BJ8Z6H.png\n",
            "test/JK9JAVU6.png\n",
            "test/IB9OGVBS.png\n",
            "test/HURTIUCO.png\n",
            "test/CVUOI0JN.png\n",
            "test/KWOFU4QZ.png\n",
            "test/ZPARDC2G.png\n",
            "test/SBSPZQIQ.png\n",
            "test/WAR02Q4Z.png\n",
            "test/VA6XF9WO.png\n",
            "test/35TYD4B5.png\n",
            "test/7BMU3CBP.png\n",
            "test/K5J4Y8LW.png\n",
            "test/LPY6OYGG.png\n",
            "test/1UHO7LTS.png\n",
            "test/B95TGRP3.png\n",
            "test/T9PH1L1V.png\n",
            "test/XSIWJIHQ.png\n",
            "test/TK0G5BR8.png\n",
            "test/WDV65LJQ.png\n",
            "test/KVUBT1N0.png\n",
            "test/NZW1KWPA.png\n",
            "test/G3TG7CEV.png\n",
            "test/5AFVI99L.png\n",
            "test/BIE9Z8AT.png\n",
            "test/ZJ0JGOR2.png\n",
            "test/N88U6JWC.png\n",
            "test/7HF8ZMBE.png\n",
            "test/KSY5W4LP.png\n",
            "test/YMP26N64.png\n",
            "test/DZO37B59.png\n",
            "test/EH9A7WC2.png\n",
            "test/K3GIZHPG.png\n",
            "test/XDWXPC03.png\n",
            "test/H8JM4FGU.png\n",
            "test/SGQHH463.png\n",
            "test/OLZ5932J.png\n",
            "test/274MLIPD.png\n",
            "test/GYVEL9US.png\n",
            "test/X4KD09RH.png\n",
            "test/73HL9GP7.png\n",
            "test/HKVCCK0K.png\n",
            "test/LLUCVUA1.png\n",
            "test/ULWYN12J.png\n",
            "test/B8L3RY5A.png\n",
            "test/04H80B5R.png\n",
            "test/JHLTD4JP.png\n",
            "test/85POI7GP.png\n",
            "test/EHW26CRS.png\n",
            "test/RJ9MZWOC.png\n",
            "test/Q8KQVRN6.png\n",
            "test/G0ZFMHFS.png\n",
            "test/X1SIP9PP.png\n",
            "test/0JKI08G9.png\n",
            "test/CDZP1TZO.png\n",
            "test/57KMQK62.png\n",
            "test/O4C5G4ZT.png\n",
            "test/J7QNP43U.png\n",
            "test/8TEXV5ZI.png\n",
            "test/V2GR1DWU.png\n",
            "test/MNXBGYQY.png\n",
            "test/5SZ42V73.png\n",
            "test/0UVXSNXN.png\n",
            "test/JBXL00KX.png\n",
            "test/265T6MQO.png\n",
            "test/PX4NM1K2.png\n",
            "test/RYJLP38F.png\n",
            "test/1IY034NS.png\n",
            "test/L1YWZSMT.png\n",
            "test/8THOKP1J.png\n",
            "test/4OG0WAXB.png\n",
            "test/DS1LZ8SI.png\n",
            "test/F1L29LHQ.png\n",
            "test/4AZFRACH.png\n",
            "test/ZKOT5165.png\n",
            "test/1IEGTFVQ.png\n",
            "test/797TJPH8.png\n",
            "test/4803KWM6.png\n",
            "test/6UH5CVOH.png\n",
            "test/99PODU4N.png\n",
            "test/T2FADGFZ.png\n",
            "test/1OS47YB0.png\n",
            "test/RS61J9LQ.png\n",
            "test/ZIM12AQ8.png\n",
            "test/OLE3HU1B.png\n",
            "test/CREWCYCG.png\n",
            "test/4PCGEWN1.png\n",
            "test/DJK61MYA.png\n",
            "test/HWTRS1S3.png\n",
            "test/LIDKVFNR.png\n",
            "test/C98V8J5S.png\n",
            "test/VIJYSBVU.png\n",
            "test/U6SVL20G.png\n",
            "test/UX4BW1PA.png\n",
            "test/RLHGGQ0O.png\n",
            "test/IDFXGXQJ.png\n",
            "test/2Y20CQHQ.png\n",
            "test/23QCNBLX.png\n",
            "test/O4D1U2VK.png\n",
            "test/TZFZODC4.png\n",
            "test/LEF7CIO1.png\n",
            "test/1HMM5COF.png\n",
            "test/GR0XEF1K.png\n",
            "test/3VXG8GQX.png\n",
            "test/HJDMXZF7.png\n",
            "test/TB8PFENJ.png\n",
            "test/CO708R16.png\n",
            "test/AH84KHQG.png\n",
            "test/SVJ51WTT.png\n",
            "test/M8KXZ3N2.png\n",
            "test/ZW28O9D4.png\n",
            "test/A4YD5GLF.png\n",
            "test/J76GA8B7.png\n",
            "test/ZXBQGY0V.png\n",
            "test/ZCVBT82E.png\n",
            "test/6RU970PJ.png\n",
            "test/QG8J31Y1.png\n",
            "test/N3RR4GCG.png\n",
            "test/5XB67VXL.png\n",
            "test/MOG8D5XW.png\n",
            "test/MEZIGAO1.png\n",
            "test/22A96GLS.png\n",
            "test/Y50RRQGS.png\n",
            "test/NHIDYWEZ.png\n",
            "test/S7ABPDKS.png\n",
            "test/H8O09RIY.png\n",
            "test/9KLLD9W6.png\n",
            "test/IIWQAAZ5.png\n",
            "test/4JLMPA8G.png\n",
            "test/UUZ86XHN.png\n",
            "test/5MB6QIWE.png\n",
            "test/KANTF11J.png\n",
            "test/YT4JTJ9S.png\n",
            "test/Z19X2Z9L.png\n",
            "test/7Q016NOY.png\n",
            "test/EV8PBUWE.png\n",
            "test/PC4XD9AH.png\n",
            "test/RBV9JM9K.png\n",
            "test/XSJO0LXZ.png\n",
            "test/P30G4B66.png\n",
            "test/9XDOEV5K.png\n",
            "test/5H76N93Y.png\n",
            "test/QWE4EJ2V.png\n",
            "test/N9BOYQZ8.png\n",
            "test/RCORE0ZJ.png\n",
            "test/8NS1PWS9.png\n",
            "test/JWXOIYP4.png\n",
            "test/3M2SSLIC.png\n",
            "test/JK44LWCI.png\n",
            "test/M5C1AV16.png\n",
            "test/RFUKDB6I.png\n",
            "test/3UAIHPSX.png\n",
            "test/QMGWRMC4.png\n",
            "test/9TNV1BI8.png\n",
            "test/DWDBMNPF.png\n",
            "test/9IO9XKAM.png\n",
            "test/MGN1HWGG.png\n",
            "test/CIFKLGF2.png\n",
            "test/R34L1N6X.png\n",
            "test/8TX903JT.png\n",
            "test/2WXIN9M5.png\n",
            "test/SHT5EQJV.png\n",
            "test/I1ZYQR3P.png\n",
            "test/G4TLTXF6.png\n",
            "test/A549PFC8.png\n",
            "test/6ROYQX1H.png\n",
            "test/6C6Q7424.png\n",
            "test/SP5X5VXF.png\n",
            "test/0XJFRHHC.png\n",
            "test/RFUFC5BM.png\n",
            "test/EPVMRLHY.png\n",
            "test/KGTX95LT.png\n",
            "test/FAYU6LWK.png\n",
            "test/GI7EEL7I.png\n",
            "test/BGR9ON0T.png\n",
            "test/8JESZMME.png\n",
            "test/9L2EI1ZC.png\n",
            "test/XVRL7OP5.png\n",
            "test/V5DN81XB.png\n",
            "test/PEZCTUCX.png\n",
            "test/U1VZUVJJ.png\n",
            "test/GW590DDR.png\n",
            "test/MTSJFXL6.png\n",
            "test/IL3TC4ZC.png\n",
            "test/4T9I1D20.png\n",
            "test/262N1CP0.png\n",
            "test/PIT8D6YL.png\n",
            "test/CDX0UN9L.png\n",
            "test/LJAT95JN.png\n",
            "test/LX317H0M.png\n",
            "test/T24TAVVT.png\n",
            "test/3KNZMFPC.png\n",
            "test/NVJPAODR.png\n",
            "test/L6ZIIFFN.png\n",
            "test/NQJ0W6MW.png\n",
            "test/P3ITW21N.png\n",
            "test/CEXHYFQW.png\n",
            "test/4IYC4DB3.png\n",
            "test/OPAAU3IV.png\n",
            "test/R2XZ79NH.png\n",
            "test/XZVK8J1B.png\n",
            "test/5KP72RR4.png\n",
            "test/X6293793.png\n",
            "test/6SHIWMVP.png\n",
            "test/1GRXMXXS.png\n",
            "test/8IHZFDSF.png\n",
            "test/D38TG83U.png\n",
            "test/83CBF9G9.png\n",
            "test/MYT0Z6EV.png\n",
            "test/T2WRH9PS.png\n",
            "test/QC8HTM4N.png\n",
            "test/KBG38NGK.png\n",
            "test/XLSDG0UT.png\n",
            "test/UX8RC4K7.png\n",
            "test/L0ATPUNN.png\n",
            "test/BAVZ6NMZ.png\n",
            "test/181QFED0.png\n",
            "test/62JOO1D9.png\n",
            "test/H65UND7G.png\n",
            "test/ZKM63Q1W.png\n",
            "test/EJV6AT6B.png\n",
            "test/2DDJO6WC.png\n",
            "test/QPSJWBJQ.png\n",
            "test/PN5JY0UQ.png\n",
            "test/630BSWFW.png\n",
            "test/GH8OE0KB.png\n",
            "test/A17UP4EQ.png\n",
            "test/2I9IV8QK.png\n",
            "test/LISKAUL2.png\n",
            "test/JAN47JSG.png\n",
            "test/2F84XLDQ.png\n",
            "test/VF1E1CDG.png\n",
            "test/28AF667G.png\n",
            "test/XEK7OZWO.png\n",
            "test/3J1H0HBK.png\n",
            "test/K2HN65XJ.png\n",
            "test/C7X9LTKD.png\n",
            "test/ZRHLSK2G.png\n",
            "test/9O9DZV3Q.png\n",
            "test/IQZW81FS.png\n",
            "test/0LS6G5M4.png\n",
            "test/YMLIXO8F.png\n",
            "test/1Q8SGWGB.png\n",
            "test/CCBUOSEE.png\n",
            "test/G7EYJFS2.png\n",
            "test/QBIBD2SN.png\n",
            "test/4ESW1DPN.png\n",
            "test/05LDA231.png\n",
            "test/BQIGL101.png\n",
            "test/7Y53UO4F.png\n",
            "test/PHUY7P55.png\n",
            "test/QTJI04UK.png\n",
            "test/0ED4NOU8.png\n",
            "test/47KA3VUR.png\n",
            "test/72D6RH56.png\n",
            "test/CDZLO8O4.png\n",
            "test/0BSHCC3U.png\n",
            "test/XRYW2M1C.png\n",
            "test/BEXR4Q09.png\n",
            "test/BVIIV3KN.png\n",
            "test/M0F1RF7U.png\n",
            "test/GAYFYY5L.png\n",
            "test/R65P9WQX.png\n",
            "test/SKPOSHO9.png\n",
            "test/CS0YMDY1.png\n",
            "test/YHLWZ2KC.png\n",
            "test/GT17Y1F3.png\n",
            "test/TNBJQLWX.png\n",
            "test/UMI7U0RH.png\n",
            "test/AP2JT9BN.png\n",
            "test/LYOENZ8P.png\n",
            "test/MNPKSF4Q.png\n",
            "test/190WJPF9.png\n",
            "test/3RPTDT8M.png\n",
            "test/KOV901SG.png\n",
            "test/1BAQO59H.png\n",
            "test/2OS9BMDC.png\n",
            "test/3Y320QWC.png\n",
            "test/2N7U86PI.png\n",
            "test/3UKKDHF8.png\n",
            "test/JFCYYM0R.png\n",
            "test/JSKIW3F1.png\n",
            "test/79G9HK2P.png\n",
            "test/5SAAHXH4.png\n",
            "test/BOL1DNIH.png\n",
            "test/HI3Z4KUN.png\n",
            "test/YI1NTNOL.png\n",
            "test/2UA4NYWZ.png\n",
            "test/EIJRZFDO.png\n",
            "test/1D8ZJU5R.png\n",
            "test/IA3GD9TF.png\n",
            "test/3SK5K7H3.png\n",
            "test/4L0R452D.png\n",
            "test/D8UBQK3O.png\n",
            "test/046GQHF0.png\n",
            "test/TOUERW47.png\n",
            "test/GA68GN9P.png\n",
            "test/1B4G64TX.png\n",
            "test/K3ZUXB55.png\n",
            "test/1KCINENG.png\n",
            "test/P2ROAN97.png\n",
            "test/RELY4UM0.png\n",
            "test/8ZFRBAQP.png\n",
            "test/EPJ1S5R8.png\n",
            "test/IY6ENPEN.png\n",
            "test/HSWEZV1K.png\n",
            "test/WLLRM6DH.png\n",
            "test/8BNN9LIO.png\n",
            "test/3744PMEY.png\n",
            "test/BSTZTT8K.png\n",
            "test/AY0NGPGO.png\n",
            "test/HK2ZQCT0.png\n",
            "test/D299HXJG.png\n",
            "test/NM8B2KTS.png\n",
            "test/LZZTF01S.png\n",
            "test/5SERDD21.png\n",
            "test/ACASM8JW.png\n",
            "test/FAPIADPC.png\n",
            "test/90WHUNQT.png\n",
            "test/ALVBQ714.png\n",
            "test/X2CS1L8H.png\n",
            "test/FIRABHP0.png\n",
            "test/E75XBPZY.png\n",
            "test/D62N984Q.png\n",
            "test/HQPORHY1.png\n",
            "test/36XOJQ05.png\n",
            "test/LWLHO06D.png\n",
            "test/GSEJQ669.png\n",
            "test/MUIHCMWE.png\n",
            "test/6R1GCBVF.png\n",
            "test/7SIZQ2R9.png\n",
            "test/XSNU5892.png\n",
            "test/DZHAGPDG.png\n",
            "test/9AUSX9ZT.png\n",
            "test/LRFAUY3N.png\n",
            "test/UIA1WIYV.png\n",
            "test/TADHAM2D.png\n",
            "test/ISJK1N8A.png\n",
            "test/VPHZDG24.png\n",
            "test/TP5UKH6I.png\n",
            "test/GBA754KQ.png\n",
            "test/MMTJIWTS.png\n",
            "test/367DFL9C.png\n",
            "test/L1XYI68X.png\n",
            "test/2NTSMMHD.png\n",
            "test/AU4YGTRR.png\n",
            "test/NB4L6OL1.png\n",
            "test/WQ7XL747.png\n",
            "test/Q5RZRTI0.png\n",
            "test/DICHS8EI.png\n",
            "test/9K3QS1Q3.png\n",
            "test/UV1S8OV5.png\n",
            "test/KGJ6ZDF1.png\n",
            "test/WS17GXT3.png\n",
            "test/PFHXWI9R.png\n",
            "test/PZQP701T.png\n",
            "test/2STFIKUA.png\n",
            "test/69E5AAFU.png\n",
            "test/NTWE6NUQ.png\n",
            "test/M66HDKJE.png\n",
            "test/QTNJQY9K.png\n",
            "test/PFXE9J76.png\n",
            "test/0M7G2FIG.png\n",
            "test/O7M6KKQV.png\n",
            "test/S0HHDD4B.png\n",
            "test/2H1IBN9Z.png\n",
            "test/3U2PO520.png\n",
            "test/BDLTTT0W.png\n",
            "test/Z2MJJUJ8.png\n",
            "test/HPS3VP5K.png\n",
            "test/N20W918E.png\n",
            "test/IT3JH9YK.png\n",
            "test/TE1G1FLG.png\n",
            "test/KL2C0PRV.png\n",
            "test/I2G7ZF43.png\n",
            "test/DXI8SA51.png\n",
            "test/C754M808.png\n",
            "test/J2JMNNAL.png\n",
            "test/QAJVAF1I.png\n",
            "test/9GM7SJGX.png\n",
            "test/MF8F0K7E.png\n",
            "test/TAZ9UNWV.png\n",
            "test/75NPWERI.png\n",
            "test/61ME7SZ4.png\n",
            "test/6JXXH549.png\n",
            "test/NMWLL758.png\n",
            "test/MBBJI2F7.png\n",
            "test/VO9CJBRJ.png\n",
            "test/MLMFE9BY.png\n",
            "test/ET7VHJGF.png\n",
            "test/SKCQGKQ8.png\n",
            "test/JGSEJRMS.png\n",
            "test/UOK8HYF1.png\n",
            "test/ZUB6WG9L.png\n",
            "test/M3EX3ACI.png\n",
            "test/72P2GVMY.png\n",
            "test/5382TKRI.png\n",
            "test/7NYR632H.png\n",
            "test/P6916W6A.png\n",
            "test/KKEV55U5.png\n",
            "test/OOLWTA6H.png\n",
            "test/A99JNGPL.png\n",
            "test/Q07HDZ9V.png\n",
            "test/BHOC9RUW.png\n",
            "test/PGSTYMEC.png\n",
            "test/3RAYJLG2.png\n",
            "test/Z41QI014.png\n",
            "test/DTL3P37C.png\n",
            "test/UK9OZ3K8.png\n",
            "test/1PFEBVT8.png\n",
            "test/1PKCOGRQ.png\n",
            "test/RUP0GO14.png\n",
            "test/S8ZI0M0K.png\n",
            "test/BFAN8NYS.png\n",
            "test/LP9W7IKG.png\n",
            "test/T7SATVAK.png\n",
            "test/7SQUCTYE.png\n",
            "test/4T3BSQSA.png\n",
            "test/PEYRN5DH.png\n",
            "test/FDL9S9K8.png\n",
            "test/9V5QI16G.png\n",
            "test/TY3F4560.png\n",
            "test/WHCV49I0.png\n",
            "test/9X78GPT9.png\n",
            "test/6HFKBJJ6.png\n",
            "test/B36AX8E9.png\n",
            "test/U73KN277.png\n",
            "test/JACLTSWC.png\n",
            "test/M621D5LZ.png\n",
            "test/8ZPPBTQ3.png\n",
            "test/1JW9DUGP.png\n",
            "test/I16NAK57.png\n",
            "test/IP4TK20G.png\n",
            "test/MW4HFW0V.png\n",
            "test/K566DFE8.png\n",
            "test/STO8PBQD.png\n",
            "test/9B1L4ZP5.png\n",
            "test/ZJ53TH76.png\n",
            "test/AYZBPB38.png\n",
            "test/9DCVH0PQ.png\n",
            "test/3LAT2HVS.png\n",
            "test/MU0ELXA0.png\n",
            "test/SLGVHFIY.png\n",
            "test/7XMGAA43.png\n",
            "test/3180ZXGV.png\n",
            "test/A4E53339.png\n",
            "test/HFFX7P3R.png\n",
            "test/QQBATLUY.png\n",
            "test/JWI72T5I.png\n",
            "test/3M2M8UJ2.png\n",
            "test/4HSIT85V.png\n",
            "test/9HBT1GQ3.png\n",
            "test/ZQ2FP1Y6.png\n",
            "test/XC71T3AS.png\n",
            "test/1DYL0BU4.png\n",
            "test/5Y5B5YDH.png\n",
            "test/QPOF0OVK.png\n",
            "test/WZZURMDM.png\n",
            "test/0JCYPE2A.png\n",
            "test/M6MU4SLN.png\n",
            "test/T98MD23V.png\n",
            "test/VXMUABH0.png\n",
            "test/8JD7U2RJ.png\n",
            "test/WFHL71P0.png\n",
            "test/KLG09OBD.png\n",
            "test/X21CAB1F.png\n",
            "test/5VXRV93E.png\n",
            "test/829MTHTD.png\n",
            "test/A6CRVR7P.png\n",
            "test/B5BT6V40.png\n",
            "test/0HJWCYFL.png\n",
            "test/8AY5MHT3.png\n",
            "test/90WC7M40.png\n",
            "test/5ALRK8D0.png\n",
            "test/ONT1WZBI.png\n",
            "test/IQQFE8I0.png\n",
            "test/0DEH982K.png\n",
            "test/XGWIP340.png\n",
            "test/K6ZV0HJI.png\n",
            "test/KGC1BVC1.png\n",
            "test/QA2DXV3L.png\n",
            "test/D3P6NFL3.png\n",
            "test/T0XLN6DK.png\n",
            "test/8AA2TJG0.png\n",
            "test/H3V16R0O.png\n",
            "test/2EB38R75.png\n",
            "test/1N7VXU5E.png\n",
            "test/MC4FO6UQ.png\n",
            "test/UFPNTD97.png\n",
            "test/WYSWGZ61.png\n",
            "test/0338EIMA.png\n",
            "test/NO37PEWS.png\n",
            "test/R9BB40M3.png\n",
            "test/ITRG04WC.png\n",
            "test/58HDM43Z.png\n",
            "test/G9QLHK6F.png\n",
            "test/VWN45FXU.png\n",
            "test/QB2QIE36.png\n",
            "test/OOYI0ADW.png\n",
            "test/MVIAH5ES.png\n",
            "test/WVEOO55X.png\n",
            "test/Y521UFJ6.png\n",
            "test/O4C33K99.png\n",
            "test/VBKTPB0N.png\n",
            "test/3OYTAUYN.png\n",
            "test/H7H0YD1S.png\n",
            "test/YR539QYR.png\n",
            "test/5OBO2PI5.png\n",
            "test/S71W0VPJ.png\n",
            "test/7FS157J8.png\n",
            "test/PAX40532.png\n",
            "test/89M1YDQP.png\n",
            "test/50N924Q0.png\n",
            "test/Z75GKOLE.png\n",
            "test/AOBH5E3M.png\n",
            "test/VZILOPD0.png\n",
            "test/0T64ZT9O.png\n",
            "test/I7YIB88F.png\n",
            "test/3YGHI6T3.png\n",
            "test/WMQ05UXU.png\n",
            "test/YWR39X4Z.png\n",
            "test/ZIXT8VO0.png\n",
            "test/TH6JNHO5.png\n",
            "test/NEW8F0XV.png\n",
            "test/AV8WKMEK.png\n",
            "test/PV29RWQ5.png\n",
            "test/8R38CC13.png\n",
            "test/HU49AKK2.png\n",
            "test/318NJ1L2.png\n",
            "test/64FL18W2.png\n",
            "test/AP4WBZCK.png\n",
            "test/D4MTVZAC.png\n",
            "test/5RK2JEIS.png\n",
            "test/KOIRKEHG.png\n",
            "test/02N9OSO4.png\n",
            "test/8WDWL8C7.png\n",
            "test/M486BON7.png\n",
            "test/A6B2HVIU.png\n",
            "test/RCDI60MD.png\n",
            "test/53SP1DVM.png\n",
            "test/UKIHRXXF.png\n",
            "test/21HA7L0R.png\n",
            "test/W9XYWTDD.png\n",
            "test/7H0SKIBZ.png\n",
            "test/KG7ZK5C1.png\n",
            "test/UROVWQTB.png\n",
            "test/LID7QWMV.png\n",
            "test/M40ZIZQK.png\n",
            "test/07U7U8YY.png\n",
            "test/GV0TF9GF.png\n",
            "test/W3L2GGCQ.png\n",
            "test/IYNCLG0F.png\n",
            "test/PH6G8N6H.png\n",
            "test/UJPMT15H.png\n",
            "test/3QTE5S8O.png\n",
            "test/H0H2YEYR.png\n",
            "test/A3GZT8N1.png\n",
            "test/NIIJI9CN.png\n",
            "test/0BZ6729J.png\n",
            "test/ID8PZBO6.png\n",
            "test/RXJ6R7LL.png\n",
            "test/PGWIYVJA.png\n",
            "test/8IX8F1XX.png\n",
            "test/SZ3Y04CD.png\n",
            "test/8AKZVI7Y.png\n",
            "test/JOW9RHPP.png\n",
            "test/C5M5FMFC.png\n",
            "test/7SQX0FYL.png\n",
            "test/2WGE5FN8.png\n",
            "test/N980UGVU.png\n",
            "test/4VFD8DME.png\n",
            "test/3RTN0I8Z.png\n",
            "test/P1RGVOA8.png\n",
            "test/CDL2TFNI.png\n",
            "test/2JFSUYUO.png\n",
            "test/P0ZU5S9L.png\n",
            "test/EFOGXFON.png\n",
            "test/FQCGC2N9.png\n",
            "test/1BLK4MF7.png\n",
            "test/H0WJAPWC.png\n",
            "test/BKSFPFSY.png\n",
            "test/17FTZ0WT.png\n",
            "test/7DE4BR7X.png\n",
            "test/XM2O5E68.png\n",
            "test/CJG80X9T.png\n",
            "test/TUOANA3T.png\n",
            "test/A61M8ZFL.png\n",
            "test/BR4NDGZ2.png\n",
            "test/UCTRD4YQ.png\n",
            "test/8LXJHMXT.png\n",
            "test/1EY2WH36.png\n",
            "test/0PD9IOLY.png\n",
            "test/MTZH7DMV.png\n",
            "test/LELZOXAF.png\n",
            "test/V56X8HU4.png\n",
            "test/H0B1T502.png\n",
            "test/3IGWPSR6.png\n",
            "test/LNWF40ZQ.png\n",
            "test/2J2TPPOZ.png\n",
            "test/V7OWJ9JX.png\n",
            "test/Q1P1JIZH.png\n",
            "test/0HZNQS64.png\n",
            "test/HN67EBRD.png\n",
            "test/932NY1ME.png\n",
            "test/DI1RMG5R.png\n",
            "test/9373286P.png\n",
            "test/GRPZOGU8.png\n",
            "test/2K0VV3DS.png\n",
            "test/BQKXHC0C.png\n",
            "test/RKV6K0KJ.png\n",
            "test/JI3DJ1JO.png\n",
            "test/9C0ZFOGE.png\n",
            "test/SF8ED6XA.png\n",
            "test/N05RUWYF.png\n",
            "test/P05N02N5.png\n",
            "test/47AU2MR8.png\n",
            "test/ASXSOWRF.png\n",
            "test/CYUWAZGD.png\n",
            "test/6UWH5L6Z.png\n",
            "test/4XAM4AN6.png\n",
            "test/B563E91X.png\n",
            "test/GSCUQDR1.png\n",
            "test/PL3O75MV.png\n",
            "test/6H9SMOJV.png\n",
            "test/E73J87WV.png\n",
            "test/0VD112D3.png\n",
            "test/NDO0XNTG.png\n",
            "test/NESCQOB9.png\n",
            "test/11HN25LK.png\n",
            "test/CZRWC93E.png\n",
            "test/ER0L9373.png\n",
            "test/93V5PP6F.png\n",
            "test/VC5C95UJ.png\n",
            "test/9RKPXS00.png\n",
            "test/SHBTQQ8K.png\n",
            "test/WU93NTK2.png\n",
            "test/WDX44QGF.png\n",
            "test/XCHJ37WB.png\n",
            "test/B3ZMMCR2.png\n",
            "test/UEQ8XPTF.png\n",
            "test/RECTSHSN.png\n",
            "test/UL9VR6OM.png\n",
            "test/NSE5BCV4.png\n",
            "test/D9B9MLV1.png\n",
            "test/3L3UVSHD.png\n",
            "test/J5CFS5IA.png\n",
            "test/04KNVQVO.png\n",
            "test/N9DESEOU.png\n",
            "test/39KW40TP.png\n",
            "test/NADYW0ZB.png\n",
            "test/LP6EQKO8.png\n",
            "test/WGI2OPS3.png\n",
            "test/J1J0HHEW.png\n",
            "test/9BLW270Q.png\n",
            "test/XHGIUCOV.png\n",
            "test/HDFMJNN2.png\n",
            "test/B61VF6Y6.png\n",
            "test/ZT5W1GYW.png\n",
            "test/259KT2AM.png\n",
            "test/ACKU6NRN.png\n",
            "test/NBC3YE5K.png\n",
            "test/T9N89IEN.png\n",
            "test/DV3389R6.png\n",
            "test/HIYNXG3J.png\n",
            "test/8FMU6IBH.png\n",
            "test/YCKI8Q2L.png\n",
            "test/MS55E0O7.png\n",
            "test/U072A9EE.png\n",
            "test/YSXSWHE6.png\n",
            "test/R9G4F4FT.png\n",
            "test/CB84QINA.png\n",
            "test/4XAYNUL2.png\n",
            "test/4GNXC0PH.png\n",
            "test/60U5JQDK.png\n",
            "test/UUNF00DI.png\n",
            "test/9QYTCEU5.png\n",
            "test/EIRT4B7J.png\n",
            "test/WLIJXOB1.png\n",
            "test/4Q6MEDT2.png\n",
            "test/BCXF1QHL.png\n",
            "test/AJ1FV2HJ.png\n",
            "test/0PKODKN9.png\n",
            "test/KDA5ZI2X.png\n",
            "test/AB5FRJ38.png\n",
            "test/YLQ1KYQH.png\n",
            "test/CUQ5K1PW.png\n",
            "test/53ZFOE0I.png\n",
            "test/2IRFN11T.png\n",
            "test/DECQCS9H.png\n",
            "test/WMJA23CH.png\n",
            "test/R1G5NHPV.png\n",
            "test/B9H33NGR.png\n",
            "test/CWIRBH5U.png\n",
            "test/33VXNBQB.png\n",
            "test/4744ALER.png\n",
            "test/9EIZ0T0W.png\n",
            "test/YHHH5UGE.png\n",
            "test/05TIF50O.png\n",
            "test/MUNG125X.png\n",
            "test/BXFU5BPS.png\n",
            "test/MX418RRN.png\n",
            "test/BQOV0D4O.png\n",
            "test/QQJLB3PW.png\n",
            "test/3541X8HV.png\n",
            "test/NBHTW1YK.png\n",
            "test/KI8D29JJ.png\n",
            "test/JQAJOZL7.png\n",
            "test/8GJJKPC2.png\n",
            "test/JO3W6W9K.png\n",
            "test/H7TZ0JCX.png\n",
            "test/6SF1A9RO.png\n",
            "test/EMGMNST2.png\n",
            "test/AQWEKLCI.png\n",
            "test/UUSW5KTX.png\n",
            "test/0Z23G9ML.png\n",
            "test/18C49MP2.png\n",
            "test/GBD1W398.png\n",
            "test/WFY9IQFM.png\n",
            "test/BE2S171S.png\n",
            "test/3BQDJONZ.png\n",
            "test/98HDN74H.png\n",
            "test/V7MU5DZ6.png\n",
            "test/B0KE4Z0L.png\n",
            "test/HDEXPV5Z.png\n",
            "test/BU7N502H.png\n",
            "test/77HDDPJU.png\n",
            "test/N43F4BUL.png\n",
            "test/UBVHDQOI.png\n",
            "test/HPJN0S95.png\n",
            "test/B3YW7EYB.png\n",
            "test/0HKXQEWL.png\n",
            "test/0SMDKYML.png\n",
            "test/AM0P0ZP0.png\n",
            "test/21MVXC0J.png\n",
            "test/JUW0Y2P6.png\n",
            "test/H39B850G.png\n",
            "test/57BNYAG7.png\n",
            "test/4B86F1MH.png\n",
            "test/P6BHQJF6.png\n",
            "test/QD7LOCWX.png\n",
            "test/LHC15D1A.png\n",
            "test/QISZAGJK.png\n",
            "test/SLVRGUXG.png\n",
            "test/TPO9EFZV.png\n",
            "test/JH1P8C94.png\n",
            "test/2U3QNY1C.png\n",
            "test/H1TU24OW.png\n",
            "test/9WNJQMP9.png\n",
            "test/YPPPKEJC.png\n",
            "test/PPXAQHBX.png\n",
            "test/6T44GBL7.png\n",
            "test/X17NJGDG.png\n",
            "test/7N4VNUD1.png\n",
            "test/M8VLU0HW.png\n",
            "test/UZSYDP3Z.png\n",
            "test/UJ5HM65F.png\n",
            "test/J5OXDEEV.png\n",
            "test/99JH0TIY.png\n",
            "test/B73DFIG4.png\n",
            "test/8430JVT9.png\n",
            "test/P66RA457.png\n",
            "test/5DIZGXIG.png\n",
            "test/XLJM2FX3.png\n",
            "test/SOXXQXNV.png\n",
            "test/0GOUCJJW.png\n",
            "test/8R9OYG4U.png\n",
            "test/8NYLEFAD.png\n",
            "test/QAE4TPTJ.png\n",
            "test/181XR0J3.png\n",
            "test/CI1QHA8O.png\n",
            "test/TOOI6PH2.png\n",
            "test/H44JI3UL.png\n",
            "test/617YNNOS.png\n",
            "test/TJQNEKD8.png\n",
            "test/B20X4YPV.png\n",
            "test/LB47APXL.png\n",
            "test/JTI4K3YW.png\n",
            "test/1UFGWGAQ.png\n",
            "test/YST5KVEF.png\n",
            "test/NRPJSBJJ.png\n",
            "test/HLZS9IV9.png\n",
            "test/AFWCE15Y.png\n",
            "test/1WUYY772.png\n",
            "test/99ARZ3KJ.png\n",
            "test/TN8QK8AX.png\n",
            "test/0A14DNF4.png\n",
            "test/EOYZHXZX.png\n",
            "test/IG8JYF49.png\n",
            "test/MISYIFH2.png\n",
            "test/PFCCV2VE.png\n",
            "test/TMIPJVDQ.png\n",
            "test/9BW3SQF5.png\n",
            "test/J0T67HNP.png\n",
            "test/XGB83OKA.png\n",
            "test/ACLY397F.png\n",
            "test/EOLWUWQ0.png\n",
            "test/DJ0THRE2.png\n",
            "test/41EHKQCA.png\n",
            "test/7ZDZJCCZ.png\n",
            "test/Q9W29QLD.png\n",
            "test/5I39Z8AB.png\n",
            "test/ZXM37LB5.png\n",
            "test/S2MFOBBV.png\n",
            "test/ZTVRXBHP.png\n",
            "test/VIWMEYJ5.png\n",
            "test/9HMUI3IQ.png\n",
            "test/AP63FAC3.png\n",
            "test/5QLN6NRV.png\n",
            "test/SCFCDMKS.png\n",
            "test/1CYRQ7X1.png\n",
            "test/K62UCMS8.png\n",
            "test/PPBANBN7.png\n",
            "test/MAFXHSMA.png\n",
            "test/UYCJWGWU.png\n",
            "test/HHFTS960.png\n",
            "test/DZ544Z1M.png\n",
            "test/9Y6JQ30I.png\n",
            "test/GFQ9NSB8.png\n",
            "test/N32KS8FZ.png\n",
            "test/72UPL7L3.png\n",
            "test/IWUORMO8.png\n",
            "test/HOXVPEYI.png\n",
            "test/CF5K7AG7.png\n",
            "test/LTQ4N0NZ.png\n",
            "test/U3JELOIK.png\n",
            "test/XZGC3OAB.png\n",
            "test/O6Z7LQTK.png\n",
            "test/F5N3MES3.png\n",
            "test/4ISY6T95.png\n",
            "test/9JC02TRT.png\n",
            "test/HHNY2SSB.png\n",
            "test/5DBHTKZL.png\n",
            "test/0KJAJ6FB.png\n",
            "test/C93P57YL.png\n",
            "test/FPYRDLZY.png\n",
            "test/9Q2BV89D.png\n",
            "test/HLICYD2Z.png\n",
            "test/OVVADBMA.png\n",
            "test/TEEOD9O0.png\n",
            "test/CVK1UZEW.png\n",
            "test/QS98KD2V.png\n",
            "test/ID5NZFTN.png\n",
            "test/CG9LBEWY.png\n",
            "test/I9WKS2R9.png\n",
            "test/5HHDCALK.png\n",
            "test/NWNRAJ7C.png\n",
            "test/HHH9D731.png\n",
            "test/ATKYW3UF.png\n",
            "test/COH8X7RR.png\n",
            "test/EB5PWS17.png\n",
            "test/CQRAEH1P.png\n",
            "test/P5QQU0VI.png\n",
            "test/WOQ131CF.png\n",
            "test/ITPGTADV.png\n",
            "test/P5F4A7T9.png\n",
            "test/YZRJIHJM.png\n",
            "test/Y59ZVHK8.png\n",
            "test/ANEVET95.png\n",
            "test/4JNXLR7Y.png\n",
            "test/5CV99TG9.png\n",
            "test/3LV5623U.png\n",
            "test/4U821W2N.png\n",
            "test/PJHBR2T9.png\n",
            "test/YO2K8UT6.png\n",
            "test/9CRMZHIA.png\n",
            "test/0MD50KCO.png\n",
            "test/O3BO8IEH.png\n",
            "test/R871LTEZ.png\n",
            "test/JTLOS8YE.png\n",
            "test/4TVJ73DA.png\n",
            "test/C2VPQZH6.png\n",
            "test/HZQ8306W.png\n",
            "test/PD9CLGSG.png\n",
            "test/IO42QS6C.png\n",
            "test/WJ06QQ9B.png\n",
            "test/GDMAJ0CM.png\n",
            "test/7KNHWA6Z.png\n",
            "test/X7A0621A.png\n",
            "test/K56Y3FBR.png\n",
            "test/GUJ8D08B.png\n",
            "test/86QCDWBQ.png\n",
            "test/YSL6TARI.png\n",
            "test/BQDN7B6U.png\n",
            "test/OJ5FG585.png\n",
            "test/FYHNH4TW.png\n",
            "test/P9WC92XZ.png\n",
            "test/D09HZLXA.png\n",
            "test/51HIK398.png\n",
            "test/XSPN55ZC.png\n",
            "test/M2BHUX51.png\n",
            "test/UWTNKT9Q.png\n",
            "test/I5USRVU3.png\n",
            "test/FAZO29QU.png\n",
            "test/J0EXBJJN.png\n",
            "test/77LTK6NW.png\n",
            "test/ZMMCE0SH.png\n",
            "test/L4V5CCEB.png\n",
            "test/4HDMUPCW.png\n",
            "test/AB3YOGL4.png\n",
            "test/1OIIMTTC.png\n",
            "test/O5ROJ9ZZ.png\n",
            "test/G8UA29QU.png\n",
            "test/BIYAH5IN.png\n",
            "test/ZGXAWHHV.png\n",
            "test/65XK5IGN.png\n",
            "test/5X8IIPPC.png\n",
            "test/9VS88VDJ.png\n",
            "test/POM6IPD0.png\n",
            "test/YX3FQDU4.png\n",
            "test/4S3KHM8U.png\n",
            "test/B80LKNKL.png\n",
            "test/EILJLL4J.png\n",
            "test/2ENY9QY4.png\n",
            "test/XJN6O7BC.png\n",
            "test/J19MP43H.png\n",
            "test/T97SKKP6.png\n",
            "test/UE3V7QR3.png\n",
            "test/LC3MIGLQ.png\n",
            "test/M2ZH584D.png\n",
            "test/QV20B2C9.png\n",
            "test/V2FH1SH2.png\n",
            "test/G8HZPJAR.png\n",
            "test/5H0TTP8K.png\n",
            "test/VP65KI19.png\n",
            "test/I9LVURL0.png\n",
            "test/G1LZ3K8P.png\n",
            "test/8ZCEWSNI.png\n",
            "test/SXJ0NE9L.png\n",
            "test/W7W12LD4.png\n",
            "test/0UROIVAU.png\n",
            "test/J51F5KGX.png\n",
            "test/5VDYAFL9.png\n",
            "test/PMEE0D0K.png\n",
            "test/OGZYB9RS.png\n",
            "test/EJ29ZQ25.png\n",
            "test/UHIE4B2Z.png\n",
            "test/707CUKPM.png\n",
            "test/26IES3BB.png\n",
            "test/3ZDRU593.png\n",
            "test/JBYW0RNI.png\n",
            "test/3OQEK7MK.png\n",
            "test/7JV7QSD1.png\n",
            "test/ULBFIY77.png\n",
            "test/BUD2LCBW.png\n",
            "test/3F528MB6.png\n",
            "test/6E6RBRWM.png\n",
            "test/RDJRPYRL.png\n",
            "test/R1MKAA89.png\n",
            "test/04T573I6.png\n",
            "test/WRHMOJ3T.png\n",
            "test/62IVMAQQ.png\n",
            "test/HIH86BUW.png\n",
            "test/EFG7C3AM.png\n",
            "test/CQ101P9B.png\n",
            "test/SO1WFMF9.png\n",
            "test/2AGVZNGA.png\n",
            "test/1BLYNSXO.png\n",
            "test/DC15M4AQ.png\n",
            "test/G2L5EU16.png\n",
            "test/CRLRKAQB.png\n",
            "test/IKGNMWST.png\n",
            "test/W7464KQE.png\n",
            "test/EK2EA7F8.png\n",
            "test/24QBGPAK.png\n",
            "test/9WPPOXFE.png\n",
            "test/N5498HQ2.png\n",
            "test/Y6J5B0LA.png\n",
            "test/ZJ4EFW55.png\n",
            "test/ASTX9AQC.png\n",
            "test/ALCIA11C.png\n",
            "test/1YFBQX69.png\n",
            "test/BF3IIDFM.png\n",
            "test/FLHGZCDF.png\n",
            "test/KNKUZ52P.png\n",
            "test/IFUGEI8L.png\n",
            "test/CS81Y7QR.png\n",
            "test/KE2LDZ84.png\n",
            "test/IP8EYUUY.png\n",
            "test/DT3WM74C.png\n",
            "test/4DFSKJG7.png\n",
            "test/2KRSWMAF.png\n",
            "test/3DOAI74Y.png\n",
            "test/BJHFXMMH.png\n",
            "test/FJUGULMP.png\n",
            "test/UWTIWSKU.png\n",
            "test/SV3YOITG.png\n",
            "test/56NUSXG8.png\n",
            "test/Y03D7I2S.png\n",
            "test/BWOFX8QE.png\n",
            "test/5FR3UU6J.png\n",
            "test/GBY8B600.png\n",
            "test/Q1KH1IVK.png\n",
            "test/NKH2Z9HO.png\n",
            "test/QTWL2RK9.png\n",
            "test/OC8N0WXY.png\n",
            "test/2KOY0SL0.png\n",
            "test/4L5XO8PX.png\n",
            "test/8AUPKJ9X.png\n",
            "test/Z8EUYXE9.png\n",
            "test/TVEAV1ZA.png\n",
            "test/KJFPZ0ZE.png\n",
            "test/0WV63XUZ.png\n",
            "test/ERFZ1GUD.png\n",
            "test/C0190GSA.png\n",
            "test/7FY6ANKG.png\n",
            "test/DAGEJU3W.png\n",
            "test/AL8IORAX.png\n",
            "test/ACEKD8KJ.png\n",
            "test/U55XWZM7.png\n",
            "test/VGWLD5UL.png\n",
            "test/VVOP116J.png\n",
            "test/OM3XKTW3.png\n",
            "test/WBKPU608.png\n",
            "test/CR3DHGQK.png\n",
            "test/GOTIU98O.png\n",
            "test/L6YXR5HD.png\n",
            "test/HWF6HTUH.png\n",
            "test/MCJ66XU0.png\n",
            "test/NCI0CPW6.png\n",
            "test/NBFTLPLI.png\n",
            "test/WEM7503T.png\n",
            "test/EJRB0PF8.png\n",
            "test/LK890U3J.png\n",
            "test/5PAYCBAS.png\n",
            "test/8FWPXHBY.png\n",
            "test/Q72M66SC.png\n",
            "test/9YXH3AWR.png\n",
            "test/AINB57W5.png\n",
            "test/NC2W39TJ.png\n",
            "test/S95QT70M.png\n",
            "test/7D3G6IGF.png\n",
            "test/C265AM9L.png\n",
            "test/II48DSXO.png\n",
            "test/1L236OSK.png\n",
            "test/FT6GTF9G.png\n",
            "test/M7E1S64V.png\n",
            "test/93PJDLDF.png\n",
            "test/I6XIOIWS.png\n",
            "test/BWS6CVPL.png\n",
            "test/89KFCYEX.png\n",
            "test/X9KYGGX1.png\n",
            "test/S46LJCN6.png\n",
            "test/THFMYSLT.png\n",
            "test/YEAO0P8W.png\n",
            "test/MIZ123U9.png\n",
            "test/7Q7FPTE3.png\n",
            "test/4X56BM7P.png\n",
            "test/7YV01TBM.png\n",
            "test/VFLA4LIE.png\n",
            "test/TMNJSOZ4.png\n",
            "test/NOA5NMDN.png\n",
            "test/V875YCFS.png\n",
            "test/C4844EBE.png\n",
            "test/3Q6U29RF.png\n",
            "test/64M9C9PY.png\n",
            "test/LKJF0RBS.png\n",
            "test/MMDMJMSK.png\n",
            "test/CQUHBSBV.png\n",
            "test/9GXHI40T.png\n",
            "test/S593WFRU.png\n",
            "test/Y2CGN2R7.png\n",
            "test/YG61LK3O.png\n",
            "test/N2BLY5GG.png\n",
            "test/D0R2YZ29.png\n",
            "test/DWBZUKGC.png\n",
            "test/ICWPANTB.png\n",
            "test/7DCUZW4H.png\n",
            "test/HYGAYCHW.png\n",
            "test/0TRZ7YAL.png\n",
            "test/R0ZBGOQL.png\n",
            "test/L69UEU8Q.png\n",
            "test/YCE7KOV7.png\n",
            "test/IBTDCMQ6.png\n",
            "test/WB8YLRQN.png\n",
            "test/0R71JUA9.png\n",
            "test/DQ7J5CXA.png\n",
            "test/15IL35D5.png\n",
            "test/WO0ZCVWH.png\n",
            "test/XBBJHOY5.png\n",
            "test/6IRFZEKQ.png\n",
            "test/5SXY8B1D.png\n",
            "test/ISBJBN9R.png\n",
            "test/9ED0EFCB.png\n",
            "test/VB8BX2SD.png\n",
            "test/9V0TL14G.png\n",
            "test/0QC1K5P5.png\n",
            "test/66BTDGFO.png\n",
            "test/2VLLC8J7.png\n",
            "test/55IMA61D.png\n",
            "test/A2O6Y6JG.png\n",
            "test/RM1SA15W.png\n",
            "test/YVDSKOWW.png\n",
            "test/9I49E0Z7.png\n",
            "test/7KIBM6XP.png\n",
            "test/XJ5VO1AM.png\n",
            "test/GG67HYM4.png\n",
            "test/J3Z1ZBG4.png\n",
            "test/WJP08B6A.png\n",
            "test/B3BF356H.png\n",
            "test/SH2BQ7SZ.png\n",
            "test/3BIJS6IY.png\n",
            "test/VJB8RM0R.png\n",
            "test/ZMNZHP1P.png\n",
            "test/HCRO94U2.png\n",
            "test/0X851VVL.png\n",
            "test/M997FDXP.png\n",
            "test/VFSB30H8.png\n",
            "test/GLI1P8OS.png\n",
            "test/8J4A8NQJ.png\n",
            "test/Z7ADMPU6.png\n",
            "test/SLENF20X.png\n",
            "test/AQ08F3YD.png\n",
            "test/01RRI4YP.png\n",
            "test/8KYXXHA8.png\n",
            "test/M8EFXH1E.png\n",
            "test/MKTTSBGL.png\n",
            "test/M60T3O5U.png\n",
            "test/1U3UOVEX.png\n",
            "test/RG6BO373.png\n",
            "test/3NER1WE5.png\n",
            "test/P3BG28SW.png\n",
            "test/MYZTKBXT.png\n",
            "test/WTAK8NIK.png\n",
            "test/KV264LT3.png\n",
            "test/0AAO51JW.png\n",
            "test/7MS5LLHF.png\n",
            "test/PUD4L9HD.png\n",
            "test/HK6APH3I.png\n",
            "test/WGV8E8FM.png\n",
            "test/P6P6F9XZ.png\n",
            "test/25C2Z891.png\n",
            "test/RMX2EMH3.png\n",
            "test/3Z0P0FMZ.png\n",
            "test/ZI1YP3ZT.png\n",
            "test/YAY40OPO.png\n",
            "test/V5O4YVMZ.png\n",
            "test/OIEXGVOC.png\n",
            "test/FW64TLQD.png\n",
            "test/DHTMKLOR.png\n",
            "test/442BXF5T.png\n",
            "test/6OR8VZ9W.png\n",
            "test/FA3VXQU6.png\n",
            "test/50D4N34K.png\n",
            "test/3TFZ2AHE.png\n",
            "test/V00ERVVQ.png\n",
            "test/F2OY19ZP.png\n",
            "test/HD6B8CVK.png\n",
            "test/AAPVM5QN.png\n",
            "test/ZEZTQOED.png\n",
            "test/BD7QV2EK.png\n",
            "test/VPXLZLMN.png\n",
            "test/2VEROKJG.png\n",
            "test/RVMA42DS.png\n",
            "test/3UNU65L5.png\n",
            "test/6DA70FGW.png\n",
            "test/R6JKN43N.png\n",
            "test/4LQRX0ER.png\n",
            "test/UKLJSDRG.png\n",
            "test/51Q0R4IS.png\n",
            "test/ULM2USHF.png\n",
            "test/YEQBEJEL.png\n",
            "test/WNU31HUG.png\n",
            "test/UL2FP3PC.png\n",
            "test/XIDUEQV5.png\n",
            "test/7FEQ0C19.png\n",
            "test/8M5CPDPT.png\n",
            "test/BPJ7XGBO.png\n",
            "test/WERTWBO2.png\n",
            "test/F3U3590H.png\n",
            "test/B2HIBNSJ.png\n",
            "test/FOE99DUT.png\n",
            "test/7JD6CPC1.png\n",
            "test/41M9J9M2.png\n",
            "test/V9PNTZK9.png\n",
            "test/6YMOIM0O.png\n",
            "test/IIP3QYBH.png\n",
            "test/9IQGE99I.png\n",
            "test/5D06DPP1.png\n",
            "test/TV5BII81.png\n",
            "test/ULVFZ5YG.png\n",
            "test/SCDN30B6.png\n",
            "test/3919HB5O.png\n",
            "test/WXNJF5VU.png\n",
            "test/G256IVUF.png\n",
            "test/5AWFO1KM.png\n",
            "test/9MBB4YK8.png\n",
            "test/WZ9QVJNO.png\n",
            "test/AOQJR9IR.png\n",
            "test/F4NEJ9VN.png\n",
            "test/QSI76R8Q.png\n",
            "test/UOQBDB5B.png\n",
            "test/UC8DNXPB.png\n",
            "test/BZ28CCZO.png\n",
            "test/L5FR6WMQ.png\n",
            "test/7O574IVK.png\n",
            "test/RFQ70FRX.png\n",
            "test/2AM0DTTC.png\n",
            "test/MJQH722R.png\n",
            "test/P1MPH848.png\n",
            "test/HK6MY1RB.png\n",
            "test/EU5C8QRN.png\n",
            "test/41ORINIM.png\n",
            "test/OI5P59FI.png\n",
            "test/8BIH29Q7.png\n",
            "test/LZ0DEJG6.png\n",
            "test/22VGJ1GI.png\n",
            "test/7UHZ0I14.png\n",
            "test/EJCQG86K.png\n",
            "test/GCY0KEYQ.png\n",
            "test/M6LQFD8D.png\n",
            "test/RCEIDTLA.png\n",
            "test/HPDCAK9X.png\n",
            "test/XXHE2ZPW.png\n",
            "test/Z16SOOLY.png\n",
            "test/KVEVZI2X.png\n",
            "test/NUG6053D.png\n",
            "test/47R6B7UD.png\n",
            "test/VHBP3MZQ.png\n",
            "test/TO3Y2TKK.png\n",
            "test/QZJSV0PG.png\n",
            "test/UZDKOFL4.png\n",
            "test/D2GC19HU.png\n",
            "test/O9NOISPF.png\n",
            "test/1K3MLR5Y.png\n",
            "test/82OLH2GM.png\n",
            "test/QWMOMNYV.png\n",
            "test/E6JPI00O.png\n",
            "test/ZFSRSF7N.png\n",
            "test/0BAQXFYZ.png\n",
            "test/IJFZY2EH.png\n",
            "test/F7EVMY2P.png\n",
            "test/D9QB1O08.png\n",
            "test/A6AW7OK9.png\n",
            "test/QEZKN2Z1.png\n",
            "test/JV8EVDIN.png\n",
            "test/RCTCNZBJ.png\n",
            "test/GFCMMJLB.png\n",
            "test/PAHL2E5F.png\n",
            "test/OUJ0Q9BP.png\n",
            "test/UDP6RR36.png\n",
            "test/GGQ8U815.png\n",
            "test/5UFT8K99.png\n",
            "test/ERY3KM0R.png\n",
            "test/KHKYQOUL.png\n",
            "test/IH7K8WFQ.png\n",
            "test/42Q9BKHB.png\n",
            "test/N4H5YHSG.png\n",
            "test/DBP7BBTB.png\n",
            "test/JDNY87TQ.png\n",
            "test/564UGMP6.png\n",
            "test/TOXWMHNE.png\n",
            "test/L4GJNARU.png\n",
            "test/5UKNS8RL.png\n",
            "test/4IIQIZGA.png\n",
            "test/XHV1O4MZ.png\n",
            "test/ME1LQ31L.png\n",
            "test/D3BO2HI5.png\n",
            "test/B8QNNEPT.png\n",
            "test/HFCNETXQ.png\n",
            "test/SBHU1ZSZ.png\n",
            "test/SW20OFAS.png\n",
            "test/T3EP1XIX.png\n",
            "test/RB4XJ1L2.png\n",
            "test/JLX62G42.png\n",
            "test/B0D9MSW3.png\n",
            "test/RCM4XKU2.png\n",
            "test/F80GCGHT.png\n",
            "test/86V8Y0SC.png\n",
            "test/ILQF6A7I.png\n",
            "test/6PLVSXCN.png\n",
            "test/NKODQNP7.png\n",
            "test/KTZ7ARKZ.png\n",
            "test/HL3O3O7L.png\n",
            "test/M93IZMGA.png\n",
            "test/7ZH001Z8.png\n",
            "test/1M2ABAY4.png\n",
            "test/NOEVRE24.png\n",
            "test/GDNDUN8F.png\n",
            "test/DM7OTV01.png\n",
            "test/4VG8V2XQ.png\n",
            "test/TAENLN84.png\n",
            "test/UBINWE81.png\n",
            "test/4E9QXX5J.png\n",
            "test/93G6090G.png\n",
            "test/VBGY8DBN.png\n",
            "test/MKMLB0RF.png\n",
            "test/W6JG1ZZ7.png\n",
            "test/F4QJ6CZS.png\n",
            "test/WDLNTKTT.png\n",
            "test/IVAFIW08.png\n",
            "test/YADVRZ4F.png\n",
            "test/XQCW99LE.png\n",
            "test/LUQVMZI4.png\n",
            "test/OI8P16YQ.png\n",
            "test/UK1SIJTX.png\n",
            "test/7HZ7ZCU6.png\n",
            "test/2I90CVXF.png\n",
            "test/8Y5WXHIO.png\n",
            "test/65ARE49I.png\n",
            "test/CYHBPTVP.png\n",
            "test/ZP1G1CPT.png\n",
            "test/AUBSETEQ.png\n",
            "test/AVRFT21C.png\n",
            "test/S1929MWJ.png\n",
            "test/PUOPDIHI.png\n",
            "test/TFNXGFW6.png\n",
            "test/ZA3HTO2Y.png\n",
            "test/FXCPRA6J.png\n",
            "test/DUJ0G1WC.png\n",
            "test/BR0M35Y4.png\n",
            "test/UXXG2EA0.png\n",
            "test/6O65YUTI.png\n",
            "test/37IM46LN.png\n",
            "test/7ZE3QYL4.png\n",
            "test/DDE897P7.png\n",
            "test/LKV1XP8G.png\n",
            "test/1US0WKIM.png\n",
            "test/MOI5E2WE.png\n",
            "test/XEALHU7E.png\n",
            "test/DSOYL2J6.png\n",
            "test/OG8YATW2.png\n",
            "test/5NIBW3NF.png\n",
            "test/DOY9MBHE.png\n",
            "test/XXQ3WQR6.png\n",
            "test/3LFOVMKW.png\n",
            "test/MSZHDBUL.png\n",
            "test/K2S0ERRG.png\n",
            "test/0ZZP2HCQ.png\n",
            "test/EW0XNWON.png\n",
            "test/KMFZGFQ6.png\n",
            "test/PWJ3OFNB.png\n",
            "test/65Q1633G.png\n",
            "test/68RDRDA1.png\n",
            "test/1LFYH3PH.png\n",
            "test/M00IEYUT.png\n",
            "test/BH5Z9KCK.png\n",
            "test/PLX6TMID.png\n",
            "test/2PX5SOTH.png\n",
            "test/VNGKA55V.png\n",
            "test/W1I78GBG.png\n",
            "test/CR800I4J.png\n",
            "test/30HI3IQA.png\n",
            "test/KB88F2Q6.png\n",
            "test/57IECJ1X.png\n",
            "test/WWYKZY1R.png\n",
            "test/FTWT8BU4.png\n",
            "test/2EJJAAE4.png\n",
            "test/YPZ0M7QI.png\n",
            "test/50V0RCS3.png\n",
            "test/BSHIP1TB.png\n",
            "test/HBDPG9X3.png\n",
            "test/21HLT2TW.png\n",
            "test/EJGFFVUA.png\n",
            "test/3VCXMZM1.png\n",
            "test/R1P9CNSQ.png\n",
            "test/12DI4FDI.png\n",
            "test/P5EZCUBJ.png\n",
            "test/ADNVRAB1.png\n",
            "test/2QQU1DXS.png\n",
            "test/LC7ID8JZ.png\n",
            "test/YFFN7D62.png\n",
            "test/P4IOH96W.png\n",
            "test/6G0MJQH3.png\n",
            "test/TS0VZG9S.png\n",
            "test/73R67YEK.png\n",
            "test/H12IG8HA.png\n",
            "test/FMYDVWLM.png\n",
            "test/793YX7I9.png\n",
            "test/UHQDMZ3R.png\n",
            "test/0NQB472M.png\n",
            "test/ZIUND7KP.png\n",
            "test/VRQMV2QB.png\n",
            "test/9CXNMYER.png\n",
            "test/C84C7ACQ.png\n",
            "test/M3DV1RF6.png\n",
            "test/91THIT1U.png\n",
            "test/7UXH9R69.png\n",
            "test/FWGSX8PR.png\n",
            "test/MGTS7ZMB.png\n",
            "test/MAXQG26L.png\n",
            "test/F3HTF2PL.png\n",
            "test/JJ3HWJGD.png\n",
            "test/PRW9YTKS.png\n",
            "test/3HRYUXW1.png\n",
            "test/XYFZ1OYD.png\n",
            "test/Q8S1UQSY.png\n",
            "test/IS1JUS6R.png\n",
            "test/A6CNZBD0.png\n",
            "test/X16T4GOO.png\n",
            "test/YS9DXI5J.png\n",
            "test/DZ741U2Y.png\n",
            "test/W7RHF42I.png\n",
            "test/S88XFUVQ.png\n",
            "test/A9JF8TSP.png\n",
            "test/AT56K2SW.png\n",
            "test/P7VTO3FU.png\n",
            "test/O7LQVSR2.png\n",
            "test/8QJET3AQ.png\n",
            "test/9E5ELIQU.png\n",
            "test/U3UM4YEP.png\n",
            "test/HK4G2K0C.png\n",
            "test/NME3OY2C.png\n",
            "test/XDC0L4M4.png\n",
            "test/YVJO7KLU.png\n",
            "test/92NPVSCN.png\n",
            "test/IG88OUGN.png\n",
            "test/Q22Q7RBX.png\n",
            "test/YEMOMGMY.png\n",
            "test/GDUX9GZB.png\n",
            "test/KHBIJ3JV.png\n",
            "test/8AN3GEVF.png\n",
            "test/ZKUQRL35.png\n",
            "test/YVK17QW4.png\n",
            "test/RWRI6V69.png\n",
            "test/5EUOKC0D.png\n",
            "test/2U3US5I6.png\n",
            "test/0A821EZN.png\n",
            "test/H14IXCZZ.png\n",
            "test/NC17TWB3.png\n",
            "test/LM7250JG.png\n",
            "test/J2Q39SGB.png\n",
            "test/47PI4VMW.png\n",
            "test/I4KSXSKW.png\n",
            "test/TI3ITFWR.png\n",
            "test/9L76H1VE.png\n",
            "test/OSZU3MO1.png\n",
            "test/T33Q8O5V.png\n",
            "test/G2NK0KBW.png\n",
            "test/N0MWAM8W.png\n",
            "test/Q77W7ODA.png\n",
            "test/S27DOSI5.png\n",
            "test/CLUQAX50.png\n",
            "test/FJCRKUCG.png\n",
            "test/4Q62FDL5.png\n",
            "test/ZBDSHIWF.png\n",
            "test/DF0HF12D.png\n",
            "test/O77VDZUI.png\n",
            "test/PP8J6VEG.png\n",
            "test/2CNFM8FK.png\n",
            "test/DAINF4GE.png\n",
            "test/53SFYE58.png\n",
            "test/KB9VKJ4X.png\n",
            "test/OUUB94X4.png\n",
            "test/7X7QIZA6.png\n",
            "test/QE6OU9R5.png\n",
            "test/RSUMISLS.png\n",
            "test/NYO9UEUM.png\n",
            "test/6OV0NMMN.png\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ITXi6IaV5YMn"
      },
      "source": [
        "!mv /content/IDRND_FASDB_train/spoof/test /content/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dOWqmqS--Naw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e4b08632-c242-47bf-d229-96b166342cd9"
      },
      "source": [
        "len(os.listdir(\"/content/test\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10002"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CV4sR2o_IiXD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 194
        },
        "outputId": "637ae35b-9f70-48f1-e955-7060840cccb3"
      },
      "source": [
        "os.listdir(\"/content/test\")[:10]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['2QQU1DXS.png',\n",
              " 'AGOUMJ7X.png',\n",
              " 'HMIG9O5L.png',\n",
              " 'DIP51CYU.png',\n",
              " 'DEKQOO9I.png',\n",
              " '535KIBVU.png',\n",
              " 'AT2T17AG.png',\n",
              " 'Z2BMZY0H.png',\n",
              " '57ROSBIQ.png',\n",
              " 'SITQ3C65.png']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FeScUNnY-vNZ"
      },
      "source": [
        "#def predict(dir):\n",
        "  #test_array=[]\n",
        "  #for os.listdir(dir)[0]:#for img in os.listdir(dir):\n",
        "\n",
        "    im = load_img(dir+\"/\"+img, target_size=(300, 300), color_mode=\"grayscale\")\n",
        "      \n",
        "    x = img_to_array(im) \n",
        "    x/=255.0\n",
        "    predictions = model.predict(x)\n",
        "    result = predictions.argmax(axis=-1)\n",
        "    test_array.append((img, \"->\", result))\n",
        "    return test_array"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KHt0TlODPL6O"
      },
      "source": [
        "import glob"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B07bbGdtiQlt"
      },
      "source": [
        "test_array=[]\n",
        "#for img in os.listdir(\"/content/test\"): #for img in os.listdir(dir):\n",
        "\n",
        "    #im = load_img(img, target_size=(400, 400), color_mode=\"grayscale\")\n",
        "os.chdir(\"/content/test\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "    im = load_img(f, target_size=(300, 300), color_mode=\"grayscale\")\n",
        "    x = img_to_array(im) \n",
        "    x/=255.0\n",
        "    x = x.reshape((1,) + x.shape)\n",
        "    predictions = model.predict(x)\n",
        "    \n",
        "    test_array.append([f, float(predictions)])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ak23ghsAWKmj"
      },
      "source": [
        "test_array_names=[]\n",
        "#for img in os.listdir(\"/content/test\"): #for img in os.listdir(dir):\n",
        "\n",
        "    #im = load_img(img, target_size=(400, 400), color_mode=\"grayscale\")\n",
        "for f in os.listdir(\"/content/test\"):\n",
        "\n",
        "  if f.endswith(\".png\"):\n",
        "    \n",
        "    test_array_names.append(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UhmCKopWsVMY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "1597151e-99b6-40c4-bd08-302cbeab315e"
      },
      "source": [
        "len(test_array)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 153
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QtYUBHTSyk9y",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "d27c9c51-182b-4f16-8c75-c511f0d70399"
      },
      "source": [
        "len(test_array_names)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 281
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_iNdOdQyRIyV"
      },
      "source": [
        "test_array.insert(0, \"\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kZF3Ig9K4LMf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "23287a69-1b39-4d95-d981-bbdeda867880"
      },
      "source": [
        "test_array.pop(0)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[0.2, '']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 147
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "C8ECTVoYcZrK"
      },
      "source": [
        "test_array_names.insert(0, round(0.2, 1)) #\"%.1f\" % 0.2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d5aBIXjCgD5G"
      },
      "source": [
        "test_array.insert(0, [round(0.2, 1), \"\"] )"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VnFmOSTTsGwZ"
      },
      "source": [
        "test_array_names[:10]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uj-JuKm98KcE"
      },
      "source": [
        "import pandas as pd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "edbo6bwx7wv8"
      },
      "source": [
        "#df = pd.DataFrame(list(zip(test_array_names, test_array)))\n",
        "df=pd.DataFrame(test_array, columns=[\"N\", \"V\"])\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ofC1sKhDgZn-"
      },
      "source": [
        "df1=pd.DataFrame(test_array, columns=[\"N\", \"V\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ywiWx2n1TRkz",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "74677404-1356-41de-e28b-81d85c6fcb0f"
      },
      "source": [
        "df1.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>N</th>\n",
              "      <th>V</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.2</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2QQU1DXS.png</td>\n",
              "      <td>0.536492</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AGOUMJ7X.png</td>\n",
              "      <td>0.569214</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>HMIG9O5L.png</td>\n",
              "      <td>0.970563</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>DIP51CYU.png</td>\n",
              "      <td>0.898653</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              N         V\n",
              "0           0.2          \n",
              "0  2QQU1DXS.png  0.536492\n",
              "1  AGOUMJ7X.png  0.569214\n",
              "2  HMIG9O5L.png  0.970563\n",
              "3  DIP51CYU.png  0.898653"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 162
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O-f_JN4O8P-f"
      },
      "source": [
        "\n",
        "\n",
        "df1.to_csv(\"/content/1040_on_arrays_df.csv\", index=False, header=None)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UQlU5wm_jiOd"
      },
      "source": [
        "df.to_csv(\"/content/1027_on_arrays_df.csv\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "63a8mtDP7PHy"
      },
      "source": [
        "df1 = pd.DataFrame(list(zip(test_array_names, test_array)))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mRCfqyGg_a9C"
      },
      "source": [
        "df2=pd.DataFrame([[round(0.2, 1), \"\"]], columns=[\"N\", \"V\"]) fffff"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1AP-Tk3Z7Lep"
      },
      "source": [
        "df1 = pd.concat([df2, df1]) "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DQElqtsh-N0h"
      },
      "source": [
        "df1.loc[-1] = [round(0.2, 1), \"\"]  # adding a row\n",
        "df1.index = df.index + 1  # shifting index\n",
        "df1.sort_index(inplace=True) "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D9r4TBUl-2bC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "4afb7340-e6d5-4c65-ce6a-437eaffe15f3"
      },
      "source": [
        "df1.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>N</th>\n",
              "      <th>V</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>2QQU1DXS.png</td>\n",
              "      <td>0.536492</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>AGOUMJ7X.png</td>\n",
              "      <td>0.569214</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>HMIG9O5L.png</td>\n",
              "      <td>0.970563</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>NaN</td>\n",
              "      <td>DIP51CYU.png</td>\n",
              "      <td>0.898653</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     0             N         V\n",
              "0  0.2           NaN       NaN\n",
              "0  NaN  2QQU1DXS.png  0.536492\n",
              "1  NaN  AGOUMJ7X.png  0.569214\n",
              "2  NaN  HMIG9O5L.png  0.970563\n",
              "3  NaN  DIP51CYU.png  0.898653"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AI_Bwo5g8Hi-"
      },
      "source": [
        "df1.to_csv(\"/content/22_without_comma_corrected_on_arrays_df.csv\", index=False, header=None)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SPvnbAzCet6b"
      },
      "source": [
        "import csv\n",
        "\n",
        "with open('/content/on_arrays_str.csv', 'w') as myfile:\n",
        "    res = csv.writer(myfile, delimiter='\\n')\n",
        "    res.writerow(list(zip(test_array_names, test_array)))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ps0_7XWxhHvf"
      },
      "source": [
        "import csv\n",
        "\n",
        "with open('/content/on_arrays_str_comma.csv', 'w') as myfile:\n",
        "    res = csv.writer(myfile, delimiter=',')\n",
        "    res.writerow(list(zip(test_array_names, test_array)))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bztSJUW-9DCT"
      },
      "source": [
        "with open(\"model_on_arrays_df.txt\", \"a\") as f:\n",
        "  f.write(df.to_string())"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rMXowoxjsfR5"
      },
      "source": [
        "os.chdir(\"/content\")\n",
        "with open('my_model_on_arrays.txt', 'w') as f:\n",
        "    for item in test_array:\n",
        "        f.write(str(item)+'\\n')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k20v9--CMa-m"
      },
      "source": [
        "os.chdir(\"/content\")\n",
        "f=open('my_model_on_arrays.txt', 'w')\n",
        "for item in test_array:\n",
        "  f.write(item+'\\n')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c-u7z4FLuMgC"
      },
      "source": [
        "files.download(\"model_on_arrays\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H0Ei6y_S7hY6"
      },
      "source": [
        "predict(\"/content/test\"))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mGxSTWRkRXrE"
      },
      "source": [
        "predict('/content/IDRND_FASDB_train/spoof')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k4pLSZDgcHJd"
      },
      "source": [
        "im = load_img(\"/content/IDRND_FASDB_train/spoof/FT720P_G780_REDMI4X_id1_s0_60.png\", target_size=(300, 300), color_mode=\"grayscale\")\n",
        "      \n",
        "x = img_to_array(im) \n",
        "x/=255.0\n",
        "x = x.reshape((1,) + x.shape) \n",
        "predictions = model.predict(x)\n",
        "    "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sdl0qHXveVmO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "3c0573bb-e68c-498b-fb8a-067cf2214c84"
      },
      "source": [
        "predictions"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.07753829]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s-oSTGZCdwTU",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "dddde3cf-f339-420f-b598-1d07e0add360"
      },
      "source": [
        "x.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(400, 400, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EgfYCzvechGS"
      },
      "source": [
        "im = load_img(\"/content/IDRND_FASDB_train/real/AA5742_id154_s0_112.png\", target_size=(300, 300), color_mode=\"grayscale\") #ggg\n",
        "      \n",
        "x = img_to_array(im) \n",
        "x/=255.0\n",
        "x = x.reshape((1,) + x.shape) \n",
        "predictions = model.predict(x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fc0ZwWYrRyH7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "dada1ab5-f7ab-44df-a83e-4dd5170ce162"
      },
      "source": [
        "float(predictions)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9917821884155273"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GlSowDb8BU4b"
      },
      "source": [
        "test_array=np.array(test_array)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gmryemIeDN52"
      },
      "source": [
        "for batch in test_array:\n",
        "  "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QX_rIud49--7"
      },
      "source": [
        "test_array/=255"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GEFPyR-RrE9R"
      },
      "source": [
        "predictions = model.predict(x_test)\n",
        "predictions = np.argmax(predictions, axis=1)\n",
        "out = np.column_stack((range(1, predictions.shape[0]+1), predictions))\n",
        "np.savetxt('submission.csv', out, header=\"ImageId,Label\", \n",
        "            comments=\"\", fmt=\"%d,%d\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qu1dJf_O2F_7"
      },
      "source": [
        "## Resaving part of data in new folder \n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LjjPBDrD2PVk"
      },
      "source": [
        "os.chdir(\"/content\")\n",
        "!mkdir \"attempt\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-tln75Zs8C2E"
      },
      "source": [
        "os.chdir(\"/content/attempt\")\n",
        "!mkdir \"real\"\n",
        "!mkdir \"spoof\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OMRUk6sUWiaz"
      },
      "source": [
        "import io\n",
        "from keras.preprocessing.image import load_img, img_to_array, save_img\n",
        "import glob\n",
        "import os"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_aRCXuxo0TXj"
      },
      "source": [
        "!rm -r /content/attempt"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6DVoIeadhUdw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "dc0451a8-1308-44af-cac6-f9997f3abab6"
      },
      "source": [
        "len(os.listdir(\"/content/attempt/real\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 192
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ttn4rVBeCGrn"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  im = load_img(f)\n",
        "  \n",
        "    \n",
        "  x = img_to_array(im) \n",
        "    #x = x.reshape((1,) + x.shape)\n",
        "  save_img(\"/content/attempt/real/\"+f, x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kz3Gf3QD4-Im"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  im = load_img(f)\n",
        "  \n",
        "    \n",
        "  x = img_to_array(im) \n",
        "    #x = x.reshape((1,) + x.shape)  \n",
        "  save_img(\"/content/attempt/spoof/\"+f, x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o8VvYbROzq1X",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "3b443487-c8d5-4d60-a856-6d840ee27522"
      },
      "source": [
        "len(os.listdir(\"/content/attempt/spoof\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1200"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hkc3dlQzwk_J"
      },
      "source": [
        "#check model trainable layers if layers[-2] through model_summary"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FChuDzHMwldS"
      },
      "source": [
        "or else:\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y8-1QthL2dzu"
      },
      "source": [
        "dir_real=\"/content/IDRND_FASDB_train/real\"\n",
        "dir2='/content/attempt/real'\n",
        "for img in os.listdir(dir_real)[:2]:\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      im = load_img(img, color_mode=\"grayscale\")\n",
        "    except (PIL.UnidentifiedImageError, FileNotFoundError):\n",
        "      continue\n",
        "    x = img_to_array(im) \n",
        "    #x = x.reshape((1,) + x.shape)  \n",
        "    save_img(dir2+\"/\"+x, \"JPEG\")\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rl9Cl_xAZDeF"
      },
      "source": [
        "dir_spoof=\"/content/IDRND_FASDB_train/spoof\"\n",
        "dir3='/content/attempt/spoof'\n",
        "for img in os.listdir(dir_spoof)[:10]:\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      im = load_img(img, color_mode=\"grayscale\")\n",
        "    except (PIL.UnidentifiedImageError, FileNotFoundError):\n",
        "      continue\n",
        "    x = img_to_array(im) \n",
        "    #x = x.reshape((1,) + x.shape)  \n",
        "    save_img(dir3+\"/\"+x, \"JPEG\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qv-GeQVGZFGj"
      },
      "source": [
        " else 2 variants below"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uKbt9eRqa1KM"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WLD3SnyRD7WH"
      },
      "source": [
        "dir='/content/IDRND_FASDB_train/real'\n",
        "dir2=(\"/content/attempt/real\")\n",
        "for img in os.listdir(dir)[:2]:\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      with open(img, \"rb\") as f:\n",
        "      \n",
        "        im = Image.open(io.BytesIO(f.read()))\n",
        "        im.save(dir2+\"/\"+img, 'JPEG')\n",
        "    except (PIL.UnidentifiedImageError, FileNotFoundError):\n",
        "      continue\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PlhxKmCO2jO7"
      },
      "source": [
        "dir2=\"/content/IDRND_FASDB_train/spoof\"\n",
        "for img in os.listdir(dir2):\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      im = load_img(img)\n",
        "    except (PIL.UnidentifiedImageError, FileNotFoundError):\n",
        "      continue\n",
        "    x = img_to_array(im) \n",
        "    x = x.reshape((1,) + x.shape)  \n",
        "\n",
        "\n",
        "i = 0\n",
        "for batch in datagen_for_short.flow(x, batch_size=1,\n",
        "                          save_to_dir='/content/sample_data/training/spoof', save_prefix='spoof', save_format='jpeg'):\n",
        "    i += 1\n",
        "    if i > 50:\n",
        "        break"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "m5GqpqvlYvJO"
      },
      "source": [
        "## end of formong new folder"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WdNoP8_kwZbL"
      },
      "source": [
        "## remove checkpoints folders"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7nm6M5lAwfgM",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 70
        },
        "outputId": "96871b4c-fa24-43e3-9cfa-6459f89911bd"
      },
      "source": [
        "!rm -r /content/IDRND_FASDB_train/.ipynb_checkpoints\n",
        "!rm -r /content/IDRND_FASDB_train/real.ipynb_checkpoints\n",
        "!rm -r /content/IDRND_FASDB_train/spoof.ipynb_checkpoints\n",
        "#!rm -r data/emmanotemma/valid/notemma/.ipynb_checkpoints\n",
        "#!rm -r data/emmanotemma/train/notemma/.ipynb_checkpoints"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "rm: cannot remove '/content/IDRND_FASDB_train/.ipynb_checkpoints': No such file or directory\n",
            "rm: cannot remove '/content/IDRND_FASDB_train/real.ipynb_checkpoints': No such file or directory\n",
            "rm: cannot remove '/content/IDRND_FASDB_train/spoof.ipynb_checkpoints': No such file or directory\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2_usYenr4dVn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "8c45d7e1-85a0-4ac1-9ba8-5b65c7368720"
      },
      "source": [
        "!rm -r /content/attempt/spoof/.ipynb_checkpoints"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "rm: cannot remove '/content/attempt/spoof/.ipynb_checkpoints': No such file or directory\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "03RRnP-74qCO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "6faadaf2-b08b-4a48-e4e1-7452739528c6"
      },
      "source": [
        "!rm -r /content/attempt/real/.ipynb_checkpoints"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "rm: cannot remove '/content/attempt/real/.ipynb_checkpoints': No such file or directory\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iupaPdZ0w5A5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "97076928-3fd3-4f97-b4b2-8f0e69e0b27a"
      },
      "source": [
        "%cd '/content/IDRND_FASDB_train/'\n",
        "!find '.' -name '*.ipynb_checkpoints' -exec rm -r {} +"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/IDRND_FASDB_train\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Qx7CoKBMV-Ii"
      },
      "source": [
        "## try to remove corrupt files"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FqgFU9tVT6lT"
      },
      "source": [
        "import random"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saP97aOCUD5X",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "913252b0-e32f-4195-8917-6465860bff55"
      },
      "source": [
        "len(os.listdir(\"/content/IDRND_FASDB_train/spoof\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8237"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tkimuHAFf-KQ"
      },
      "source": [
        "ffffffffffff"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CZo_GRnDFH8K"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "#files = os.listdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  if not f.endswith(\".png\"):\n",
        "    os.remove(f)\n",
        "  if os.stat(f).st_size==0:\n",
        "    os.remove(f)\n",
        "  if f.startswith('.'):\n",
        "      os.remove(f)\n",
        "  #if not os.path.isfile():\n",
        "    #os.remove(f)\n",
        "  if not os.path.isfile(\"/content/IDRND_FASDB_train/spoof/\"+f):\n",
        "    os.remove(f)\n",
        "\n",
        "\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Lc7YpcGNGRZm"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  try:\n",
        "    with open(f, \"rb\") as f:\n",
        "      Image.open(io.BytesIO(f.read()))\n",
        "    \n",
        "  except PIL.UnidentifiedImageError:\n",
        "    os.remove(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RBg2_aUEBqYk"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0iTkdkGL2Cz7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b4f6d5d5-392e-4d74-b0b7-2834217065ce"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "!ls -1 | wc -l"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1903\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "F-hs6oBC3PxQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "0b1c8fca-64a4-4f19-98a8-e5dbc48b598b"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "!mv \"/content/IDRND_FASDB_train/spoof/.ipynb_checkpoints\" '/content/'"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "mv: cannot stat '/content/IDRND_FASDB_train/spoof/.ipynb_checkpoints': No such file or directory\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EMV-b_ehX0UB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "94ba7b69-53bd-417d-860b-26310599c37f"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "!mv \".ipynb_checkpoints\" '/content/'"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "mv: cannot stat '.ipynb_checkpoints': No such file or directory\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NzZtxiPu75DN"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "files = os.listdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in files:\n",
        "  if \".ipynb_checkpoints\" in f:\n",
        "    os.remove(f)\n",
        "  if not f.endswith(\"png\"):\n",
        "    os.remove(f)\n",
        "  if not os.path.isfile(\"/content/IDRND_FASDB_train/train/\"+f):\n",
        "    os.remove(f)\n",
        "  #if os.stat(f).st_size==0:\n",
        "    #os.remove(f)\n",
        "  #if f.startswith('.'):\n",
        "    \n",
        "    #os.rename(f, \"somefile.png\") "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r0aLniYrFoz0"
      },
      "source": [
        "\n",
        "\n",
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  try:\n",
        "    with open(f, \"rb\") as f:\n",
        "      Image.open(io.BytesIO(f.read()))\n",
        "    \n",
        "  except PIL.UnidentifiedImageError:\n",
        "    os.remove(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8E1HJ27OFQn4"
      },
      "source": [
        "######################################\n",
        "#########EXTRA VARIANT\n",
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "    try:\n",
        "      load_img(f, grayscale=False, color_mode='rgb')\n",
        "    except PIL.UnidentifiedImageError:\n",
        "      os.remove(f)\n",
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "    try:\n",
        "      load_img(f, grayscale=False, color_mode='rgb')\n",
        "    except PIL.UnidentifiedImageError:\n",
        "      os.remove(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sFO7X_bJDsR5"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train\")\n",
        "for dir in \"/content/IDRND_FASDB_train\":\n",
        "   if dir.startswith('.'):\n",
        "      !rm dir"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ybK9dO9NRHzO"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for dir in \"/content/IDRND_FASDB_train/spoof\":\n",
        "   if dir.startswith('.'):\n",
        "      !rm dir"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rc_76CIKRIMw"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for dir in \"/content/IDRND_FASDB_train/real\":\n",
        "   if dir.startswith('.'):\n",
        "      !rm dir"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Rj_Yp3RKRdKy"
      },
      "source": [
        "for f in os.listdir(\"/content/IDRND_FASDB_train/real\"):\n",
        "  if \"ipynb_checkpoints\" in f:\n",
        "    os.remove(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PGLWnzT-pL35"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xtZC49VeovAg"
      },
      "source": [
        "for f in os.listdir(\"/content/IDRND_FASDB_train/spoof\"):\n",
        "  if \"ipynb_checkpoints\" in f:\n",
        "    os.remove(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "URVn_0pxO2sD"
      },
      "source": [
        "## #"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cjfJJaG--wwt"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GrOWVzBHbjKT"
      },
      "source": [
        "## Second Variant ResNet 50"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s6axfUEK_Vk2"
      },
      "source": [
        "from tensorflow.keras.applications.resnet50 import ResNet50\n",
        "from tensorflow.keras.preprocessing import image\n",
        "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
        "from tensorflow.keras.applications.resnet50 import preprocess_input, decode_predictions\n",
        "import numpy as np\n",
        "from tensorflow.keras.models import Model\n",
        "from tensorflow.keras.layers import Dense\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M9DeZxDScpnB"
      },
      "source": [
        "train_datagen = ImageDataGenerator(preprocessing_function=preprocess_input,\n",
        "                                   \n",
        "                                   validation_split=0.2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u_tL5QmVyGVb"
      },
      "source": [
        "def some(train_datagen):\n",
        "  while True:\n",
        "    try:\n",
        "      data, labels = next(train_datagen)\n",
        "      yield data, labels\n",
        "    except:\n",
        "      pass"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GaC85_rZnnbu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "22ddc8bf-6dd8-457f-f32f-4fcc1afb908a"
      },
      "source": [
        "\n",
        "\n",
        "train_generator = train_datagen.flow_from_directory( \n",
        "    '/content/filtered',\n",
        "    target_size=(224, 224), shuffle=True,\n",
        "    batch_size=32,\n",
        "    class_mode='categorical', #class_mode='binary'\n",
        "    classes=[\"spoof\", \"real\"],\n",
        "    subset='training')\n",
        "\n",
        "validation_generator = train_datagen.flow_from_directory(\n",
        "    '/content/filtered',\n",
        "    target_size=(224, 224),\n",
        "    batch_size=32, shuffle=True,\n",
        "    class_mode='categorical',\n",
        "    classes=[\"spoof\", \"real\"],\n",
        "    subset='validation')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Found 1920 images belonging to 2 classes.\n",
            "Found 480 images belonging to 2 classes.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "80JGwJHvzUuf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "79e49746-24a4-4f00-e79a-d3b060cf6eb8"
      },
      "source": [
        "train_generator.class_indices"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'real': 1, 'spoof': 0}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 186
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uO_DxjvMiQFg"
      },
      "source": [
        "base = ResNet50(weights=\"imagenet\", include_top=True, input_shape=(224, 224, 3))#(weights='imagenet')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N4a0pR2fpaml"
      },
      "source": [
        "base.summary()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5dQ1B06Atpdt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "d1013678-abc2-4e04-a6f0-7a16115478f2"
      },
      "source": [
        "len(base.layers)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "177"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 232
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wgUdOtzXlhM9"
      },
      "source": [
        "#x=base.get_layer('conv5_block3_out').output\n",
        "#x=Flatten()(x)\n",
        "x=base.layers[-2].output\n",
        "\n",
        "x = Dense(1024, activation='relu', kernel_regularizer=\"l1_l2\")(x) #(base.layers[-2].output)\n",
        "x=Dropout(0.8)(x)\n",
        "x=BatchNormalization()(x)\n",
        "x=Dense(1024, activation=\"relu\", kernel_regularizer=\"l1_l2\")(x)\n",
        "x=Dense(28, activation=\"relu\")(x)\n",
        "x=Dropout(0.7)(x)\n",
        "\n",
        "final = Dense(2, activation='softmax')(x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xek2yXCalZPr"
      },
      "source": [
        "x=base.layers[-2].output #conv4_block6_out\"\n",
        "\n",
        "\n",
        "#x=base.layers[-1].output\n",
        "#x=Flatten()(x) #initially - layers[-2].output\n",
        "\n",
        "x=Dropout(0.8)(x)\n",
        "x = Dense(1024, activation='relu')(x) #(base.layers[-2].output)\n",
        "x=BatchNormalization()(x)\n",
        "x=Dense(128, activation=\"relu\")(x)\n",
        "x=Dense(64, activation=\"relu\")(x)\n",
        "x=Dense(28, activation=\"relu\")(x)\n",
        "x=Dropout(0.8)(x)\n",
        "\n",
        "final = Dense(2, activation='softmax')(x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VPXIfph40Aj1"
      },
      "source": [
        "\n",
        "my_model = Model(inputs=base.input, outputs=final)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T0kfYXn35yex"
      },
      "source": [
        "for layer in base.layers[:178]:\n",
        "    layer.trainable = False\n",
        "    #for layer in base.layers[172:]:\n",
        "      #layer.trainable=True"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VaD9aVNn3ms7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b3089858-b760-4a69-e8d8-8479386551db"
      },
      "source": [
        "len(my_model.layers)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "182"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oRtZNnvJi5HF"
      },
      "source": [
        "my_model.summary()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yDzxoZFqotKd"
      },
      "source": [
        "################################################################################\n",
        "my_model.fit_generator(\n",
        "    train_generator,\n",
        "    steps_per_epoch = train_generator.samples // batch_size,\n",
        "    validation_data = validation_generator, \n",
        "    validation_steps = validation_generator.samples // batch_size,\n",
        "    epochs = 10, verbose=1)\n",
        "###################################################################################"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tmJwab0c4chv"
      },
      "source": [
        "#batch_size=10 #steps_per_epoch = train_generator.samples // batch_size,"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fZAH9_WlotZ5"
      },
      "source": [
        "сheckpoint1 = ModelCheckpoint('self or false_resnet.h5', \n",
        "                              monitor='val_accuracy', \n",
        "                              save_best_only=True,\n",
        "                              verbose=1)\n",
        "#checkpoint=tf.keras.callbacks.EarlyStopping(patience=2, monitor=\"val_accuracy\", verbose=1, \n",
        "                                            #restore_best_weights=True, mode=\"auto\")\n",
        "learning_rate_reduction = ReduceLROnPlateau(monitor='val_accuracy', \n",
        "                                            patience=3, \n",
        "                                            verbose=1, \n",
        "                                            factor=0.5, \n",
        "                                            min_lr=0.00001)\n",
        "my_model.compile(loss=\"binary_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n",
        "  "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H3-jyzuOmfid",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "94acde6e-a26a-4391-fb97-715cf718b7fe"
      },
      "source": [
        "\n",
        "history = my_model.fit(\n",
        "    train_generator, steps_per_epoch=30, #50\n",
        "    \n",
        "    validation_data = validation_generator,\n",
        "    \n",
        "    epochs = 30, verbose=1,\n",
        "    callbacks=[сheckpoint1, learning_rate_reduction])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 2.8819 - accuracy: 0.9135\n",
            "Epoch 00001: val_accuracy did not improve from 0.72292\n",
            "30/30 [==============================] - 19s 617ms/step - loss: 2.8819 - accuracy: 0.9135 - val_loss: 3.2482 - val_accuracy: 0.7229\n",
            "Epoch 2/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 2.9354 - accuracy: 0.9396\n",
            "Epoch 00002: val_accuracy did not improve from 0.72292\n",
            "30/30 [==============================] - 19s 622ms/step - loss: 2.9354 - accuracy: 0.9396 - val_loss: 3.2001 - val_accuracy: 0.7208\n",
            "Epoch 3/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 3.1097 - accuracy: 0.9156\n",
            "Epoch 00003: val_accuracy improved from 0.72292 to 0.73542, saving model to self or false_resnet.h5\n",
            "30/30 [==============================] - 20s 669ms/step - loss: 3.1097 - accuracy: 0.9156 - val_loss: 3.4752 - val_accuracy: 0.7354\n",
            "Epoch 4/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 3.0758 - accuracy: 0.9281\n",
            "Epoch 00004: val_accuracy did not improve from 0.73542\n",
            "30/30 [==============================] - 18s 614ms/step - loss: 3.0758 - accuracy: 0.9281 - val_loss: 4.2243 - val_accuracy: 0.6229\n",
            "Epoch 5/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 3.1184 - accuracy: 0.9302\n",
            "Epoch 00005: val_accuracy improved from 0.73542 to 0.78542, saving model to self or false_resnet.h5\n",
            "30/30 [==============================] - 20s 667ms/step - loss: 3.1184 - accuracy: 0.9302 - val_loss: 3.6922 - val_accuracy: 0.7854\n",
            "Epoch 6/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 3.0633 - accuracy: 0.9302\n",
            "Epoch 00006: val_accuracy did not improve from 0.78542\n",
            "30/30 [==============================] - 19s 623ms/step - loss: 3.0633 - accuracy: 0.9302 - val_loss: 3.5861 - val_accuracy: 0.7042\n",
            "Epoch 7/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 2.9690 - accuracy: 0.9438\n",
            "Epoch 00007: val_accuracy did not improve from 0.78542\n",
            "30/30 [==============================] - 18s 616ms/step - loss: 2.9690 - accuracy: 0.9438 - val_loss: 3.5820 - val_accuracy: 0.6896\n",
            "Epoch 8/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 2.7742 - accuracy: 0.9417\n",
            "Epoch 00008: val_accuracy did not improve from 0.78542\n",
            "\n",
            "Epoch 00008: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n",
            "30/30 [==============================] - 19s 618ms/step - loss: 2.7742 - accuracy: 0.9417 - val_loss: 3.2931 - val_accuracy: 0.7437\n",
            "Epoch 9/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 1.9187 - accuracy: 0.9594\n",
            "Epoch 00009: val_accuracy did not improve from 0.78542\n",
            "30/30 [==============================] - 18s 611ms/step - loss: 1.9187 - accuracy: 0.9594 - val_loss: 1.9617 - val_accuracy: 0.7458\n",
            "Epoch 10/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 1.3960 - accuracy: 0.9708\n",
            "Epoch 00010: val_accuracy did not improve from 0.78542\n",
            "30/30 [==============================] - 19s 622ms/step - loss: 1.3960 - accuracy: 0.9708 - val_loss: 1.8214 - val_accuracy: 0.7521\n",
            "Epoch 11/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 1.3572 - accuracy: 0.9719\n",
            "Epoch 00011: val_accuracy improved from 0.78542 to 0.78958, saving model to self or false_resnet.h5\n",
            "30/30 [==============================] - 20s 660ms/step - loss: 1.3572 - accuracy: 0.9719 - val_loss: 1.7098 - val_accuracy: 0.7896\n",
            "Epoch 12/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 1.3836 - accuracy: 0.9688\n",
            "Epoch 00012: val_accuracy did not improve from 0.78958\n",
            "30/30 [==============================] - 19s 619ms/step - loss: 1.3836 - accuracy: 0.9688 - val_loss: 1.8625 - val_accuracy: 0.7792\n",
            "Epoch 13/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 1.4064 - accuracy: 0.9688\n",
            "Epoch 00013: val_accuracy did not improve from 0.78958\n",
            "30/30 [==============================] - 18s 616ms/step - loss: 1.4064 - accuracy: 0.9688 - val_loss: 1.7398 - val_accuracy: 0.7875\n",
            "Epoch 14/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 1.3183 - accuracy: 0.9760\n",
            "Epoch 00014: val_accuracy did not improve from 0.78958\n",
            "\n",
            "Epoch 00014: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n",
            "30/30 [==============================] - 18s 610ms/step - loss: 1.3183 - accuracy: 0.9760 - val_loss: 1.8652 - val_accuracy: 0.7604\n",
            "Epoch 15/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 0.9130 - accuracy: 0.9812\n",
            "Epoch 00015: val_accuracy did not improve from 0.78958\n",
            "30/30 [==============================] - 18s 615ms/step - loss: 0.9130 - accuracy: 0.9812 - val_loss: 1.2372 - val_accuracy: 0.7708\n",
            "Epoch 16/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 0.7447 - accuracy: 0.9833\n",
            "Epoch 00016: val_accuracy did not improve from 0.78958\n",
            "30/30 [==============================] - 19s 619ms/step - loss: 0.7447 - accuracy: 0.9833 - val_loss: 1.2361 - val_accuracy: 0.7375\n",
            "Epoch 17/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 0.7729 - accuracy: 0.9771\n",
            "Epoch 00017: val_accuracy did not improve from 0.78958\n",
            "\n",
            "Epoch 00017: ReduceLROnPlateau reducing learning rate to 6.25000029685907e-05.\n",
            "30/30 [==============================] - 18s 613ms/step - loss: 0.7729 - accuracy: 0.9771 - val_loss: 1.2507 - val_accuracy: 0.7437\n",
            "Epoch 18/30\n",
            "30/30 [==============================] - ETA: 0s - loss: 0.5639 - accuracy: 0.9812"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-98-7e104b431dca>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0mepochs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m30\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m     callbacks=[сheckpoint1, learning_rate_reduction])\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36m_method_wrapper\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    106\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_method_wrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    107\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_in_multi_worker_mode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 108\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m     \u001b[0;31m# Running inside `run_distribute_coordinator` already.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1131\u001b[0m               \u001b[0mworkers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mworkers\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1132\u001b[0m               \u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1133\u001b[0;31m               return_dict=True)\n\u001b[0m\u001b[1;32m   1134\u001b[0m           \u001b[0mval_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'val_'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mval\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mval_logs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1135\u001b[0m           \u001b[0mepoch_logs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mval_logs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36m_method_wrapper\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    106\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_method_wrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    107\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_in_multi_worker_mode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 108\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m     \u001b[0;31m# Running inside `run_distribute_coordinator` already.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36mevaluate\u001b[0;34m(self, x, y, batch_size, verbose, sample_weight, steps, callbacks, max_queue_size, workers, use_multiprocessing, return_dict)\u001b[0m\n\u001b[1;32m   1377\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mtrace\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'TraceContext'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgraph_type\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'test'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstep_num\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1378\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_test_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1379\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtest_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1380\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1381\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    778\u001b[0m       \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    779\u001b[0m         \u001b[0mcompiler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"nonXla\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 780\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    781\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    782\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    812\u001b[0m       \u001b[0;31m# In this case we have not created variables on the first call. So we can\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    813\u001b[0m       \u001b[0;31m# run the first trace but we should fail if variables are created.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 814\u001b[0;31m       \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    815\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_created_variables\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    816\u001b[0m         raise ValueError(\"Creating variables on a non-first call to a function\"\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2827\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_lock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2828\u001b[0m       \u001b[0mgraph_function\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_maybe_define_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2829\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mgraph_function\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_filtered_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2830\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2831\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_filtered_call\u001b[0;34m(self, args, kwargs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1846\u001b[0m                            resource_variable_ops.BaseResourceVariable))],\n\u001b[1;32m   1847\u001b[0m         \u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1848\u001b[0;31m         cancellation_manager=cancellation_manager)\n\u001b[0m\u001b[1;32m   1849\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1850\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_call_flat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcaptured_inputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcancellation_manager\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1922\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1923\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-> 1924\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1925\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1926\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    548\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    549\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 550\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    551\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    552\u001b[0m           outputs = execute.execute_with_cancellation(\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     58\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0;32m---> 60\u001b[0;31m                                         inputs, attrs, num_outputs)\n\u001b[0m\u001b[1;32m     61\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SNcoD1Rvprgd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "outputId": "093d871a-9c93-4fef-9cf0-648fc9c11292"
      },
      "source": [
        "plt.plot(history.history['accuracy'], \n",
        "         label='Доля верных ответов на обучающем наборе')\n",
        "plt.plot(history.history['val_accuracy'], \n",
        "         label='Доля верных ответов на проверочном наборе')\n",
        "plt.xlabel('Эпоха')\n",
        "plt.ylabel('Доля верных ответов')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jRd9-HMOprwX"
      },
      "source": [
        "tf.keras.backend.clear_session()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jjGAfUyaFd6v"
      },
      "source": [
        "my_model.load_weights(\"self or false_resnet.h5\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yiWf_7AtIrI5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        },
        "outputId": "f233ac2b-87e7-47d6-ca66-c3d24adb5ba8"
      },
      "source": [
        "!gdown --id 1teaLCo-F-5RCQM8Puxqbk13bI0evqIzg\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading...\n",
            "From: https://drive.google.com/uc?id=1teaLCo-F-5RCQM8Puxqbk13bI0evqIzg\n",
            "To: /content/IDRND_FASDB_train/spoof/test.tar.gz\n",
            "1.71GB [00:10, 158MB/s] \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lJzEJ75fLEgp"
      },
      "source": [
        "#!wget https://drive.google.com/file/d/1teaLCo-F-5RCQM8Puxqbk13bI0evqIzg/edit"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tpNULJHvIRPA"
      },
      "source": [
        "#!tar -xvzf \"/content/sample_data/test.tar.gz\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kV_IYrtNtUgN",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "a8b76603-d9f3-4d35-dcbe-92c2c521af03"
      },
      "source": [
        "!mv /content/IDRND_FASDB_train/spoof/test.tar.gz /content/"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "mv: cannot stat '/content/IDRND_FASDB_train/spoof/test.tar.gz': No such file or directory\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xkUhjVkMw5BQ"
      },
      "source": [
        "!cd /content/"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rqui3YhitpNE"
      },
      "source": [
        "!tar -xvzf \"/content/test.tar.gz\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QAgNmsn-uKP_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "de1472d7-ea3c-4948-8cce-3089a70b41f0"
      },
      "source": [
        "!mv /content/IDRND_FASDB_train/spoof/test /content/"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "mv: cannot stat '/content/IDRND_FASDB_train/spoof/test': No such file or directory\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jaFqTyzfNzHs",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "692de4e4-f460-43be-c86e-1a2d51eba835"
      },
      "source": [
        "len(os.listdir('/content/test'))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6hAYuCxYTo1y"
      },
      "source": [
        "for f in os.listdir('/content/test'):\n",
        "  \n",
        "  if not f.endswith(\"png\"):\n",
        "\n",
        "    os.remove('/content/test/'+f)\n",
        "\n",
        "  if f.startswith(\".\"):\n",
        "    try:\n",
        "      os.remove('/content/test/'+f)\n",
        "    except FileNotFoundError:\n",
        "      pass"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RKWoSkE4BjOU"
      },
      "source": [
        "sasha=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8uXpy9zjdYnr"
      },
      "source": [
        "os.chdir(\"/content/test\")\n",
        "for im in glob.glob(\"*.png\"):\n",
        "  img=load_img(im, target_size=(224, 224))\n",
        "\n",
        "  x = img_to_array(img) \n",
        "  x=preprocess_input(x)\n",
        "  x = x.reshape((1,) + x.shape) \n",
        "  predictions = my_model.predict(x)\n",
        "  sasha.append([im, predictions[0][1]])\n",
        "\n",
        "  "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vPTsSDa2Xl35"
      },
      "source": [
        "!rm -r /content/IDRND_FASDB_train/spoof/test/.ipynb_checkpoints'"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2-_FxzbEgHdb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "dfd5fb1e-c0e4-4ee7-981d-8ee852a13d20"
      },
      "source": [
        "len(sasha)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 292
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WyHTOLPHg9pf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "56cedad7-2c72-4a8d-b211-72581021ddbf"
      },
      "source": [
        "sasha[:10]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8XhAXNu5RG0i"
      },
      "source": [
        "my_mod=my_model.load"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eQpO95S5ROXb"
      },
      "source": [
        "!mkdir /content/test"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MRzpZPx1Bqve"
      },
      "source": [
        "test_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "y6bL7UHSCf9D",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "b79a2eb4-09f6-47ce-e68f-4e28146cf469"
      },
      "source": [
        "test_generator = test_datagen.flow_from_directory('/content/',                          \n",
        "                              classes=['test'],\n",
        "                            \n",
        "                              class_mode=None,\n",
        "                             \n",
        "                              shuffle=False,\n",
        "                              \n",
        "                              target_size=(224, 224))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Found 10000 images belonging to 1 classes.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "64sPux6Hb3KY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 92
        },
        "outputId": "964f09df-6c0e-4bc6-eaa6-5d4401774cb7"
      },
      "source": [
        "predictions = my_model.predict_generator(test_generator)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:From <ipython-input-123-5ec78f04dcad>:1: Model.predict_generator (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "Please use Model.predict, which supports generators.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T1BW7Jkql7ZT"
      },
      "source": [
        "test_generator.filenames"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pahV5q2gnvCF",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "4f558890-7a2c-45f0-f71d-db7c0c4f5967"
      },
      "source": [
        "test_generator.class_indices"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'test': 0}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 226
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Dqmt7lQ0mza3"
      },
      "source": [
        "import pandas as pd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lQMUO6OHmzbM",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "a71aa3b9-2523-43c0-f80b-4c0486f56b44"
      },
      "source": [
        "predictions[9] ccc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1., 0.], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mMBhsDa2IcNR"
      },
      "source": [
        "df=pd.DataFrame({\"files\":test_generator.filenames,\"predictions\": predictions[0][1]})"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ktnPezZ4YcCQ"
      },
      "source": [
        "df1=pd.DataFrame([sasha[0], sasha[1]])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0itHFVkfmzbS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 198
        },
        "outputId": "ca36f775-7423-4968-d4e2-9078c3fccccf"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>files</th>\n",
              "      <th>predictions</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>test/0004TGCC.png</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>test/00BMIGHK.png</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>test/00DH97CQ.png</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>test/00GZOF2Z.png</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>test/00I3IO2B.png</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               files  predictions\n",
              "0  test/0004TGCC.png          0.0\n",
              "1  test/00BMIGHK.png          0.0\n",
              "2  test/00DH97CQ.png          0.0\n",
              "3  test/00GZOF2Z.png          0.0\n",
              "4  test/00I3IO2B.png          0.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 128
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WtSKVTKcmzbX"
      },
      "source": [
        "with open(\"model_on_arrays_df.txt\", \"a\") as f:\n",
        "  f.write(df.to_string())"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qErta2fXmzbb"
      },
      "source": [
        "os.chdir(\"/content\")\n",
        "with open('resnet_based_model.txt', 'w') as f:\n",
        "    for item in sasha:\n",
        "        f.write(str(item)+'\\n')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "x2_rp96Amzbh"
      },
      "source": [
        "files.download(\"model_on_arrays\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5KlxWGuychwu"
      },
      "source": [
        "preprocess as below"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bKDWDfr89B9l"
      },
      "source": [
        "# xxx"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CsD1OccpaiTl"
      },
      "source": [
        "im = load_img(\"/content/IDRND_FASDB_train/spoof/FT720P_G780_REDMI4X_id1_s0_60.png\", target_size=(224, 224))\n",
        "      \n",
        "x = img_to_array(im) \n",
        "x=preprocess_input(x)\n",
        "x = x.reshape((1,) + x.shape) \n",
        "predictions = my_model.predict(x)\n",
        "\n",
        "    "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VdIGoREbaiTt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "459ff4b4-6706-4ed3-d590-c944b492d860"
      },
      "source": [
        "predictions"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.9526962 , 0.04730381]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 206
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xxkJLNXyaiTy",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "dddde3cf-f339-420f-b598-1d07e0add360"
      },
      "source": [
        "x.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(400, 400, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tpVDNfTOaiT3"
      },
      "source": [
        "im = load_img(\"/content/IDRND_FASDB_train/real/AA5742_id154_s0_112.png\", target_size=(224, 224))\n",
        "      \n",
        "x = img_to_array(im) \n",
        "x=preprocess_input(x)\n",
        "x = x.reshape((1,) + x.shape) \n",
        "predictions = my_model.predict(x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OyGoVajLdjYi",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "f7e4a0b1-f529-4a6e-c3ac-b488446a7c8f"
      },
      "source": [
        "predictions"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.1261546, 0.8738454]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 200
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_sTgIjqzk6yj"
      },
      "source": [
        "tf.keras.preprocessing.image.load_img(\n",
        "    path, grayscale=False, color_mode='rgb', target_size=None,\n",
        "    interpolation='nearest' )"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DpcVAlJhVPA8"
      },
      "source": [
        " path, grayscale=False, color_mode='rgb', target_size=None,\n",
        "    interpolation='nearest' )"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TOuvhI6sUQZo"
      },
      "source": [
        "#p = pd.Panel({'df': df, 'csc': csc})"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VS5JuSy-T2CS"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eXysoQPaa1EU"
      },
      "source": [
        "test_array_names=[]\n",
        "#for img in os.listdir(\"/content/test\"): #for img in os.listdir(dir):\n",
        "\n",
        "    #im = load_img(img, target_size=(400, 400), color_mode=\"grayscale\")\n",
        "for f in os.listdir(\"/content/test\"):\n",
        "\n",
        "  if f.endswith(\".png\"):\n",
        "    \n",
        "    test_array_names.append(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Nin-hO6La1En",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "c8071855-d0e2-4bc1-d2e6-af022d2e9540"
      },
      "source": [
        "len(sasha)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10001"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kIPwrslVa1Eu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "ffd91c7b-687a-4231-c4cf-0d96887a397e"
      },
      "source": [
        "len(test_array_names)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 207
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b-tjrzmya1Ez"
      },
      "source": [
        "sasha.insert(0, \"\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "URE7xT8da1E3"
      },
      "source": [
        "test_array_names.insert(0, round(0.2, 1)) #\"%.1f\" % 0.2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b65Pjw0Pa1E7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "21093467-41b3-4a57-dcdb-2e476d04b58a"
      },
      "source": [
        "test_array_names[0]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eKBx5cria1FB"
      },
      "source": [
        "import pandas as pd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Mhz_1fzna1FF"
      },
      "source": [
        "df = pd.DataFrame(list(zip(test_array_names, sasha)))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qqRNfi6ya1FI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 198
        },
        "outputId": "810f41cc-724a-44a7-8967-739a658c42d9"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.2</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>TD5CMFNY.png</td>\n",
              "      <td>0.964658</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>VJGQW758.png</td>\n",
              "      <td>0.6844</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>KS0VFCJR.png</td>\n",
              "      <td>0.0486991</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1LFYH3PH.png</td>\n",
              "      <td>0.822991</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              0          1\n",
              "0           0.2           \n",
              "1  TD5CMFNY.png   0.964658\n",
              "2  VJGQW758.png     0.6844\n",
              "3  KS0VFCJR.png  0.0486991\n",
              "4  1LFYH3PH.png   0.822991"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 212
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r6RTJVfTa1FL"
      },
      "source": [
        "\n",
        "\n",
        "df.to_csv(\"/content/corrected_resnet_df.csv\", index=False, header=None)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N0_si44ka1FP"
      },
      "source": [
        "df.to_csv(\"/content/simp_corrected_on_arrays_df.csv\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7owSbbFIEbb9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 199
        },
        "outputId": "0652ac64-79cb-4969-b68b-a18e8203412d"
      },
      "source": [
        "os.listdir(\"/content/test\")[:10]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['TD5CMFNY.png',\n",
              " 'VJGQW758.png',\n",
              " 'KS0VFCJR.png',\n",
              " '1LFYH3PH.png',\n",
              " 'KXCBIRHX.png',\n",
              " 'MF8F0K7E.png',\n",
              " 'K7WE5ILO.png',\n",
              " 'WQBTUEO6.png',\n",
              " '3I0MFSWQ.png',\n",
              " 'YGTF2KZH.png']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 214
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1Lz3Hgy1TiEM"
      },
      "source": [
        "## Variant 3 - VGG16"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jCgwx4kkTohx"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HvzIZSixRreJ"
      },
      "source": [
        "from tensorflow.keras.applications.vgg16 import VGG16\n",
        "from tensorflow.keras.preprocessing import image\n",
        "from tensorflow.keras.applications.vgg16 import preprocess_input\n",
        "from tensorflow.keras.models import Model\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OP1YjyRCgCYA"
      },
      "source": [
        "train_datagen = ImageDataGenerator(preprocessing_function=preprocess_input, validation_split=0.2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uF7kxDR3gCth"
      },
      "source": [
        "def some(train_datagen):\n",
        "  while True:\n",
        "    try:\n",
        "      data, labels = next(train_datagen)\n",
        "      yield data, labels\n",
        "    except:\n",
        "      continue"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MPiemn8QIbf2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "3e6ae0c9-ab5b-4ef1-da76-586b241bff1c"
      },
      "source": [
        "\n",
        "train_generator = train_datagen.flow_from_directory(\n",
        "    '/content/attempt',\n",
        "    target_size=(224, 224), shuffle=True, \n",
        "    batch_size=64,\n",
        "    class_mode='categorical', #class_mode='binary'\n",
        "    classes=[\"real\", \"spoof\"],\n",
        "    subset='training') # set as training data\n",
        "\n",
        "validation_generator = train_datagen.flow_from_directory(\n",
        "    '/content/attempt',\n",
        "    target_size=(224, 224), shuffle=True,\n",
        "    batch_size=64,\n",
        "    class_mode='categorical', #class_mode='binary'\n",
        "    classes=[\"real\", \"spoof\"],\n",
        "    subset='validation')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Found 1920 images belonging to 2 classes.\n",
            "Found 480 images belonging to 2 classes.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CNtWF3l27KpL"
      },
      "source": [
        "#my_model=Model(Sequential)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u7jn3xV5l20O",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "51db3b8b-f23b-4fee-8211-250f1ff25708"
      },
      "source": [
        "vgg16 = VGG16(weights=\"imagenet\", include_top=False, input_shape=(224, 224, 3))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n",
            "58892288/58889256 [==============================] - 0s 0us/step\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3HcX8g3xARVe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e25e4594-5233-4617-85a7-96feb259ab9e"
      },
      "source": [
        "len(vgg16.layers)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "19"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 226
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "na540j9pq2N8"
      },
      "source": [
        "for layer in vgg16.layers[:17]: \n",
        "  layer.trainable=False"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QfRFGfsIl55i",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 799
        },
        "outputId": "e1d53110-0d56-400d-f879-9913d16e2b17"
      },
      "source": [
        "vgg16.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"vgg16\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "input_2 (InputLayer)         [(None, None, None, 3)]   0         \n",
            "_________________________________________________________________\n",
            "block1_conv1 (Conv2D)        (None, None, None, 64)    1792      \n",
            "_________________________________________________________________\n",
            "block1_conv2 (Conv2D)        (None, None, None, 64)    36928     \n",
            "_________________________________________________________________\n",
            "block1_pool (MaxPooling2D)   (None, None, None, 64)    0         \n",
            "_________________________________________________________________\n",
            "block2_conv1 (Conv2D)        (None, None, None, 128)   73856     \n",
            "_________________________________________________________________\n",
            "block2_conv2 (Conv2D)        (None, None, None, 128)   147584    \n",
            "_________________________________________________________________\n",
            "block2_pool (MaxPooling2D)   (None, None, None, 128)   0         \n",
            "_________________________________________________________________\n",
            "block3_conv1 (Conv2D)        (None, None, None, 256)   295168    \n",
            "_________________________________________________________________\n",
            "block3_conv2 (Conv2D)        (None, None, None, 256)   590080    \n",
            "_________________________________________________________________\n",
            "block3_conv3 (Conv2D)        (None, None, None, 256)   590080    \n",
            "_________________________________________________________________\n",
            "block3_pool (MaxPooling2D)   (None, None, None, 256)   0         \n",
            "_________________________________________________________________\n",
            "block4_conv1 (Conv2D)        (None, None, None, 512)   1180160   \n",
            "_________________________________________________________________\n",
            "block4_conv2 (Conv2D)        (None, None, None, 512)   2359808   \n",
            "_________________________________________________________________\n",
            "block4_conv3 (Conv2D)        (None, None, None, 512)   2359808   \n",
            "_________________________________________________________________\n",
            "block4_pool (MaxPooling2D)   (None, None, None, 512)   0         \n",
            "_________________________________________________________________\n",
            "block5_conv1 (Conv2D)        (None, None, None, 512)   2359808   \n",
            "_________________________________________________________________\n",
            "block5_conv2 (Conv2D)        (None, None, None, 512)   2359808   \n",
            "_________________________________________________________________\n",
            "block5_conv3 (Conv2D)        (None, None, None, 512)   2359808   \n",
            "_________________________________________________________________\n",
            "block5_pool (MaxPooling2D)   (None, None, None, 512)   0         \n",
            "=================================================================\n",
            "Total params: 14,714,688\n",
            "Trainable params: 14,714,688\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sEYsKSw3cL5C"
      },
      "source": [
        "\n",
        "base_layer = vgg16.get_layer('block5_pool').output\n",
        "x=Flatten()(base_layer)\n",
        "x = Dense(32, activation='relu')(x)\n",
        "x = Dense(2, activation='softmax')(x)\n",
        "\n",
        "my_model = Model(inputs=vgg16.input, outputs=x)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ftqozrUXF9Yp"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nPLQ9RzWiTWK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "f957c705-34b1-4ef9-a50c-5c85ee7575e1"
      },
      "source": [
        "len(vgg16.layers)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "19"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 228
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kVXaXwiXrriO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "outputId": "0af050d9-d61f-4f7c-b6b0-73a3de71986f"
      },
      "source": [
        "my_model.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"functional_3\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "input_4 (InputLayer)         [(None, 224, 224, 3)]     0         \n",
            "_________________________________________________________________\n",
            "block1_conv1 (Conv2D)        (None, 224, 224, 64)      1792      \n",
            "_________________________________________________________________\n",
            "block1_conv2 (Conv2D)        (None, 224, 224, 64)      36928     \n",
            "_________________________________________________________________\n",
            "block1_pool (MaxPooling2D)   (None, 112, 112, 64)      0         \n",
            "_________________________________________________________________\n",
            "block2_conv1 (Conv2D)        (None, 112, 112, 128)     73856     \n",
            "_________________________________________________________________\n",
            "block2_conv2 (Conv2D)        (None, 112, 112, 128)     147584    \n",
            "_________________________________________________________________\n",
            "block2_pool (MaxPooling2D)   (None, 56, 56, 128)       0         \n",
            "_________________________________________________________________\n",
            "flatten_2 (Flatten)          (None, 401408)            0         \n",
            "_________________________________________________________________\n",
            "dense_3 (Dense)              (None, 32)                12845088  \n",
            "_________________________________________________________________\n",
            "dense_4 (Dense)              (None, 2)                 66        \n",
            "=================================================================\n",
            "Total params: 13,105,314\n",
            "Trainable params: 12,845,154\n",
            "Non-trainable params: 260,160\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PbdmRMpFLo_h"
      },
      "source": [
        "opt=tf.keras.optimizers.SGD(learning_rate=0.000001, nesterov=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "awU6Tp1Wcpu6"
      },
      "source": [
        "\n",
        "my_model.compile(optimizer=\"adam\", loss='binary_crossentropy', metrics=[\"accuracy\"])\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "517PGrePe-_N",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 567
        },
        "outputId": "303b5d36-cbf5-4aef-f971-9ae04b6f9086"
      },
      "source": [
        "history=my_model.fit(\n",
        "        train_generator,\n",
        "        steps_per_epoch=20,\n",
        "        epochs=10,\n",
        "        validation_data=validation_generator)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/10\n",
            " 2/20 [==>...........................] - ETA: 7s - loss: 4.7642 - accuracy: 0.4375WARNING:tensorflow:Callbacks method `on_train_batch_end` is slow compared to the batch time (batch time: 0.2498s vs `on_train_batch_end` time: 0.6125s). Check your callbacks.\n",
            "20/20 [==============================] - 29s 1s/step - loss: 7.2796 - accuracy: 0.4891 - val_loss: 7.0295 - val_accuracy: 0.5417\n",
            "Epoch 2/10\n",
            "20/20 [==============================] - 28s 1s/step - loss: 7.1174 - accuracy: 0.5359 - val_loss: 7.1893 - val_accuracy: 0.5312\n",
            "Epoch 3/10\n",
            "20/20 [==============================] - 28s 1s/step - loss: 6.7699 - accuracy: 0.5586 - val_loss: 7.4768 - val_accuracy: 0.5125\n",
            "Epoch 4/10\n",
            "20/20 [==============================] - 28s 1s/step - loss: 6.9257 - accuracy: 0.5484 - val_loss: 7.4768 - val_accuracy: 0.5125\n",
            "Epoch 5/10\n",
            " 9/20 [============>.................] - ETA: 11s - loss: 6.6035 - accuracy: 0.5694"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-230-142965926174>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m         \u001b[0msteps_per_epoch\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m         \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m         validation_data=validation_generator)\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36m_method_wrapper\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    106\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_method_wrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    107\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_in_multi_worker_mode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 108\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    109\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    110\u001b[0m     \u001b[0;31m# Running inside `run_distribute_coordinator` already.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1101\u001b[0m               \u001b[0mlogs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtmp_logs\u001b[0m  \u001b[0;31m# No error, now safe to assign to logs.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1102\u001b[0m               \u001b[0mend_step\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstep\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstep_increment\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1103\u001b[0;31m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_end\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mend_step\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1104\u001b[0m         \u001b[0mepoch_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1105\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/callbacks.py\u001b[0m in \u001b[0;36mon_train_batch_end\u001b[0;34m(self, batch, logs)\u001b[0m\n\u001b[1;32m    438\u001b[0m     \"\"\"\n\u001b[1;32m    439\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_should_call_train_batch_hooks\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 440\u001b[0;31m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_batch_hook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mModeKeys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTRAIN\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'end'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    441\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    442\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mon_test_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/callbacks.py\u001b[0m in \u001b[0;36m_call_batch_hook\u001b[0;34m(self, mode, hook, batch, logs)\u001b[0m\n\u001b[1;32m    287\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_batch_begin_hook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    288\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mhook\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'end'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 289\u001b[0;31m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_batch_end_hook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    290\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    291\u001b[0m       \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Unrecognized hook: {}'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhook\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/callbacks.py\u001b[0m in \u001b[0;36m_call_batch_end_hook\u001b[0;34m(self, mode, batch, logs)\u001b[0m\n\u001b[1;32m    307\u001b[0m       \u001b[0mbatch_time\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_batch_start_time\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    308\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 309\u001b[0;31m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_batch_hook_helper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhook_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    310\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    311\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_timing\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/callbacks.py\u001b[0m in \u001b[0;36m_call_batch_hook_helper\u001b[0;34m(self, hook_name, batch, logs)\u001b[0m\n\u001b[1;32m    340\u001b[0m       \u001b[0mhook\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcallback\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhook_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    341\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcallback\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'_supports_tf_logs'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 342\u001b[0;31m         \u001b[0mhook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    343\u001b[0m       \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    344\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mnumpy_logs\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# Only convert once.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/callbacks.py\u001b[0m in \u001b[0;36mon_train_batch_end\u001b[0;34m(self, batch, logs)\u001b[0m\n\u001b[1;32m    959\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    960\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mon_train_batch_end\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 961\u001b[0;31m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_batch_update_progbar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    962\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    963\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mon_test_batch_end\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlogs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/callbacks.py\u001b[0m in \u001b[0;36m_batch_update_progbar\u001b[0;34m(self, batch, logs)\u001b[0m\n\u001b[1;32m   1014\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mverbose\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1015\u001b[0m       \u001b[0;31m# Only block async when verbose = 1.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1016\u001b[0;31m       \u001b[0mlogs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf_utils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numpy_or_python_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlogs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1017\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprogbar\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mseen\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlogs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfinalize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1018\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py\u001b[0m in \u001b[0;36mto_numpy_or_python_type\u001b[0;34m(tensors)\u001b[0m\n\u001b[1;32m    535\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mt\u001b[0m  \u001b[0;31m# Don't turn ragged or sparse tensors to NumPy.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    536\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 537\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mnest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap_structure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_to_single_numpy_or_python_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtensors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    538\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    539\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/nest.py\u001b[0m in \u001b[0;36mmap_structure\u001b[0;34m(func, *structure, **kwargs)\u001b[0m\n\u001b[1;32m    633\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    634\u001b[0m   return pack_sequence_as(\n\u001b[0;32m--> 635\u001b[0;31m       \u001b[0mstructure\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mentries\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    636\u001b[0m       expand_composites=expand_composites)\n\u001b[1;32m    637\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/nest.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    633\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    634\u001b[0m   return pack_sequence_as(\n\u001b[0;32m--> 635\u001b[0;31m       \u001b[0mstructure\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mentries\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    636\u001b[0m       expand_composites=expand_composites)\n\u001b[1;32m    637\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py\u001b[0m in \u001b[0;36m_to_single_numpy_or_python_type\u001b[0;34m(t)\u001b[0m\n\u001b[1;32m    531\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_to_single_numpy_or_python_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    532\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 533\u001b[0;31m       \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnumpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    534\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    535\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mt\u001b[0m  \u001b[0;31m# Don't turn ragged or sparse tensors to NumPy.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36mnumpy\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1061\u001b[0m     \"\"\"\n\u001b[1;32m   1062\u001b[0m     \u001b[0;31m# TODO(slebedev): Consider avoiding a copy for non-CPU or remote tensors.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1063\u001b[0;31m     \u001b[0mmaybe_arr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1064\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mmaybe_arr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmaybe_arr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mmaybe_arr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1065\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36m_numpy\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1027\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1029\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_numpy_internal\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1030\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1031\u001b[0m       \u001b[0msix\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mraise_from\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_status_to_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MxCtHBBnDCPd"
      },
      "source": [
        "tf.keras.backend.clear_session()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qMxKs1MnjM3d"
      },
      "source": [
        "model.save_weights('withvgg16.h5') "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M8f9c6NgmnN0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "outputId": "09d5d098-580d-4333-fa6e-578ebab18f90"
      },
      "source": [
        "plt.plot(history.history['accuracy'], \n",
        "         label='Доля верных ответов на обучающем наборе')\n",
        "plt.plot(history.history['val_accuracy'], \n",
        "         label='Доля верных ответов на проверочном наборе')\n",
        "plt.xlabel('Эпоха обучения')\n",
        "plt.ylabel('Доля верных ответов')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eQ7it1z6Hh1w"
      },
      "source": [
        "## With face detection embedding "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jWmQKwOH0EOu"
      },
      "source": [
        "!cd /content\n",
        "!mkdir /content/filtered\n",
        "!mkdir /content/filtered/real\n",
        "!mkdir /content/filtered/spoof"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jV46c1CMHY7o"
      },
      "source": [
        "!cd /content\n",
        "!mkdir /content/grey\n",
        "!mkdir /content/grey/real\n",
        "!mkdir /content/grey/spoof"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WF1_GQZSaCyH"
      },
      "source": [
        "!cd /content\n",
        "!mkdir /content/mode\n",
        "!mkdir /content/mode/real\n",
        "!mkdir /content/mode/spoof"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RnnUocXt7KZ6"
      },
      "source": [
        "!rm -r /content/mode\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LVxwXBGivIPN"
      },
      "source": [
        "from PIL import Image, ImageFilter\n",
        "from PIL import ImageEnhance\n",
        "import glob\n",
        "\n",
        "#Import all the enhancement filter from pillow\n",
        "from PIL.ImageFilter import (\n",
        "   BLUR, CONTOUR, DETAIL, EDGE_ENHANCE, EDGE_ENHANCE_MORE,\n",
        "   EMBOSS, FIND_EDGES, SMOOTH, SMOOTH_MORE, SHARPEN, GaussianBlur, ModeFilter)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0MLAeyTiLFA7"
      },
      "source": [
        "fffffffff"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "obVtTaEMZ-4H"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "  img = Image.open(f) #.convert(\"LA\")\n",
        "  im=img.filter(ModeFilter(size=5))\n",
        "  img1 = im.filter(GaussianBlur(radius=20))\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/mode/real/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7ProfjH-bET2"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  \n",
        "  img = Image.open(f) #.convert(\"LA\")\n",
        "  im=img.filter(ModeFilter(size=5))\n",
        "  img1 = im.filter(GaussianBlur(radius=10))\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/mode/spoof/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d92b_vmFFBbt"
      },
      "source": [
        "################################################################"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-KsRplTgFDap"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "  img = Image.open(f).convert(\"L\")\n",
        "  im=img.filter(ModeFilter(size=5))\n",
        "  img1 = im.filter(GaussianBlur(radius=20))\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/grey/real/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j-ZMyG0UFDat"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  \n",
        "  img = Image.open(f).convert(\"L\")\n",
        "  im=img.filter(ModeFilter(size=5))\n",
        "  img1 = im.filter(GaussianBlur(radius=10))\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/grey/spoof/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GLWIUHqdZ_Ps"
      },
      "source": [
        "#################################################\n",
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "  img = Image.open(f) #.convert(\"LA\")\n",
        "\n",
        "  img1 = img.filter(GaussianBlur(radius=10))\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/filtered/spoof/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-ctFtp7evOUy"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "  img = Image.open(f)#.convert(\"LA\")\n",
        "  \n",
        "  img1 = img.filter(GaussianBlur(radius=10))\n",
        "\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/filtered/real/\"+f)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kTke-2Xb1YzB"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "  img = Image.open(f) #.convert(\"LA\")\n",
        "\n",
        "  img1 = img.filter(GaussianBlur(radius=10))\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/filtered/spoof/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tMduTi1BGgj7"
      },
      "source": [
        "########################################################################################################################\n",
        "\n",
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "  img = Image.open(f) #.convert(\"LA\")\n",
        "  matrix = ( 0, 0, 0, 0, \n",
        "            0, 1, 0, 0, \n",
        "            0, 0, 0, 0) \n",
        "  \n",
        "# Transforming the image to RGB using the aforementioned matrix  \n",
        "  img = img.convert(\"RGB\", matrix) \n",
        "  \n",
        "  img1 = img.filter(GaussianBlur(radius=10))\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/2channel/real/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M6FJPJmvGh9Q"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "  img = Image.open(f) #.convert(\"LA\")\n",
        "  matrix = ( 0, 0, 0, 0, \n",
        "            0, 1, 0, 0, \n",
        "            0, 0, 0, 0) \n",
        "  \n",
        "# Transforming the image to RGB using the aforementioned matrix  \n",
        "  img = img.convert(\"RGB\", matrix) \n",
        "  \n",
        "  img1 = img.filter(GaussianBlur(radius=10))\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/2channel/spoof/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "evhGPb7yCpT-"
      },
      "source": [
        "import keras.preprocessing.sequence\n",
        "from keras.preprocessing.image import load_img"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4srfI06UAFp5"
      },
      "source": [
        "dir_real=\"/content/IDRND_FASDB_train/real\"\n",
        "dir_spoof=\"/content/IDRND_FASDB_train/spoof\"\n",
        "     "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cqx0TVja77Xs"
      },
      "source": [
        "dir_real=\"/content/grey/real\"\n",
        "dir_spoof=\"/content/grey/spoof\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qnvOdK0B13vG"
      },
      "source": [
        "dir_real=\"/content/filtered/real\"\n",
        "dir_spoof=\"/content/filtered/spoof\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bXqGTHcAIvas"
      },
      "source": [
        "dir_real=\"/content/mode/real\"\n",
        "dir_spoof=\"/content/mode/spoof\""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XQuCb0S2HCRl"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xq53lVwjrDIZ"
      },
      "source": [
        "#PLAN: ENHANCE AND FLTER "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AADfR9dWMn-H"
      },
      "source": [
        "!pip install arcface"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jx__Zkim_g6s"
      },
      "source": [
        "!pip install keras-facenet"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GVlyRb9tj14F"
      },
      "source": [
        "## from here"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WwhRFruGTjg4"
      },
      "source": [
        "from arcface import ArcFace\n",
        "face_rec = ArcFace.ArcFace()\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PAwU8GrRV6SE"
      },
      "source": [
        "emb_real=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hAkicMlBYDAx",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b1f9cdb7-8a83-4ca1-9b2f-bbcd1861147c"
      },
      "source": [
        "len(os.listdir(dir_real))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1200"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ohd9flzgBCLM"
      },
      "source": [
        "for img in os.listdir(dir_real):\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      emb = face_rec.calc_emb(dir_real+\"/\"+img)\n",
        "      emb_real.append(emb)\n",
        "    except NameError:\n",
        "      continue"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6CXS-zbCX1Q8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "dcb1c2d5-8356-42ec-fd14-8c06de07197f"
      },
      "source": [
        "len(emb_real)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1200"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kkr2blkiV9pH"
      },
      "source": [
        "emb_spoof=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NfvYmnyDVxuA"
      },
      "source": [
        "for img in os.listdir(dir_spoof)[:1200]:\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      emb = face_rec.calc_emb(dir_spoof+\"/\"+img)\n",
        "      emb_spoof.append(emb)\n",
        "    except NameError:\n",
        "      continue"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XshnTiUVcph4"
      },
      "source": [
        "x_train=np.array(emb_real+emb_spoof)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ThdPjf_D9mSN"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9j5bg64gWBmU"
      },
      "source": [
        "y_train=np.array([1]*len(emb_real)+[0]*len(emb_spoof))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9vP4eRsH11vd"
      },
      "source": [
        "from keras.utils import to_categorical"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IHsXr7Dq1dWk"
      },
      "source": [
        "y_train = utils.to_categorical(y_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YqBnXRdHerG9"
      },
      "source": [
        "X_train, X_val, Y_train, Y_val = train_test_split(x_train, y_train, test_size = 0.3, random_state=4)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tqFGUArRdV9z"
      },
      "source": [
        "from keras.regularizers import L1L2"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LjZoP9lTbcUx"
      },
      "source": [
        "############# INITIAL VARIANT FOR WITH_DOPING_2.\n",
        "model = Sequential()\n",
        "model.add(Input(shape=(512,)))\n",
        "\n",
        "#model.add(BatchNormalization())\n",
        "model.add(Dense(1024, activation='relu')) #ADD regul\n",
        "model.add(Dense(1024, activation='relu'))\n",
        "model.add(Dropout(0.4))\n",
        "model.add(BatchNormalization())\n",
        "#model.add(Dense(1024, activation='relu'))\n",
        "model.add(Dense(512, activation='relu'))\n",
        "model.add(Dense(64, activation=\"relu\"))\n",
        "model.add(Dense(28, activation=\"relu\"))\n",
        "model.add(Dense(28, activation=\"relu\"))\n",
        "model.add(Dense(28, activation=\"relu\"))\n",
        "x=Dropout(0.4)\n",
        "\n",
        "model.add(Dense(2, activation='softmax'))\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "z_krq4kZUn7Z"
      },
      "source": [
        "model = Sequential()\n",
        "model.add(Input(shape=(512,)))\n",
        "\n",
        "#model.add(BatchNormalization())\n",
        "model.add(Dense(2048, activation='relu'))\n",
        "model.add(Dropout(0.2))\n",
        "\n",
        "model.add(Dense(2048, activation=\"relu\"))\n",
        "\n",
        "x=Dropout(0.3)\n",
        "model.add(Dense(1024, activation=\"relu\"))\n",
        "model.add(Dense(1024, activation=\"relu\"))\n",
        "x=Dropout(0.5)\n",
        "model.add(Dense(64, activation=\"relu\"))\n",
        "model.add(Dense(64, activation=\"relu\"))\n",
        "model.add(Dropout(0.2))\n",
        "\n",
        "model.add(Dense(28, activation='relu'))\n",
        "\n",
        "model.add(Dense(2, activation='softmax'))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o77kxP4qdICs"
      },
      "source": [
        "model.compile(optimizer='adam',\n",
        "              loss='categorical_crossentropy',\n",
        "              metrics=['accuracy'])\n",
        "сheckpoint = ModelCheckpoint('doping.h5', \n",
        "                              monitor='val_accuracy', \n",
        "                              save_best_only=True,\n",
        "                              verbose=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "94ClVqGybdCM",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "92cb9439-6609-4a24-c457-66769efe0e56"
      },
      "source": [
        "history = model.fit(X_train, Y_train,\n",
        "                    epochs=50, \n",
        "                    validation_data=(X_val, Y_val),\n",
        "                    verbose=1, callbacks=[сheckpoint])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "52/53 [============================>.] - ETA: 0s - loss: 0.4415 - accuracy: 0.7800\n",
            "Epoch 00001: val_accuracy improved from -inf to 0.85139, saving model to doping.h5\n",
            "53/53 [==============================] - 2s 43ms/step - loss: 0.4398 - accuracy: 0.7810 - val_loss: 0.5599 - val_accuracy: 0.8514\n",
            "Epoch 2/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.3038 - accuracy: 0.8637\n",
            "Epoch 00002: val_accuracy improved from 0.85139 to 0.88750, saving model to doping.h5\n",
            "53/53 [==============================] - 2s 36ms/step - loss: 0.3038 - accuracy: 0.8637 - val_loss: 0.4224 - val_accuracy: 0.8875\n",
            "Epoch 3/50\n",
            "52/53 [============================>.] - ETA: 0s - loss: 0.2562 - accuracy: 0.8972\n",
            "Epoch 00003: val_accuracy improved from 0.88750 to 0.90139, saving model to doping.h5\n",
            "53/53 [==============================] - 2s 36ms/step - loss: 0.2561 - accuracy: 0.8976 - val_loss: 0.3847 - val_accuracy: 0.9014\n",
            "Epoch 4/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.2077 - accuracy: 0.9119\n",
            "Epoch 00004: val_accuracy did not improve from 0.90139\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.2077 - accuracy: 0.9119 - val_loss: 0.3722 - val_accuracy: 0.8819\n",
            "Epoch 5/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.1863 - accuracy: 0.9280\n",
            "Epoch 00005: val_accuracy did not improve from 0.90139\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.1863 - accuracy: 0.9280 - val_loss: 0.2567 - val_accuracy: 0.8986\n",
            "Epoch 6/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.1705 - accuracy: 0.9321\n",
            "Epoch 00006: val_accuracy improved from 0.90139 to 0.92083, saving model to doping.h5\n",
            "53/53 [==============================] - 2s 36ms/step - loss: 0.1705 - accuracy: 0.9321 - val_loss: 0.2265 - val_accuracy: 0.9208\n",
            "Epoch 7/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.1439 - accuracy: 0.9435\n",
            "Epoch 00007: val_accuracy improved from 0.92083 to 0.93472, saving model to doping.h5\n",
            "53/53 [==============================] - 2s 36ms/step - loss: 0.1439 - accuracy: 0.9435 - val_loss: 0.2009 - val_accuracy: 0.9347\n",
            "Epoch 8/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.1249 - accuracy: 0.9458\n",
            "Epoch 00008: val_accuracy did not improve from 0.93472\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.1249 - accuracy: 0.9458 - val_loss: 0.2411 - val_accuracy: 0.9111\n",
            "Epoch 9/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.1240 - accuracy: 0.9524\n",
            "Epoch 00009: val_accuracy did not improve from 0.93472\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.1240 - accuracy: 0.9524 - val_loss: 0.2061 - val_accuracy: 0.9181\n",
            "Epoch 10/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.1134 - accuracy: 0.9536\n",
            "Epoch 00010: val_accuracy did not improve from 0.93472\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.1134 - accuracy: 0.9536 - val_loss: 0.2120 - val_accuracy: 0.9250\n",
            "Epoch 11/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0890 - accuracy: 0.9696\n",
            "Epoch 00011: val_accuracy did not improve from 0.93472\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0890 - accuracy: 0.9696 - val_loss: 0.2220 - val_accuracy: 0.9264\n",
            "Epoch 12/50\n",
            "51/53 [===========================>..] - ETA: 0s - loss: 0.0734 - accuracy: 0.9724\n",
            "Epoch 00012: val_accuracy did not improve from 0.93472\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0797 - accuracy: 0.9708 - val_loss: 0.2287 - val_accuracy: 0.9222\n",
            "Epoch 13/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0849 - accuracy: 0.9690\n",
            "Epoch 00013: val_accuracy did not improve from 0.93472\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0849 - accuracy: 0.9690 - val_loss: 0.2687 - val_accuracy: 0.9194\n",
            "Epoch 14/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0760 - accuracy: 0.9702\n",
            "Epoch 00014: val_accuracy did not improve from 0.93472\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0760 - accuracy: 0.9702 - val_loss: 0.2393 - val_accuracy: 0.9278\n",
            "Epoch 15/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0581 - accuracy: 0.9780\n",
            "Epoch 00015: val_accuracy improved from 0.93472 to 0.93889, saving model to doping.h5\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0581 - accuracy: 0.9780 - val_loss: 0.2111 - val_accuracy: 0.9389\n",
            "Epoch 16/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0706 - accuracy: 0.9738\n",
            "Epoch 00016: val_accuracy did not improve from 0.93889\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0706 - accuracy: 0.9738 - val_loss: 0.2536 - val_accuracy: 0.9139\n",
            "Epoch 17/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0762 - accuracy: 0.9714\n",
            "Epoch 00017: val_accuracy improved from 0.93889 to 0.94306, saving model to doping.h5\n",
            "53/53 [==============================] - 2s 36ms/step - loss: 0.0762 - accuracy: 0.9714 - val_loss: 0.2128 - val_accuracy: 0.9431\n",
            "Epoch 18/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0466 - accuracy: 0.9810\n",
            "Epoch 00018: val_accuracy did not improve from 0.94306\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0466 - accuracy: 0.9810 - val_loss: 0.3706 - val_accuracy: 0.9194\n",
            "Epoch 19/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0728 - accuracy: 0.9708\n",
            "Epoch 00019: val_accuracy did not improve from 0.94306\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0728 - accuracy: 0.9708 - val_loss: 0.2839 - val_accuracy: 0.9153\n",
            "Epoch 20/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0784 - accuracy: 0.9786\n",
            "Epoch 00020: val_accuracy improved from 0.94306 to 0.94861, saving model to doping.h5\n",
            "53/53 [==============================] - 2s 36ms/step - loss: 0.0784 - accuracy: 0.9786 - val_loss: 0.1783 - val_accuracy: 0.9486\n",
            "Epoch 21/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0301 - accuracy: 0.9899\n",
            "Epoch 00021: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 36ms/step - loss: 0.0301 - accuracy: 0.9899 - val_loss: 0.2172 - val_accuracy: 0.9486\n",
            "Epoch 22/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0226 - accuracy: 0.9929\n",
            "Epoch 00022: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0226 - accuracy: 0.9929 - val_loss: 0.2464 - val_accuracy: 0.9389\n",
            "Epoch 23/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0392 - accuracy: 0.9815\n",
            "Epoch 00023: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0392 - accuracy: 0.9815 - val_loss: 0.3045 - val_accuracy: 0.9375\n",
            "Epoch 24/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0331 - accuracy: 0.9881\n",
            "Epoch 00024: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0331 - accuracy: 0.9881 - val_loss: 0.3637 - val_accuracy: 0.9236\n",
            "Epoch 25/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0729 - accuracy: 0.9750\n",
            "Epoch 00025: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0729 - accuracy: 0.9750 - val_loss: 0.2198 - val_accuracy: 0.9347\n",
            "Epoch 26/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0248 - accuracy: 0.9917\n",
            "Epoch 00026: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0248 - accuracy: 0.9917 - val_loss: 0.4711 - val_accuracy: 0.9250\n",
            "Epoch 27/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0521 - accuracy: 0.9845\n",
            "Epoch 00027: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0521 - accuracy: 0.9845 - val_loss: 0.2124 - val_accuracy: 0.9417\n",
            "Epoch 28/50\n",
            "52/53 [============================>.] - ETA: 0s - loss: 0.0312 - accuracy: 0.9880\n",
            "Epoch 00028: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0310 - accuracy: 0.9881 - val_loss: 0.3357 - val_accuracy: 0.9167\n",
            "Epoch 29/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0397 - accuracy: 0.9857\n",
            "Epoch 00029: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0397 - accuracy: 0.9857 - val_loss: 0.2676 - val_accuracy: 0.9403\n",
            "Epoch 30/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0276 - accuracy: 0.9863\n",
            "Epoch 00030: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0276 - accuracy: 0.9863 - val_loss: 0.2337 - val_accuracy: 0.9403\n",
            "Epoch 31/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0175 - accuracy: 0.9946\n",
            "Epoch 00031: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0175 - accuracy: 0.9946 - val_loss: 0.3111 - val_accuracy: 0.9250\n",
            "Epoch 32/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0279 - accuracy: 0.9923\n",
            "Epoch 00032: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0279 - accuracy: 0.9923 - val_loss: 0.3404 - val_accuracy: 0.9306\n",
            "Epoch 33/50\n",
            "51/53 [===========================>..] - ETA: 0s - loss: 0.0223 - accuracy: 0.9896\n",
            "Epoch 00033: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0218 - accuracy: 0.9899 - val_loss: 0.2834 - val_accuracy: 0.9347\n",
            "Epoch 34/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0135 - accuracy: 0.9976\n",
            "Epoch 00034: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0135 - accuracy: 0.9976 - val_loss: 0.3050 - val_accuracy: 0.9403\n",
            "Epoch 35/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0252 - accuracy: 0.9923\n",
            "Epoch 00035: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0252 - accuracy: 0.9923 - val_loss: 0.3074 - val_accuracy: 0.9431\n",
            "Epoch 36/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0167 - accuracy: 0.9946\n",
            "Epoch 00036: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0167 - accuracy: 0.9946 - val_loss: 0.4061 - val_accuracy: 0.9250\n",
            "Epoch 37/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0355 - accuracy: 0.9857\n",
            "Epoch 00037: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0355 - accuracy: 0.9857 - val_loss: 0.3952 - val_accuracy: 0.9236\n",
            "Epoch 38/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0205 - accuracy: 0.9935\n",
            "Epoch 00038: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0205 - accuracy: 0.9935 - val_loss: 0.4531 - val_accuracy: 0.9250\n",
            "Epoch 39/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0498 - accuracy: 0.9899\n",
            "Epoch 00039: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0498 - accuracy: 0.9899 - val_loss: 0.1928 - val_accuracy: 0.9403\n",
            "Epoch 40/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0131 - accuracy: 0.9976\n",
            "Epoch 00040: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0131 - accuracy: 0.9976 - val_loss: 0.2839 - val_accuracy: 0.9417\n",
            "Epoch 41/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0028 - accuracy: 0.9988\n",
            "Epoch 00041: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0028 - accuracy: 0.9988 - val_loss: 0.2995 - val_accuracy: 0.9361\n",
            "Epoch 42/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0091 - accuracy: 0.9970\n",
            "Epoch 00042: val_accuracy did not improve from 0.94861\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0091 - accuracy: 0.9970 - val_loss: 0.3257 - val_accuracy: 0.9417\n",
            "Epoch 43/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0176 - accuracy: 0.9958\n",
            "Epoch 00043: val_accuracy improved from 0.94861 to 0.95417, saving model to doping.h5\n",
            "53/53 [==============================] - 2s 36ms/step - loss: 0.0176 - accuracy: 0.9958 - val_loss: 0.2276 - val_accuracy: 0.9542\n",
            "Epoch 44/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0189 - accuracy: 0.9964\n",
            "Epoch 00044: val_accuracy did not improve from 0.95417\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0189 - accuracy: 0.9964 - val_loss: 0.2179 - val_accuracy: 0.9403\n",
            "Epoch 45/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0112 - accuracy: 0.9964\n",
            "Epoch 00045: val_accuracy did not improve from 0.95417\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0112 - accuracy: 0.9964 - val_loss: 0.2520 - val_accuracy: 0.9431\n",
            "Epoch 46/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0040 - accuracy: 0.9982\n",
            "Epoch 00046: val_accuracy did not improve from 0.95417\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0040 - accuracy: 0.9982 - val_loss: 0.2865 - val_accuracy: 0.9444\n",
            "Epoch 47/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0038 - accuracy: 0.9976\n",
            "Epoch 00047: val_accuracy did not improve from 0.95417\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0038 - accuracy: 0.9976 - val_loss: 0.3502 - val_accuracy: 0.9417\n",
            "Epoch 48/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0264 - accuracy: 0.9899\n",
            "Epoch 00048: val_accuracy did not improve from 0.95417\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0264 - accuracy: 0.9899 - val_loss: 0.2927 - val_accuracy: 0.9347\n",
            "Epoch 49/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0129 - accuracy: 0.9952\n",
            "Epoch 00049: val_accuracy did not improve from 0.95417\n",
            "53/53 [==============================] - 2s 34ms/step - loss: 0.0129 - accuracy: 0.9952 - val_loss: 0.2932 - val_accuracy: 0.9458\n",
            "Epoch 50/50\n",
            "53/53 [==============================] - ETA: 0s - loss: 0.0098 - accuracy: 0.9976\n",
            "Epoch 00050: val_accuracy did not improve from 0.95417\n",
            "53/53 [==============================] - 2s 35ms/step - loss: 0.0098 - accuracy: 0.9976 - val_loss: 0.3183 - val_accuracy: 0.9431\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IJkl6PN-DdCw"
      },
      "source": [
        "#2 dfhbfyn 94306"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XTQ7VE7Y9Hv9"
      },
      "source": [
        "model.load_weights('doping.h5')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SfmKz-A_ozCa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "79f3a005-23e5-4453-d923-d1a8f364c24e"
      },
      "source": [
        "!find \"doping.h5\""
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "doping.h5\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kCIpuogZ9IST",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        },
        "outputId": "82358186-c4d9-463b-cdaf-bb41e0b075b1"
      },
      "source": [
        "#model.load_weights('mnist-cnn.hdf5')\n",
        "plt.plot(history.history['accuracy'], \n",
        "         label='Доля верных ответов на обучающем наборе')\n",
        "plt.plot(history.history['val_accuracy'], \n",
        "         label='Доля верных ответов на проверочном наборе')\n",
        "plt.xlabel('Эпоха обучения')\n",
        "plt.ylabel('Доля верных ответов')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ka3FACzV24MV"
      },
      "source": [
        "for img in os.listdir(dir_spoof)[:1300]:\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      emb = face_rec.calc_emb(dir_spoof+\"/\"+img)\n",
        "      emb_spoof.append(emb)\n",
        "    except NameError:\n",
        "      continue"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M_9EW0D026dZ"
      },
      "source": [
        "ccc"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "P4qmYOz23PHz"
      },
      "source": [
        "!cd /content"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "y34KCVXj29us",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 87
        },
        "outputId": "ccebc21f-730d-4229-e03d-3ce209bee193"
      },
      "source": [
        "!gdown --id 1teaLCo-F-5RCQM8Puxqbk13bI0evqIzg"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading...\n",
            "From: https://drive.google.com/uc?id=1teaLCo-F-5RCQM8Puxqbk13bI0evqIzg\n",
            "To: /content/IDRND_FASDB_train/spoof/test.tar.gz\n",
            "1.71GB [00:24, 68.7MB/s]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FNagoh5qG5gR"
      },
      "source": [
        "!mv /content/IDRND_FASDB_train/spoof/test.tar.gz /content"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o1EaI8BpHLPd"
      },
      "source": [
        "!cd /content"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rN_JE_h43Yh6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "f2e88b05-deed-4492-bddc-abae617a8aac"
      },
      "source": [
        "!tar -xvzf \"/content/test.tar.gz\""
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43mВыходные данные были обрезаны до нескольких последних строк (5000).\u001b[0m\n",
            "test/SJILUT5Q.png\n",
            "test/22BN8P1F.png\n",
            "test/MCL2E8D1.png\n",
            "test/GCD80IZY.png\n",
            "test/EHRXFXQF.png\n",
            "test/O17ZXG8S.png\n",
            "test/TPFUO53O.png\n",
            "test/Y2NFCKTP.png\n",
            "test/A2FL72P9.png\n",
            "test/OQ1WB5SV.png\n",
            "test/PP9O4A6C.png\n",
            "test/WRR6N6JC.png\n",
            "test/XZHE16WA.png\n",
            "test/YEKNM7DD.png\n",
            "test/C1CICGG5.png\n",
            "test/9RZ7UN85.png\n",
            "test/UN1BBB1S.png\n",
            "test/6A4SICHW.png\n",
            "test/UMCN8TTK.png\n",
            "test/7CTGJXTP.png\n",
            "test/Y81P02JH.png\n",
            "test/AOQJFPP7.png\n",
            "test/CEH69DL7.png\n",
            "test/WB6WOVTU.png\n",
            "test/5PU1NIDZ.png\n",
            "test/V6RO0EU5.png\n",
            "test/T56WFIT7.png\n",
            "test/XHIG0GI6.png\n",
            "test/JPII8FI5.png\n",
            "test/43PSGS3J.png\n",
            "test/DC38VMSF.png\n",
            "test/1979MHH3.png\n",
            "test/S0NO6U1B.png\n",
            "test/N95IT95A.png\n",
            "test/Q0N7UQZV.png\n",
            "test/A3MQSQ20.png\n",
            "test/4L9IKW0U.png\n",
            "test/YY6YAPKU.png\n",
            "test/ZPL5RV9H.png\n",
            "test/A5VDG4YC.png\n",
            "test/9Q78QMUT.png\n",
            "test/OA1XFCOO.png\n",
            "test/3WCVWNA6.png\n",
            "test/U2RXZAND.png\n",
            "test/XXYN87DV.png\n",
            "test/7G66F466.png\n",
            "test/J7J9FULL.png\n",
            "test/MCWVSSTQ.png\n",
            "test/MBW22QQR.png\n",
            "test/GGGY773E.png\n",
            "test/UTKR0CFS.png\n",
            "test/PR5ZOD33.png\n",
            "test/MEJ5A7KS.png\n",
            "test/HO43Z1T7.png\n",
            "test/LJFJLLWK.png\n",
            "test/9F00S8MU.png\n",
            "test/4AX7ALEG.png\n",
            "test/CSUZQ45M.png\n",
            "test/5CIWJ64X.png\n",
            "test/LZ1JTJPH.png\n",
            "test/ZB9IV4AZ.png\n",
            "test/IDO1WI9P.png\n",
            "test/GB1XJBE4.png\n",
            "test/YUXP55CF.png\n",
            "test/L5W72LMI.png\n",
            "test/SMPZUU70.png\n",
            "test/BFC3YX0F.png\n",
            "test/F6H1NCR0.png\n",
            "test/PNIL1BMY.png\n",
            "test/CAVU6WGK.png\n",
            "test/AO1YIZJX.png\n",
            "test/YBO9YS12.png\n",
            "test/9JCWHANS.png\n",
            "test/FPPXAEMI.png\n",
            "test/9B8YD2DR.png\n",
            "test/DR5A38X5.png\n",
            "test/DDQ73QBI.png\n",
            "test/XUM1BT63.png\n",
            "test/RY94S86I.png\n",
            "test/4W3HIXVY.png\n",
            "test/QS5LI5DG.png\n",
            "test/JZOGFY5R.png\n",
            "test/Z9WTM49V.png\n",
            "test/L8AM7X3X.png\n",
            "test/MS8M4LT5.png\n",
            "test/1UWX8VO5.png\n",
            "test/1864JLCJ.png\n",
            "test/E1EXL97B.png\n",
            "test/YI3WRR7C.png\n",
            "test/UNJL72D3.png\n",
            "test/YHCXD31R.png\n",
            "test/IRYUI1JX.png\n",
            "test/CUCA2TOF.png\n",
            "test/XOEGEGGO.png\n",
            "test/74MYHXC2.png\n",
            "test/4FJ5J9TX.png\n",
            "test/WI9XZETL.png\n",
            "test/9JPC3JZT.png\n",
            "test/6NJ2B8UI.png\n",
            "test/OM6SP5W1.png\n",
            "test/G2YKI5SM.png\n",
            "test/IA19PGAQ.png\n",
            "test/3L9OQ8A2.png\n",
            "test/271TRZFE.png\n",
            "test/CQ3H9W6V.png\n",
            "test/2QVDPA3Z.png\n",
            "test/LBMTO6IM.png\n",
            "test/Y7RKEZVP.png\n",
            "test/9UAMJDZG.png\n",
            "test/KB9YJ6NH.png\n",
            "test/TI5BC0RH.png\n",
            "test/DFSS5WFF.png\n",
            "test/2ZK353SB.png\n",
            "test/5QRVS5PH.png\n",
            "test/C9C9TGVQ.png\n",
            "test/J5VP0KU5.png\n",
            "test/T6RMZ67E.png\n",
            "test/X5A34A5L.png\n",
            "test/BVSN8TI6.png\n",
            "test/SDTQ3UUD.png\n",
            "test/HZ8E6HP0.png\n",
            "test/ITLREMJR.png\n",
            "test/9SWYIZR9.png\n",
            "test/12OXXGZA.png\n",
            "test/9X6IB99U.png\n",
            "test/8SZ1REOM.png\n",
            "test/QXG1Y87N.png\n",
            "test/F6XFH79E.png\n",
            "test/R7ZCOCA9.png\n",
            "test/I0VJS7T3.png\n",
            "test/FUY8KBQX.png\n",
            "test/DAG1L8WE.png\n",
            "test/9R4OE7GZ.png\n",
            "test/6LW9MBEK.png\n",
            "test/JCJUA3Z3.png\n",
            "test/PSEAOTBN.png\n",
            "test/XX15U47O.png\n",
            "test/X8YQKU6N.png\n",
            "test/N0DB1A93.png\n",
            "test/DR03LFGE.png\n",
            "test/N7LULG7J.png\n",
            "test/IF3047E9.png\n",
            "test/BHC8RLPP.png\n",
            "test/MAGR0515.png\n",
            "test/C24FCGRP.png\n",
            "test/T3RTC75E.png\n",
            "test/GU4GWPX9.png\n",
            "test/CZA117Y0.png\n",
            "test/TD6U8QBF.png\n",
            "test/UCX6MRYN.png\n",
            "test/2VZDB7DE.png\n",
            "test/CU06TWKB.png\n",
            "test/NU2G1F21.png\n",
            "test/KX6JJTNT.png\n",
            "test/83L8HJGI.png\n",
            "test/8QQBGDMR.png\n",
            "test/DYDTMI7S.png\n",
            "test/4HY1K779.png\n",
            "test/T79OAV24.png\n",
            "test/GD0MUIZD.png\n",
            "test/KGRGI6C8.png\n",
            "test/S11CIRV4.png\n",
            "test/V8GHLTQY.png\n",
            "test/ZXMWMAKG.png\n",
            "test/V9NXCK8W.png\n",
            "test/76CLARFM.png\n",
            "test/K5FA9OIL.png\n",
            "test/XWMNWC1A.png\n",
            "test/JZN27YQS.png\n",
            "test/S3K7URUA.png\n",
            "test/F1HK0XR4.png\n",
            "test/369WI4TS.png\n",
            "test/M3B7LUDJ.png\n",
            "test/7RNNNKME.png\n",
            "test/1J4B9GWG.png\n",
            "test/SPNF8E33.png\n",
            "test/J76VMG2X.png\n",
            "test/FF9VRJ0F.png\n",
            "test/1BJV32SN.png\n",
            "test/NL6YXDLJ.png\n",
            "test/A0TJU437.png\n",
            "test/66C3VJI9.png\n",
            "test/DFXBDI13.png\n",
            "test/XVR56HMD.png\n",
            "test/FEZEMTZ9.png\n",
            "test/NO07KZHD.png\n",
            "test/EF4TLWBU.png\n",
            "test/G44RYXYK.png\n",
            "test/WFSHKZJ5.png\n",
            "test/NO07FQDS.png\n",
            "test/TSVFLJPV.png\n",
            "test/0G4KXE2E.png\n",
            "test/WBO2HPEX.png\n",
            "test/6OAB8CLH.png\n",
            "test/5888IC0M.png\n",
            "test/ZHHL03L8.png\n",
            "test/92UM02T9.png\n",
            "test/BSWQ9B7X.png\n",
            "test/WSDMTQSF.png\n",
            "test/N9W7VD76.png\n",
            "test/6UG4RK1B.png\n",
            "test/7JWTY5A1.png\n",
            "test/KXJOAWUB.png\n",
            "test/FY0IA20V.png\n",
            "test/K34SH728.png\n",
            "test/Z025ENSB.png\n",
            "test/5E7C350N.png\n",
            "test/7M6KMSXG.png\n",
            "test/RE1NJ6OG.png\n",
            "test/4IC06SML.png\n",
            "test/WBNA1BJT.png\n",
            "test/6AND4UAZ.png\n",
            "test/I387A6YO.png\n",
            "test/J84F680C.png\n",
            "test/48SPYT14.png\n",
            "test/QMFHZUA8.png\n",
            "test/YVA03OKZ.png\n",
            "test/L9QLPLLH.png\n",
            "test/6C3IV89B.png\n",
            "test/J0D6PSLZ.png\n",
            "test/RCU76TUV.png\n",
            "test/ZV0MVBFQ.png\n",
            "test/7WJX1OYK.png\n",
            "test/CIKBS1MQ.png\n",
            "test/ZZK5MPVA.png\n",
            "test/4DOJ69VY.png\n",
            "test/E2MZXBX5.png\n",
            "test/5Q1MEY3A.png\n",
            "test/BZO9YRON.png\n",
            "test/PVYE8JLT.png\n",
            "test/UGA85GBN.png\n",
            "test/PRHJ03JY.png\n",
            "test/NJIYLB8G.png\n",
            "test/HBYS69ZN.png\n",
            "test/0CFVRE6U.png\n",
            "test/EWPYCNND.png\n",
            "test/1EN1XVC4.png\n",
            "test/YRCAR8IV.png\n",
            "test/RPEPPSC0.png\n",
            "test/1QHYUWVF.png\n",
            "test/STL0A3GP.png\n",
            "test/VQOT1LNY.png\n",
            "test/HMQFI9FN.png\n",
            "test/ACBBS10X.png\n",
            "test/PHLUL84N.png\n",
            "test/27DKN79T.png\n",
            "test/68YW1SX8.png\n",
            "test/CFOBJVPE.png\n",
            "test/CRIRB70E.png\n",
            "test/PTP2305H.png\n",
            "test/M3AFDIVF.png\n",
            "test/VHEOZD27.png\n",
            "test/E4WBU4VK.png\n",
            "test/J161MUFJ.png\n",
            "test/LCORFMTY.png\n",
            "test/978CTK47.png\n",
            "test/Z67B2Z0V.png\n",
            "test/C56MY9I2.png\n",
            "test/GVUQBIZ4.png\n",
            "test/HTKZLNXV.png\n",
            "test/L9PT8FBR.png\n",
            "test/PDJ4T5DI.png\n",
            "test/VBBM0D8Q.png\n",
            "test/NN79E257.png\n",
            "test/SXMCRGWH.png\n",
            "test/4JY91SUF.png\n",
            "test/1ZL85PO1.png\n",
            "test/7EVRLOTN.png\n",
            "test/1KDAQK93.png\n",
            "test/GHEJ4HPS.png\n",
            "test/NR1I3PIX.png\n",
            "test/GA8LPLUE.png\n",
            "test/JSXBDF8I.png\n",
            "test/CNUCJC29.png\n",
            "test/CF7CPG8I.png\n",
            "test/KC66VAEK.png\n",
            "test/CW2XFC40.png\n",
            "test/AF517CT0.png\n",
            "test/AZ6JE40I.png\n",
            "test/BQ1DNYBB.png\n",
            "test/LZ5IDYFC.png\n",
            "test/EKZ2DU6Q.png\n",
            "test/9ZNLPZ93.png\n",
            "test/TTEUH1S0.png\n",
            "test/3Q5OJJKZ.png\n",
            "test/5BJ1TB0A.png\n",
            "test/2BZS2MCE.png\n",
            "test/8Y1LSWE1.png\n",
            "test/ZCMWMXGL.png\n",
            "test/BRY8KQGQ.png\n",
            "test/Y26LMTAN.png\n",
            "test/YSGK3R00.png\n",
            "test/N6P2AO65.png\n",
            "test/3C950HQQ.png\n",
            "test/RSO62RDX.png\n",
            "test/C0RV0QGD.png\n",
            "test/BOXPT0LJ.png\n",
            "test/S77R6JI4.png\n",
            "test/T6TD2CI4.png\n",
            "test/F2O0ZDW7.png\n",
            "test/H2SS9ADA.png\n",
            "test/EXBEIAW7.png\n",
            "test/KXCBIRHX.png\n",
            "test/LVOE8NU8.png\n",
            "test/T6ORMZJH.png\n",
            "test/GO2X9CBW.png\n",
            "test/T6X2E7U5.png\n",
            "test/FB00YP2F.png\n",
            "test/1PEWS2FS.png\n",
            "test/I8VD0NFN.png\n",
            "test/OXUG4VZM.png\n",
            "test/EW9XPDE9.png\n",
            "test/YUTXRGQ3.png\n",
            "test/5DTSNY7K.png\n",
            "test/BEO851S1.png\n",
            "test/VPAUKWXJ.png\n",
            "test/JF2X1T44.png\n",
            "test/B0EZ86P7.png\n",
            "test/6OSLZ18S.png\n",
            "test/Q9EOBQ4J.png\n",
            "test/XW9YEAK5.png\n",
            "test/VTI51M8J.png\n",
            "test/N1QHJ92M.png\n",
            "test/NFF6I5U2.png\n",
            "test/87YP8SOQ.png\n",
            "test/Z3ENC77F.png\n",
            "test/UHU5JWPY.png\n",
            "test/PBLWRTQ5.png\n",
            "test/9FRZG29V.png\n",
            "test/MBWBEYEQ.png\n",
            "test/BZ594SKS.png\n",
            "test/CYYU6MWM.png\n",
            "test/5LFAFXCF.png\n",
            "test/MXMFGORH.png\n",
            "test/U55NX981.png\n",
            "test/1GBVG3C5.png\n",
            "test/O1FG28NW.png\n",
            "test/DZ9SEWN7.png\n",
            "test/1T2TNXWM.png\n",
            "test/I1R7SG9D.png\n",
            "test/SQE13NBM.png\n",
            "test/HULAVIC2.png\n",
            "test/QJRBBLVD.png\n",
            "test/PM3TC408.png\n",
            "test/2P0SFK9S.png\n",
            "test/LUOFT1T6.png\n",
            "test/USQ8MF3A.png\n",
            "test/NM6J45G8.png\n",
            "test/U7RJ8BJY.png\n",
            "test/LKSEVB89.png\n",
            "test/XQ09I2WP.png\n",
            "test/VBCE6463.png\n",
            "test/7658LO1P.png\n",
            "test/V1CRNSCT.png\n",
            "test/YJM5EV81.png\n",
            "test/G7AN8VTT.png\n",
            "test/GXXR6NLF.png\n",
            "test/KJ02V9CN.png\n",
            "test/6U7IQG48.png\n",
            "test/15FTPZQ5.png\n",
            "test/UBZRSUZZ.png\n",
            "test/QQQS45US.png\n",
            "test/J9A1RRD9.png\n",
            "test/ERBS6WAZ.png\n",
            "test/05K8W8IB.png\n",
            "test/2TB0RVSX.png\n",
            "test/92ZVO3K2.png\n",
            "test/DPT3Q3L4.png\n",
            "test/J6MK6HRH.png\n",
            "test/R96SDTGL.png\n",
            "test/TETFIB7M.png\n",
            "test/QSNUCKDV.png\n",
            "test/XDVSW8EE.png\n",
            "test/RVY21IR7.png\n",
            "test/GPT7WFH0.png\n",
            "test/IS52LY9T.png\n",
            "test/SL0RSMIK.png\n",
            "test/J6F3WDDQ.png\n",
            "test/KDNFRAZN.png\n",
            "test/ULK0VYI4.png\n",
            "test/7VV8RYFN.png\n",
            "test/DOHS5WYS.png\n",
            "test/NK72TJAM.png\n",
            "test/NW5V8SSM.png\n",
            "test/V8SLCECC.png\n",
            "test/MBNJ5WL1.png\n",
            "test/O148V9G5.png\n",
            "test/WKCXJC4P.png\n",
            "test/PPEUJB0L.png\n",
            "test/IVLN21PY.png\n",
            "test/5ZCHLJAP.png\n",
            "test/GOL0PAPW.png\n",
            "test/P6B8HCYF.png\n",
            "test/UQG3TSP3.png\n",
            "test/H19FWT9E.png\n",
            "test/GF4XZ9QV.png\n",
            "test/O3RFJM4D.png\n",
            "test/EPS0YN84.png\n",
            "test/MSOLTHBU.png\n",
            "test/ASAKS5OW.png\n",
            "test/ENDAKIRD.png\n",
            "test/PQSG6DO0.png\n",
            "test/ZEW7N3HE.png\n",
            "test/AQ76R4X8.png\n",
            "test/MDO8Z73G.png\n",
            "test/FSRQ174N.png\n",
            "test/IFCJ09HK.png\n",
            "test/1HDCMACC.png\n",
            "test/WWRG7ZSD.png\n",
            "test/LEUPAYLT.png\n",
            "test/XJZ8PR21.png\n",
            "test/RV6SGCV4.png\n",
            "test/DM6WVCW8.png\n",
            "test/DQL6YV9U.png\n",
            "test/LMV0Z8RB.png\n",
            "test/WTWT9UI9.png\n",
            "test/CHJA00DS.png\n",
            "test/T1S6OLLJ.png\n",
            "test/30XZEV5P.png\n",
            "test/9D28MH8E.png\n",
            "test/94JRUE4T.png\n",
            "test/ZCVGVR4B.png\n",
            "test/399Z6U1N.png\n",
            "test/VJI6EWPL.png\n",
            "test/7EW0JXVB.png\n",
            "test/VJXY72HP.png\n",
            "test/9IW9S3RB.png\n",
            "test/34VU45Z6.png\n",
            "test/EL4Q6GDS.png\n",
            "test/WYL1UUB0.png\n",
            "test/35DG6VBL.png\n",
            "test/RJVF0YTL.png\n",
            "test/FMC9YCIA.png\n",
            "test/B16T60AF.png\n",
            "test/DA8ZGO0U.png\n",
            "test/IP9RU5XO.png\n",
            "test/DLIQPJAP.png\n",
            "test/P9KFJHYQ.png\n",
            "test/6BCU9X1H.png\n",
            "test/AR288TFQ.png\n",
            "test/4WSQAHZK.png\n",
            "test/58WACMXY.png\n",
            "test/NW28XMPE.png\n",
            "test/IUNI5F1O.png\n",
            "test/OTHVI1W3.png\n",
            "test/5DWWOLAM.png\n",
            "test/GYQFYXD3.png\n",
            "test/HZOUL3RY.png\n",
            "test/VHGAMD7D.png\n",
            "test/2WX31PNJ.png\n",
            "test/U6DQ247P.png\n",
            "test/B797UNZ7.png\n",
            "test/4SNJTBML.png\n",
            "test/3NTMLH93.png\n",
            "test/QRO0ZF8T.png\n",
            "test/BTKZXGWT.png\n",
            "test/WDDGEUQ9.png\n",
            "test/1ZAUYDG7.png\n",
            "test/6K4N77E5.png\n",
            "test/FX9XSN1V.png\n",
            "test/6HDXNO1U.png\n",
            "test/QQ54RV4G.png\n",
            "test/2V3BUP0U.png\n",
            "test/1TSYX0YC.png\n",
            "test/JP7W30F2.png\n",
            "test/5Z40B65Q.png\n",
            "test/1KSS8YA9.png\n",
            "test/OITE08HN.png\n",
            "test/S42G4D05.png\n",
            "test/6N8MKKY7.png\n",
            "test/1YMJ35KT.png\n",
            "test/848HEZXZ.png\n",
            "test/19PPXP5N.png\n",
            "test/20WNZ9ND.png\n",
            "test/W8TTDLJY.png\n",
            "test/2T3BKW5C.png\n",
            "test/18D4LOGD.png\n",
            "test/BUM1A71C.png\n",
            "test/QIJ7PBAQ.png\n",
            "test/387Y81E8.png\n",
            "test/LIJZZ5IZ.png\n",
            "test/LHBPDVUI.png\n",
            "test/XAOSWHH5.png\n",
            "test/EKUBOIHL.png\n",
            "test/CP8W6MLJ.png\n",
            "test/G2K26C90.png\n",
            "test/ZZFN9V20.png\n",
            "test/4XYH8WHD.png\n",
            "test/GQXLR553.png\n",
            "test/WR5WD4JQ.png\n",
            "test/W22DK7CA.png\n",
            "test/TEMZ1LLT.png\n",
            "test/PAZGRJ0R.png\n",
            "test/VQXMY6ZN.png\n",
            "test/WSLMLA15.png\n",
            "test/29GZBZ85.png\n",
            "test/62ZX8WRB.png\n",
            "test/6ZT5R9XD.png\n",
            "test/A1I38KID.png\n",
            "test/A14E0XBX.png\n",
            "test/I7D4PLLG.png\n",
            "test/VEGKJFHP.png\n",
            "test/88DBAUGJ.png\n",
            "test/H20ESXEL.png\n",
            "test/GFK6MWR9.png\n",
            "test/6UVP28ZH.png\n",
            "test/C7V854CH.png\n",
            "test/KLOYQ30H.png\n",
            "test/ATQ4M86T.png\n",
            "test/BMVHOIWU.png\n",
            "test/MGTL21IL.png\n",
            "test/VOZWYNSC.png\n",
            "test/KO0ZJFIM.png\n",
            "test/T69SN3XG.png\n",
            "test/DSOITL3U.png\n",
            "test/A2YQ41SU.png\n",
            "test/2UYG8D6G.png\n",
            "test/UGMARKA7.png\n",
            "test/ND2XEZS5.png\n",
            "test/KMC8K6C9.png\n",
            "test/0SOQZDZ2.png\n",
            "test/8Q6MUDF8.png\n",
            "test/B9CQG19E.png\n",
            "test/SYHQE2K7.png\n",
            "test/MJX4G7B2.png\n",
            "test/EJU57CWL.png\n",
            "test/P8VHI43C.png\n",
            "test/KURIPEDA.png\n",
            "test/9LBHX7J3.png\n",
            "test/VRSIW511.png\n",
            "test/HSJHJCX6.png\n",
            "test/NDFISNTE.png\n",
            "test/QBT5BWZQ.png\n",
            "test/U4VWMRTM.png\n",
            "test/QJAYYCMR.png\n",
            "test/M6KVMVNH.png\n",
            "test/W10LHRPL.png\n",
            "test/PEG6YLDQ.png\n",
            "test/I9YHA9DR.png\n",
            "test/M0ZKM2CC.png\n",
            "test/TDZ1R4M9.png\n",
            "test/C48450MN.png\n",
            "test/5KSYYZIF.png\n",
            "test/2QN5PE5M.png\n",
            "test/ZQPNK9DD.png\n",
            "test/GNKDUCIT.png\n",
            "test/KS0VFCJR.png\n",
            "test/PT6Y6CTO.png\n",
            "test/039UOUG3.png\n",
            "test/E9OQ9E3N.png\n",
            "test/RYP9PCVJ.png\n",
            "test/O8GEX9RQ.png\n",
            "test/BL56SF2N.png\n",
            "test/J9RD56EY.png\n",
            "test/NP4QNHL3.png\n",
            "test/3VQHDHP7.png\n",
            "test/ZVNXIL3I.png\n",
            "test/SO16J27U.png\n",
            "test/V07TXRSD.png\n",
            "test/U04UFVJF.png\n",
            "test/D4SEMH1I.png\n",
            "test/L7Z6PUG0.png\n",
            "test/FRNKXLMJ.png\n",
            "test/W5VXG1SA.png\n",
            "test/3NR0EE4L.png\n",
            "test/LYQMVCKI.png\n",
            "test/I5IYT1GL.png\n",
            "test/9SUS03TD.png\n",
            "test/A241MAE1.png\n",
            "test/EZM66PPF.png\n",
            "test/LBJG89MZ.png\n",
            "test/RT4EVCEJ.png\n",
            "test/UNY2V1XJ.png\n",
            "test/EQPGBPPN.png\n",
            "test/TWRGSXGK.png\n",
            "test/P8R8PGAT.png\n",
            "test/YR992I6J.png\n",
            "test/BE6O8LNH.png\n",
            "test/J6B3LNU4.png\n",
            "test/0B1992BA.png\n",
            "test/1OGL3TK6.png\n",
            "test/T2K26QGV.png\n",
            "test/XWFRTY27.png\n",
            "test/VV8I1PFY.png\n",
            "test/FGQNEL6O.png\n",
            "test/0HDE1NJR.png\n",
            "test/5X2SH9KQ.png\n",
            "test/E4J4I3CO.png\n",
            "test/9PGF837L.png\n",
            "test/PDNDLV9D.png\n",
            "test/H1QK3M2G.png\n",
            "test/Q020G67P.png\n",
            "test/QUW63BN0.png\n",
            "test/KI8I35PO.png\n",
            "test/E40130LA.png\n",
            "test/2P1C18WJ.png\n",
            "test/23Z6OS6G.png\n",
            "test/P49VAKVH.png\n",
            "test/2NSMK1UJ.png\n",
            "test/TY8S08HD.png\n",
            "test/FPIJZLZM.png\n",
            "test/V43L5UQZ.png\n",
            "test/Z64ZEHF2.png\n",
            "test/13XACYUB.png\n",
            "test/KPDEQPJ2.png\n",
            "test/2BM4DV2M.png\n",
            "test/3T27UW5C.png\n",
            "test/SLGJX10M.png\n",
            "test/A2SO7X67.png\n",
            "test/D6BJN6EC.png\n",
            "test/CI88GBZS.png\n",
            "test/B3GBGGQM.png\n",
            "test/JGYN47RR.png\n",
            "test/GK1F9J4J.png\n",
            "test/XYI8LV3F.png\n",
            "test/K45FGT5D.png\n",
            "test/K0DZ8XV7.png\n",
            "test/0GTAC342.png\n",
            "test/NDPQGPNZ.png\n",
            "test/RN1BE01K.png\n",
            "test/JEF26VJ4.png\n",
            "test/3ZNW7BCQ.png\n",
            "test/THDVY7R0.png\n",
            "test/F4MTZ5KM.png\n",
            "test/1KVLE02O.png\n",
            "test/YQP46NRT.png\n",
            "test/9G9YITXO.png\n",
            "test/EE4QAZCG.png\n",
            "test/7UXBCGEH.png\n",
            "test/MLTM6BVF.png\n",
            "test/6QVS0KM3.png\n",
            "test/9OGV0JUP.png\n",
            "test/O9ZB0RQ5.png\n",
            "test/4IRQGXZ2.png\n",
            "test/VKQQGEFK.png\n",
            "test/NS5ZK9KL.png\n",
            "test/YSPIA80G.png\n",
            "test/2UCJQQ2K.png\n",
            "test/BXENP3JJ.png\n",
            "test/KY4K4IXB.png\n",
            "test/5SZT903J.png\n",
            "test/NTRG0WRJ.png\n",
            "test/CNFC0L9U.png\n",
            "test/I4GU23ZC.png\n",
            "test/JN56QFO0.png\n",
            "test/LVX6NSGC.png\n",
            "test/ND9CCC2Q.png\n",
            "test/P70M5XGS.png\n",
            "test/I6EH0FVL.png\n",
            "test/QNWFUM0Z.png\n",
            "test/6H0IZG2X.png\n",
            "test/7KVREB2X.png\n",
            "test/SKFW0HUI.png\n",
            "test/UZ2BUJL6.png\n",
            "test/V38J2VNN.png\n",
            "test/IXKT4JWO.png\n",
            "test/G91R2F7Z.png\n",
            "test/TOSZRQGN.png\n",
            "test/ON0AT33T.png\n",
            "test/6CD4C49C.png\n",
            "test/DCZ7LO1J.png\n",
            "test/28JRF370.png\n",
            "test/2XY9VFXJ.png\n",
            "test/GI1FSJHQ.png\n",
            "test/SU6YIS0V.png\n",
            "test/1IIG034O.png\n",
            "test/M8ZTZF2J.png\n",
            "test/NNKLEIHP.png\n",
            "test/91VCS07K.png\n",
            "test/EKZ177OV.png\n",
            "test/9Z8OSIPI.png\n",
            "test/QQHI54ZN.png\n",
            "test/PTRJPC0M.png\n",
            "test/MIDM6C0L.png\n",
            "test/KFYT2VNM.png\n",
            "test/55FI7TR0.png\n",
            "test/GDCGFU0P.png\n",
            "test/WNWUDCL9.png\n",
            "test/PX2DOLMG.png\n",
            "test/JJBJJEVE.png\n",
            "test/WA8PQQDY.png\n",
            "test/MG7MY0TC.png\n",
            "test/58UEWYYV.png\n",
            "test/AVN6JLSX.png\n",
            "test/GRIP87ML.png\n",
            "test/MY3BNWP2.png\n",
            "test/AJ3877EA.png\n",
            "test/606P6495.png\n",
            "test/FMQ9HYGP.png\n",
            "test/Z846RBNC.png\n",
            "test/I3Z0AVTY.png\n",
            "test/UENVLKYD.png\n",
            "test/GL2YJ5N8.png\n",
            "test/8BH1TKRR.png\n",
            "test/6FV6Z22A.png\n",
            "test/RSRONEBO.png\n",
            "test/T3NYTB5A.png\n",
            "test/8FYW1WFH.png\n",
            "test/VHT3E0W3.png\n",
            "test/IGGLFHB1.png\n",
            "test/0VBMV92X.png\n",
            "test/IPIRA6RF.png\n",
            "test/BKAOFDQF.png\n",
            "test/5WRC43WE.png\n",
            "test/VTGW6LTI.png\n",
            "test/ZUHDTJM4.png\n",
            "test/1NG7BMC6.png\n",
            "test/K27U0H2X.png\n",
            "test/DIISBBCY.png\n",
            "test/MXZR4D6R.png\n",
            "test/CS9I8F6L.png\n",
            "test/W8SDB9RH.png\n",
            "test/60A4CWB2.png\n",
            "test/C5A01YWP.png\n",
            "test/DZMN1GTC.png\n",
            "test/PN5OC753.png\n",
            "test/3AL0MOUC.png\n",
            "test/SOVCW8H7.png\n",
            "test/731DX2JM.png\n",
            "test/ERV21ODF.png\n",
            "test/WVVDGKGF.png\n",
            "test/Z8ZIGDAC.png\n",
            "test/GQWF2ZGK.png\n",
            "test/APEX6R2V.png\n",
            "test/R3ET8PAQ.png\n",
            "test/00BMIGHK.png\n",
            "test/GWNR1I2G.png\n",
            "test/VHJZMXDF.png\n",
            "test/ZCYUMFHQ.png\n",
            "test/6OAWGQXM.png\n",
            "test/IJMQHUOE.png\n",
            "test/71A4K4AE.png\n",
            "test/HEZWU8RJ.png\n",
            "test/YETH9XC9.png\n",
            "test/RPTRLXJL.png\n",
            "test/91LKCZ3V.png\n",
            "test/C83MU05C.png\n",
            "test/26Y6FLKZ.png\n",
            "test/G58KFLDN.png\n",
            "test/EILJG8TP.png\n",
            "test/WRC5YJLN.png\n",
            "test/M0SDYV47.png\n",
            "test/CXI511V5.png\n",
            "test/1C4UEHD1.png\n",
            "test/GCE8N9EO.png\n",
            "test/K6JJJEBV.png\n",
            "test/VJTLBPN8.png\n",
            "test/9LT8PCU5.png\n",
            "test/4JHGSTJA.png\n",
            "test/7Z8TKJRD.png\n",
            "test/P6DWAQ0T.png\n",
            "test/UQR75O40.png\n",
            "test/KYOTCOHN.png\n",
            "test/EUW1JSX2.png\n",
            "test/KADN3V91.png\n",
            "test/J7RE8M8N.png\n",
            "test/HM4LR09O.png\n",
            "test/TNML65IQ.png\n",
            "test/ZTYQURRD.png\n",
            "test/APWDOWI9.png\n",
            "test/RMMSGHH9.png\n",
            "test/DR8AHOJS.png\n",
            "test/J0EUVWY0.png\n",
            "test/SIAKJE9S.png\n",
            "test/ESMEDWUU.png\n",
            "test/B5M119X5.png\n",
            "test/M2JLUANS.png\n",
            "test/RM126N3U.png\n",
            "test/I393ESOM.png\n",
            "test/GVMX5OKB.png\n",
            "test/D6MP3Y90.png\n",
            "test/NL5NSGSJ.png\n",
            "test/INOJDJRT.png\n",
            "test/K9Z67H3J.png\n",
            "test/4COPSQ2F.png\n",
            "test/RKS35E9L.png\n",
            "test/7772OVD9.png\n",
            "test/RCUVWUSV.png\n",
            "test/THCHUKX0.png\n",
            "test/L3VVOD0B.png\n",
            "test/XA41XKWZ.png\n",
            "test/XAGOLH34.png\n",
            "test/G4TA2MLQ.png\n",
            "test/QAORNR8W.png\n",
            "test/1A9JIOGT.png\n",
            "test/211DKQ2V.png\n",
            "test/VSV6X4FZ.png\n",
            "test/DCY2V1J8.png\n",
            "test/PUG5ZXT3.png\n",
            "test/SGHUMGW9.png\n",
            "test/JDKH79XA.png\n",
            "test/P0F8DE50.png\n",
            "test/LW0V9BH8.png\n",
            "test/HPP2YO0U.png\n",
            "test/JYFLIITL.png\n",
            "test/Q8H2J8LC.png\n",
            "test/CRF96EZ4.png\n",
            "test/SVBJR1KM.png\n",
            "test/9CMTYONT.png\n",
            "test/EEIURO2S.png\n",
            "test/5AFWAII1.png\n",
            "test/4TCO2CR6.png\n",
            "test/UOEI7A9L.png\n",
            "test/RVEW1TNV.png\n",
            "test/1FULLLFW.png\n",
            "test/SZGLAVT4.png\n",
            "test/SC6Z1KXJ.png\n",
            "test/ILSHBTWX.png\n",
            "test/KKP5ABH8.png\n",
            "test/MGXYX96J.png\n",
            "test/US59P7G0.png\n",
            "test/O9RZSXAX.png\n",
            "test/141RYRWD.png\n",
            "test/3TAJ3QEZ.png\n",
            "test/ZRZ13Q3X.png\n",
            "test/CJ0W3YE7.png\n",
            "test/09VIVQDZ.png\n",
            "test/IRAR8ZDY.png\n",
            "test/B8XMHR3V.png\n",
            "test/TJVRH53S.png\n",
            "test/49KHFMJB.png\n",
            "test/P2SJ8M42.png\n",
            "test/PGEX94A9.png\n",
            "test/WZB3L02Y.png\n",
            "test/2WG2ENYP.png\n",
            "test/7P95UAWZ.png\n",
            "test/LS5J257T.png\n",
            "test/89ST2C7C.png\n",
            "test/SFT3DT3A.png\n",
            "test/YXLIG3BX.png\n",
            "test/HPZWUCKM.png\n",
            "test/AE02VIJW.png\n",
            "test/J5E85F8D.png\n",
            "test/KA95OJIK.png\n",
            "test/JX2G0Z5S.png\n",
            "test/XQCUPGAZ.png\n",
            "test/3M9ILKO4.png\n",
            "test/QSZTSJ19.png\n",
            "test/FE9IJMIA.png\n",
            "test/T41WEYVP.png\n",
            "test/R74210CW.png\n",
            "test/EZTMHWVF.png\n",
            "test/MNBBRWDE.png\n",
            "test/EM7RFP82.png\n",
            "test/WO5XMU3P.png\n",
            "test/X0BURJDR.png\n",
            "test/J5T6JQXO.png\n",
            "test/LB3FQLCT.png\n",
            "test/Z65WKIWA.png\n",
            "test/BTLJ6ALU.png\n",
            "test/OE1S3SQW.png\n",
            "test/5J7NOGFT.png\n",
            "test/TOVJI7TS.png\n",
            "test/1UKJCHFF.png\n",
            "test/3PL445ZQ.png\n",
            "test/RL71G5SR.png\n",
            "test/DS3R0KXK.png\n",
            "test/ZW6I1CFW.png\n",
            "test/Q5JTI77L.png\n",
            "test/C3RXG2DW.png\n",
            "test/OXSOFQ4H.png\n",
            "test/2KGN4TSJ.png\n",
            "test/OF6CWEHI.png\n",
            "test/6XQOWLOK.png\n",
            "test/1A9C2W5C.png\n",
            "test/YW9XGTLG.png\n",
            "test/1BEYC6ZQ.png\n",
            "test/CZHA1K5C.png\n",
            "test/R47WFQU7.png\n",
            "test/Z6K52OJM.png\n",
            "test/WPGI7U61.png\n",
            "test/YCS3Y0HU.png\n",
            "test/X65Z4GY0.png\n",
            "test/3BX0ECQZ.png\n",
            "test/9XTXV1SV.png\n",
            "test/JZ4CE90T.png\n",
            "test/I78AF13J.png\n",
            "test/LCMEH10B.png\n",
            "test/IXRY22EE.png\n",
            "test/BW0EOLHP.png\n",
            "test/852S0RM1.png\n",
            "test/YEB88ZTR.png\n",
            "test/7ZFWLZG3.png\n",
            "test/4JL0F5V7.png\n",
            "test/XNG720RP.png\n",
            "test/U5WHHPVI.png\n",
            "test/WYEOAXHZ.png\n",
            "test/4V15YL8W.png\n",
            "test/T8RNXKI0.png\n",
            "test/7P5Q9AT7.png\n",
            "test/AYTWXFHA.png\n",
            "test/QFT1CX1J.png\n",
            "test/RBDIJGXX.png\n",
            "test/QOCPMQVQ.png\n",
            "test/X29OB8KX.png\n",
            "test/CA5ZUW1G.png\n",
            "test/UYW9QD5B.png\n",
            "test/Z12SET6R.png\n",
            "test/XJDC6S0M.png\n",
            "test/ZYDJ2JG9.png\n",
            "test/X8J0FO1J.png\n",
            "test/NAB7LDP5.png\n",
            "test/2X7HO8UZ.png\n",
            "test/KZMVR6HG.png\n",
            "test/NQMWK9SX.png\n",
            "test/YKNXPIDQ.png\n",
            "test/S09XBU66.png\n",
            "test/765CKTZ1.png\n",
            "test/WLXRZD6G.png\n",
            "test/T4BGVE7N.png\n",
            "test/7CUI800O.png\n",
            "test/TX4KXFX5.png\n",
            "test/9B50BK2X.png\n",
            "test/0SE5FNRD.png\n",
            "test/B7NTN9Q5.png\n",
            "test/8YFZOXDS.png\n",
            "test/4K39E7BI.png\n",
            "test/F3WRZWFI.png\n",
            "test/1LWJ7NWW.png\n",
            "test/8PX0QVZI.png\n",
            "test/I2DY77G3.png\n",
            "test/T3HE61XW.png\n",
            "test/D5ZGDJLO.png\n",
            "test/ZBS4LDQP.png\n",
            "test/DLXHVCTO.png\n",
            "test/X8YZ18KS.png\n",
            "test/I080RKKC.png\n",
            "test/W7XQ0HTN.png\n",
            "test/M8ZUCOSV.png\n",
            "test/YSFWPMQC.png\n",
            "test/PB7IODI8.png\n",
            "test/PFGFDND4.png\n",
            "test/R06N9S9U.png\n",
            "test/EFHDQ28H.png\n",
            "test/C1SVN01E.png\n",
            "test/85GECT4B.png\n",
            "test/D7GP6INU.png\n",
            "test/81YFWR6R.png\n",
            "test/EIQ7M6AI.png\n",
            "test/TMTD6DVS.png\n",
            "test/9VXGL282.png\n",
            "test/3T00KNQ0.png\n",
            "test/K7L6IWU3.png\n",
            "test/IJR7X18F.png\n",
            "test/6KGW8MAJ.png\n",
            "test/WLEPSHCT.png\n",
            "test/VA6M23NP.png\n",
            "test/8BUFP08Y.png\n",
            "test/KNQ8YYPM.png\n",
            "test/9XFTZIFJ.png\n",
            "test/T0UI4J3A.png\n",
            "test/167AQBRD.png\n",
            "test/IQHD8JX9.png\n",
            "test/CBVOMBZ3.png\n",
            "test/XPBAW7NU.png\n",
            "test/10T4UJRK.png\n",
            "test/HFF2XP21.png\n",
            "test/ZP5Y3LNG.png\n",
            "test/LT43G9FW.png\n",
            "test/WO30M162.png\n",
            "test/YULLZQUC.png\n",
            "test/OP65HHRG.png\n",
            "test/TIUT4UQO.png\n",
            "test/JL7J0DB7.png\n",
            "test/V2HAQ104.png\n",
            "test/78YXT11C.png\n",
            "test/LPRXX6J6.png\n",
            "test/CSJDUR61.png\n",
            "test/EBCCTL2V.png\n",
            "test/5QA56BTK.png\n",
            "test/UCQ6B8O9.png\n",
            "test/PGX6QGWS.png\n",
            "test/RIEZVRXM.png\n",
            "test/S4L9YCPN.png\n",
            "test/DXUSRR6L.png\n",
            "test/THMP624R.png\n",
            "test/AN8JT090.png\n",
            "test/HI109S03.png\n",
            "test/VNENHRP8.png\n",
            "test/8Y8JWO1M.png\n",
            "test/HSP0D90J.png\n",
            "test/9WD1YI61.png\n",
            "test/4SEKL4RC.png\n",
            "test/2Q1QIQNN.png\n",
            "test/YIBRV4JV.png\n",
            "test/CIHVVT9M.png\n",
            "test/UF3JI5L8.png\n",
            "test/W5HJOCOI.png\n",
            "test/S4V100M9.png\n",
            "test/5E0NB1QG.png\n",
            "test/E7YD5VN1.png\n",
            "test/CE5RKEW9.png\n",
            "test/FWDWFILQ.png\n",
            "test/DTRJXIKQ.png\n",
            "test/HCOO32DE.png\n",
            "test/M4QTE9CC.png\n",
            "test/XBJI266N.png\n",
            "test/KEAG0ZB5.png\n",
            "test/1JEY0WCG.png\n",
            "test/3IQ00PZV.png\n",
            "test/UCOUW47O.png\n",
            "test/BUH5GKST.png\n",
            "test/27CMKMPS.png\n",
            "test/LYD5X8KK.png\n",
            "test/WE1KXX2F.png\n",
            "test/PINU80JQ.png\n",
            "test/FQLM8G5Q.png\n",
            "test/O7I1I7ZS.png\n",
            "test/M9J6CVJ4.png\n",
            "test/37OH4XBC.png\n",
            "test/BT8GF0ME.png\n",
            "test/4LMG84TD.png\n",
            "test/TI3W6VVN.png\n",
            "test/SENVEBRL.png\n",
            "test/IQYQVZ6N.png\n",
            "test/QDOYBO1V.png\n",
            "test/86WS8U9O.png\n",
            "test/Q14LQTUM.png\n",
            "test/VGJ9QU2L.png\n",
            "test/ADV6G1UW.png\n",
            "test/NHP2YUL8.png\n",
            "test/4GXEWCIN.png\n",
            "test/3G7L3CVA.png\n",
            "test/EUB1VLPH.png\n",
            "test/9YRGA0TM.png\n",
            "test/MDWA1GOG.png\n",
            "test/A8TC49NK.png\n",
            "test/AMWT4LI6.png\n",
            "test/NMLG3EBE.png\n",
            "test/K3K9DCRW.png\n",
            "test/DDDHNJY0.png\n",
            "test/MK0UQ9LP.png\n",
            "test/9YD8D7K4.png\n",
            "test/SZB997BO.png\n",
            "test/8A2E2I1J.png\n",
            "test/CJAS0JAX.png\n",
            "test/97MS567K.png\n",
            "test/E14C78CA.png\n",
            "test/APSQRJIX.png\n",
            "test/7CP271YK.png\n",
            "test/YGOGYWLG.png\n",
            "test/81FPN29U.png\n",
            "test/HTMVZ73P.png\n",
            "test/XB9ULB7S.png\n",
            "test/YZSYXCMS.png\n",
            "test/O8V183XK.png\n",
            "test/9DOF3Y8H.png\n",
            "test/IL8GH4YK.png\n",
            "test/AA0AGOJ1.png\n",
            "test/DDI537YP.png\n",
            "test/AU5KE0DB.png\n",
            "test/ZDQ5CQ0P.png\n",
            "test/WF1CDRZG.png\n",
            "test/Y9W57GSQ.png\n",
            "test/ZUAFNDYD.png\n",
            "test/9H21JM8H.png\n",
            "test/GEVOZS2X.png\n",
            "test/S7FAJU8Q.png\n",
            "test/SHQNQS0H.png\n",
            "test/L6BMPCI0.png\n",
            "test/W893ED8G.png\n",
            "test/60DGTQ6K.png\n",
            "test/GC2WXAOT.png\n",
            "test/147QVHL1.png\n",
            "test/LEKO8I5X.png\n",
            "test/7VQBGWWR.png\n",
            "test/8VZ7O6GF.png\n",
            "test/N12927GE.png\n",
            "test/A1GMCD2R.png\n",
            "test/RT3603TH.png\n",
            "test/8GMWZUHO.png\n",
            "test/694DYCAZ.png\n",
            "test/4A0G05QB.png\n",
            "test/EVBDD38M.png\n",
            "test/SWB089I9.png\n",
            "test/9KLV9A7N.png\n",
            "test/AG5GXBG3.png\n",
            "test/1Z5W6H4O.png\n",
            "test/NXBHXMAZ.png\n",
            "test/XMPUPC7C.png\n",
            "test/NAB96K93.png\n",
            "test/E8GB1A3O.png\n",
            "test/HY2MQ8PM.png\n",
            "test/TX1DY4HY.png\n",
            "test/ZHNURZH3.png\n",
            "test/V3ZWY8VS.png\n",
            "test/1EGUJACE.png\n",
            "test/6BIZCDA7.png\n",
            "test/DVXZ8SL3.png\n",
            "test/CK3FRB3I.png\n",
            "test/ST3B4M3G.png\n",
            "test/TTSQ2N02.png\n",
            "test/TMD372QS.png\n",
            "test/25SKNSV1.png\n",
            "test/0Z9XYPVS.png\n",
            "test/VCOXL1UW.png\n",
            "test/4G5IIGQU.png\n",
            "test/TD5CMFNY.png\n",
            "test/96GKMV59.png\n",
            "test/9VHWQSEL.png\n",
            "test/PEON354L.png\n",
            "test/903NHZLZ.png\n",
            "test/V9TPVFCN.png\n",
            "test/VGMUZJ8E.png\n",
            "test/IS695UU0.png\n",
            "test/QO829PDW.png\n",
            "test/N6MGGCLY.png\n",
            "test/PKVQPLAG.png\n",
            "test/GQNNH8Q6.png\n",
            "test/2AJFLHQA.png\n",
            "test/IIX7G1Z0.png\n",
            "test/GLCCZWU5.png\n",
            "test/DULW0DKL.png\n",
            "test/5T9UU1SI.png\n",
            "test/RUNU5XC6.png\n",
            "test/XZS1FQQR.png\n",
            "test/SETG0XUR.png\n",
            "test/MC08L8JV.png\n",
            "test/P9M2E94F.png\n",
            "test/1XPYFXIO.png\n",
            "test/8KYHN5KB.png\n",
            "test/4GMZBFX8.png\n",
            "test/D5I5LE4O.png\n",
            "test/O4VZLZXX.png\n",
            "test/070IT1B3.png\n",
            "test/QI976I87.png\n",
            "test/XRQB81IG.png\n",
            "test/NJJ1V45J.png\n",
            "test/8BBJHOQM.png\n",
            "test/1P067VKX.png\n",
            "test/MBALZ91D.png\n",
            "test/YEQEN3J7.png\n",
            "test/8A9AQU56.png\n",
            "test/IHQ923KU.png\n",
            "test/BMBJG0TM.png\n",
            "test/YHY7FUN2.png\n",
            "test/IUNJWFPE.png\n",
            "test/CEULIGKQ.png\n",
            "test/YP07U0ZA.png\n",
            "test/DYS75E3S.png\n",
            "test/59IEVDSR.png\n",
            "test/FCC8TYI2.png\n",
            "test/HFTM1FJS.png\n",
            "test/9HTPIZO7.png\n",
            "test/QVI3MI1R.png\n",
            "test/9U684S1R.png\n",
            "test/3MRSM7EA.png\n",
            "test/M9P7I8AS.png\n",
            "test/AVSW36FU.png\n",
            "test/D0JYT15T.png\n",
            "test/BV36KT6A.png\n",
            "test/WT0209G6.png\n",
            "test/6R4Y590R.png\n",
            "test/2EYWVNIC.png\n",
            "test/HLW05T3T.png\n",
            "test/HXMD7GU6.png\n",
            "test/2GTCL2T1.png\n",
            "test/YDGN05LH.png\n",
            "test/KPRFMFSR.png\n",
            "test/Q6PV7O5B.png\n",
            "test/4JB2JNH8.png\n",
            "test/NIXA0QZ1.png\n",
            "test/9UF0VFWJ.png\n",
            "test/DENEGR8M.png\n",
            "test/LDCUS6OV.png\n",
            "test/IEVUXGER.png\n",
            "test/Y2D5NETZ.png\n",
            "test/6XEC7RCQ.png\n",
            "test/HG08TNR0.png\n",
            "test/FEQV1BY3.png\n",
            "test/0D1WVB94.png\n",
            "test/Y0FB04RZ.png\n",
            "test/1JHXAVSQ.png\n",
            "test/QYE3RY8P.png\n",
            "test/K8DXDN8W.png\n",
            "test/EO1ZWHDQ.png\n",
            "test/5SO9QW6A.png\n",
            "test/IUP9KD37.png\n",
            "test/X0EQSY0G.png\n",
            "test/8J7SAKDP.png\n",
            "test/K4XAOGQ6.png\n",
            "test/TSYYEM2A.png\n",
            "test/LIX0OMR0.png\n",
            "test/V5BJQDHD.png\n",
            "test/P8EG2VPB.png\n",
            "test/X5PVOZYR.png\n",
            "test/0P2TKBKZ.png\n",
            "test/2CCA833K.png\n",
            "test/S11CYTJM.png\n",
            "test/FGUE0HIG.png\n",
            "test/G00242FS.png\n",
            "test/IVC3ZZZS.png\n",
            "test/7MT4M2R2.png\n",
            "test/BNG41ETH.png\n",
            "test/YJ7431MP.png\n",
            "test/8Q4JNC15.png\n",
            "test/V8HT87H7.png\n",
            "test/FW1TMY8J.png\n",
            "test/5MFANICH.png\n",
            "test/IO4KC944.png\n",
            "test/M2SGDUH6.png\n",
            "test/T4Y9OGCO.png\n",
            "test/3CHJQ2F1.png\n",
            "test/R31SCY9R.png\n",
            "test/M8SJS3GM.png\n",
            "test/G8IDD3CH.png\n",
            "test/5GMHTOKQ.png\n",
            "test/QILTJCDD.png\n",
            "test/7VGQE8R4.png\n",
            "test/CJ5YP7CE.png\n",
            "test/FCGVEV3X.png\n",
            "test/VR0XSQST.png\n",
            "test/CAU32Y8S.png\n",
            "test/CV4LFY09.png\n",
            "test/2BDS7I66.png\n",
            "test/HUW1K6C2.png\n",
            "test/ABH0SFSF.png\n",
            "test/8BHM6WFX.png\n",
            "test/B0MBIX1N.png\n",
            "test/E82CTFRZ.png\n",
            "test/K1CF5IH4.png\n",
            "test/MO1AFOH5.png\n",
            "test/ZF1B9ESL.png\n",
            "test/ZF3U4BGM.png\n",
            "test/CMUOYHYE.png\n",
            "test/MK8ET4YQ.png\n",
            "test/T1TN3SHW.png\n",
            "test/URZBZHMN.png\n",
            "test/00Y667ZT.png\n",
            "test/3PB2RPBQ.png\n",
            "test/ZXEGFFIT.png\n",
            "test/P3WW2P7V.png\n",
            "test/XI8Q42YE.png\n",
            "test/SLZQYSW8.png\n",
            "test/IG9KRNKS.png\n",
            "test/BNZBW895.png\n",
            "test/J4W3N732.png\n",
            "test/HZB8BOP5.png\n",
            "test/VW7QDKBX.png\n",
            "test/ACTLVR6D.png\n",
            "test/GX3RS4MN.png\n",
            "test/IUCFP0F6.png\n",
            "test/8MNIJS3U.png\n",
            "test/48W7T2SF.png\n",
            "test/WCUCUCNP.png\n",
            "test/5W23V9SP.png\n",
            "test/MWWTVDOH.png\n",
            "test/YM82CI2N.png\n",
            "test/C1BYYQLX.png\n",
            "test/3ZJ79YWC.png\n",
            "test/7KAWDI9M.png\n",
            "test/249LOEU6.png\n",
            "test/2IQNTP4W.png\n",
            "test/1Y3FQ6HA.png\n",
            "test/JE9VJTFE.png\n",
            "test/8VWNI8IC.png\n",
            "test/JEXVE6N5.png\n",
            "test/1LL2Z2QD.png\n",
            "test/C1T33WB4.png\n",
            "test/ARZ4VQMA.png\n",
            "test/GQNMLBMJ.png\n",
            "test/BE0OBB69.png\n",
            "test/N55SBCP4.png\n",
            "test/WQRSI2QQ.png\n",
            "test/57IWS61V.png\n",
            "test/KRLNHJZF.png\n",
            "test/Y8Y3ZLZK.png\n",
            "test/MWIUM7E9.png\n",
            "test/IVYX4MNK.png\n",
            "test/8FAB9Z4J.png\n",
            "test/05JGQBY4.png\n",
            "test/SYR3VOB2.png\n",
            "test/51OPPN02.png\n",
            "test/VKAST9HE.png\n",
            "test/3BHT4W0O.png\n",
            "test/CCTTYJHJ.png\n",
            "test/ZDF34GC8.png\n",
            "test/E29GR0TM.png\n",
            "test/SX4VR01J.png\n",
            "test/YGTF2KZH.png\n",
            "test/CUXQVHSZ.png\n",
            "test/6YF4M6AI.png\n",
            "test/1CTBIDY0.png\n",
            "test/N1Y5FMQ6.png\n",
            "test/1QRHXY3G.png\n",
            "test/59XEC3WD.png\n",
            "test/SMBYXDJV.png\n",
            "test/535KIBVU.png\n",
            "test/8LVOSUFZ.png\n",
            "test/KGU04VSU.png\n",
            "test/KI20H86W.png\n",
            "test/GHW544YB.png\n",
            "test/H55JY8ME.png\n",
            "test/5JNAAYUX.png\n",
            "test/I828WHWO.png\n",
            "test/P7L9XS1A.png\n",
            "test/7Y56HMHT.png\n",
            "test/FIF52W9Z.png\n",
            "test/V0BMSXQQ.png\n",
            "test/5A6SLEXM.png\n",
            "test/6L0A4943.png\n",
            "test/PGMWJTEN.png\n",
            "test/X0GATY8C.png\n",
            "test/4I9LPPFK.png\n",
            "test/8WKTTN3E.png\n",
            "test/W8BB5K3W.png\n",
            "test/HR9N8P29.png\n",
            "test/CPHJJEB3.png\n",
            "test/ARYLBDFW.png\n",
            "test/7PGYG7NT.png\n",
            "test/8R767JP5.png\n",
            "test/T9C1FU3U.png\n",
            "test/5A52OGT1.png\n",
            "test/BOMVV0EL.png\n",
            "test/T1G7MN9C.png\n",
            "test/RD9HLS1Y.png\n",
            "test/NR28DSIN.png\n",
            "test/GY2J4YIH.png\n",
            "test/UXX2MWHP.png\n",
            "test/XAHMR5GQ.png\n",
            "test/PGV7WOGI.png\n",
            "test/MUMXXJ17.png\n",
            "test/MJF092GE.png\n",
            "test/EI048CE4.png\n",
            "test/UCBA52OE.png\n",
            "test/A8GHOUL2.png\n",
            "test/AVB15YA2.png\n",
            "test/FLFT6JIN.png\n",
            "test/HQC8EGI7.png\n",
            "test/JZAL8DHH.png\n",
            "test/LSSTNI04.png\n",
            "test/QJ7KQWC2.png\n",
            "test/658J7GNH.png\n",
            "test/DVWZL6AL.png\n",
            "test/7CC18NP9.png\n",
            "test/O9S9KY6D.png\n",
            "test/C2KZDE1Z.png\n",
            "test/EMOPF9GF.png\n",
            "test/I626S9LN.png\n",
            "test/Z062F6OC.png\n",
            "test/SS0P5Y79.png\n",
            "test/H2NELL6E.png\n",
            "test/Q7YF6E0K.png\n",
            "test/1X5SF05Z.png\n",
            "test/UVKJ8YB8.png\n",
            "test/O7B7PXG0.png\n",
            "test/PFCXP6K5.png\n",
            "test/SP1I6FGG.png\n",
            "test/DMU8Y14S.png\n",
            "test/LDEKNT4M.png\n",
            "test/OB7E05KR.png\n",
            "test/RN20KCQE.png\n",
            "test/5S136H5G.png\n",
            "test/FDT8C188.png\n",
            "test/XBYVR2H7.png\n",
            "test/O2VINN4U.png\n",
            "test/H66VHC1L.png\n",
            "test/6AII1NI4.png\n",
            "test/1TUPCLFN.png\n",
            "test/053YUCZK.png\n",
            "test/33SNQVYF.png\n",
            "test/1WG1X0VY.png\n",
            "test/U2Z77GYI.png\n",
            "test/AW8812EX.png\n",
            "test/OK29KD5U.png\n",
            "test/TE6PLDCF.png\n",
            "test/6RVPRALB.png\n",
            "test/8DH7AMR3.png\n",
            "test/BP83UJUY.png\n",
            "test/EH29JFBP.png\n",
            "test/3GYC5GUM.png\n",
            "test/VOONINYK.png\n",
            "test/XYELE4ND.png\n",
            "test/SP5FAWWK.png\n",
            "test/JWD0DGNK.png\n",
            "test/CEQMF6V3.png\n",
            "test/H85G4U2Q.png\n",
            "test/48MAFA3G.png\n",
            "test/FVX4AEFV.png\n",
            "test/GAFBN6F9.png\n",
            "test/KV1FUD78.png\n",
            "test/W3W0Z91Z.png\n",
            "test/BKFY0IPI.png\n",
            "test/LWI9HNLS.png\n",
            "test/O7UFVGI2.png\n",
            "test/1IAKE870.png\n",
            "test/Y2SKQHQB.png\n",
            "test/FPORXUEV.png\n",
            "test/TPQ1458A.png\n",
            "test/E4VMNJ2Z.png\n",
            "test/NTAS3A5S.png\n",
            "test/O81UWEN5.png\n",
            "test/FKTO2M9Q.png\n",
            "test/KIPFRO5S.png\n",
            "test/5YKZ4JE1.png\n",
            "test/WQ71DYZC.png\n",
            "test/QMHYPU19.png\n",
            "test/JA9WW5KB.png\n",
            "test/MK3SX8I7.png\n",
            "test/AGQ0AAYI.png\n",
            "test/GTIEWBO4.png\n",
            "test/5KQGU6DQ.png\n",
            "test/A0NQ3YRQ.png\n",
            "test/OCW77DK4.png\n",
            "test/L21AEHDV.png\n",
            "test/EFM1IYKY.png\n",
            "test/M0E1XSSU.png\n",
            "test/P60S2JME.png\n",
            "test/J3XOL0RX.png\n",
            "test/6DEIF0GY.png\n",
            "test/2A90PUUQ.png\n",
            "test/1E3XZG05.png\n",
            "test/U4WX0TBW.png\n",
            "test/XF9358EZ.png\n",
            "test/GL4HN78G.png\n",
            "test/2Y99WN6H.png\n",
            "test/Y1N6DRZR.png\n",
            "test/QBWRZHA3.png\n",
            "test/YT71FN9O.png\n",
            "test/2NERUY2R.png\n",
            "test/62S8MK18.png\n",
            "test/F7PLS622.png\n",
            "test/8UZRX4X1.png\n",
            "test/8HH6WT8O.png\n",
            "test/GCX23I2A.png\n",
            "test/VEKFE8C1.png\n",
            "test/9GB1LE56.png\n",
            "test/VMF8PRHF.png\n",
            "test/GJLDZHKT.png\n",
            "test/EU7FOKNZ.png\n",
            "test/0XEIHSSM.png\n",
            "test/Y0WH0KZL.png\n",
            "test/KZEQ1H77.png\n",
            "test/Y5UY6NQF.png\n",
            "test/1BWR6EB1.png\n",
            "test/LKLB9DIX.png\n",
            "test/L3WJ3TW0.png\n",
            "test/TIOAUIT2.png\n",
            "test/5ZZ683JI.png\n",
            "test/MY31UI7Q.png\n",
            "test/73Y9QJS6.png\n",
            "test/L1P9M611.png\n",
            "test/7STMP1YO.png\n",
            "test/69J25MUX.png\n",
            "test/Y38XPSZ0.png\n",
            "test/8S3H6OHJ.png\n",
            "test/I7OCFOXI.png\n",
            "test/OGF5KKOQ.png\n",
            "test/33QESVZ0.png\n",
            "test/PYAT6JT1.png\n",
            "test/1NYE277I.png\n",
            "test/NHEIR3EY.png\n",
            "test/0L3OCAHF.png\n",
            "test/GZ9ZU0YD.png\n",
            "test/Q9KEQHEX.png\n",
            "test/IAPW72NY.png\n",
            "test/1RAXAYE8.png\n",
            "test/A59SGY7G.png\n",
            "test/2FLXR0VW.png\n",
            "test/GW4H9EKE.png\n",
            "test/F6RB86GC.png\n",
            "test/BMONDX8Y.png\n",
            "test/4EL3ARRX.png\n",
            "test/3MQNM1XW.png\n",
            "test/DJDG2QSC.png\n",
            "test/WYTBDLM7.png\n",
            "test/MV1MD6BH.png\n",
            "test/MGNE7A9B.png\n",
            "test/4TDTCH37.png\n",
            "test/KR13PKV5.png\n",
            "test/IZHQZ4WF.png\n",
            "test/9MLOMD9O.png\n",
            "test/M01PPL9C.png\n",
            "test/VDYBOSY8.png\n",
            "test/2XMEXL5Q.png\n",
            "test/G0UUI7ZZ.png\n",
            "test/CZNLSUK1.png\n",
            "test/Z83XGWIQ.png\n",
            "test/3A62F5U0.png\n",
            "test/1DIJY31B.png\n",
            "test/PXWQXEW3.png\n",
            "test/K93QCGJR.png\n",
            "test/SB4H26OM.png\n",
            "test/PQ727WEC.png\n",
            "test/5TUHSOLH.png\n",
            "test/SHJ7XS2D.png\n",
            "test/JJ6QEVTQ.png\n",
            "test/8HMH20Y9.png\n",
            "test/ZUA03HOT.png\n",
            "test/B462TAMS.png\n",
            "test/SYD9D01D.png\n",
            "test/ER0M7HF6.png\n",
            "test/7BICJV5Z.png\n",
            "test/8DPEQMZN.png\n",
            "test/O8W6HTYQ.png\n",
            "test/AZDTHMWM.png\n",
            "test/OK4Q289P.png\n",
            "test/QHF2AQ5U.png\n",
            "test/PD3NK2YN.png\n",
            "test/2QZRTSQB.png\n",
            "test/BM0EFLTI.png\n",
            "test/GFG2375Y.png\n",
            "test/CDHAE02W.png\n",
            "test/8DRUL0SL.png\n",
            "test/Q6KAJACJ.png\n",
            "test/92V95JZ8.png\n",
            "test/IG8ORE5X.png\n",
            "test/ATZF1C1D.png\n",
            "test/PAYOMNWI.png\n",
            "test/4UXSVJIY.png\n",
            "test/M8P79ZK7.png\n",
            "test/QYF1KQFE.png\n",
            "test/XHNF27DQ.png\n",
            "test/JY0FULLT.png\n",
            "test/5M9VF0VH.png\n",
            "test/HHC8M5LE.png\n",
            "test/4OHNOBR0.png\n",
            "test/3NFRU8C7.png\n",
            "test/TKJHUWOH.png\n",
            "test/NKTGWAFM.png\n",
            "test/2YXPX5PB.png\n",
            "test/358XC6M3.png\n",
            "test/RLITR8FQ.png\n",
            "test/40WYT8U4.png\n",
            "test/S6AHU0K2.png\n",
            "test/BN6KBJRM.png\n",
            "test/CYKR54DK.png\n",
            "test/2JP61UU9.png\n",
            "test/6BCSBNDJ.png\n",
            "test/XX0ZNA6H.png\n",
            "test/J4ASW2BJ.png\n",
            "test/RLE79D0B.png\n",
            "test/5FZ08G7V.png\n",
            "test/X8DT4IG7.png\n",
            "test/QYZCPQT5.png\n",
            "test/IY3C0D4D.png\n",
            "test/MKL7M6TK.png\n",
            "test/ZQGQKGZN.png\n",
            "test/JE79001K.png\n",
            "test/QRCNA1F7.png\n",
            "test/OM0Z0VQ5.png\n",
            "test/3AY8WGBT.png\n",
            "test/GHFVSUIV.png\n",
            "test/P9AI4F02.png\n",
            "test/H7VLGABT.png\n",
            "test/H72U3MKW.png\n",
            "test/DTUKSONV.png\n",
            "test/P7DT1LIL.png\n",
            "test/VNP7NWJ2.png\n",
            "test/526M704Y.png\n",
            "test/G3GP6WBB.png\n",
            "test/Z1ABZY9Q.png\n",
            "test/NZQWW05C.png\n",
            "test/XI8Q5U5U.png\n",
            "test/COF43UQV.png\n",
            "test/6CC1C1A2.png\n",
            "test/6GM7BJFD.png\n",
            "test/PL067TPW.png\n",
            "test/QVG2GI7L.png\n",
            "test/OOQOD7BH.png\n",
            "test/RSEZBF5T.png\n",
            "test/2NVMP0AN.png\n",
            "test/PK5XH3Q3.png\n",
            "test/ZGGCAIN2.png\n",
            "test/0KBTCEJ8.png\n",
            "test/T5DZT0OI.png\n",
            "test/6SSFYY02.png\n",
            "test/D3HT1K3A.png\n",
            "test/R96JPO2X.png\n",
            "test/FJFG9SQZ.png\n",
            "test/XLIVLW31.png\n",
            "test/YKHQ9R0S.png\n",
            "test/6T2PTSYW.png\n",
            "test/GXV6MAFN.png\n",
            "test/5627CEH0.png\n",
            "test/NRNNZ1VK.png\n",
            "test/F2TOHDUY.png\n",
            "test/TIBRTC2Q.png\n",
            "test/PPSY5TXK.png\n",
            "test/DSVXP08Z.png\n",
            "test/IN65LUVQ.png\n",
            "test/X6QTPS5S.png\n",
            "test/BHRA6D2T.png\n",
            "test/S2ZHAKAV.png\n",
            "test/08PJKDUD.png\n",
            "test/JOTFTJDU.png\n",
            "test/9IGND9JV.png\n",
            "test/ERSGT8ML.png\n",
            "test/Z0175HET.png\n",
            "test/2F7Z0Z4Q.png\n",
            "test/E1XVPO9U.png\n",
            "test/HISYJ8VI.png\n",
            "test/S1R6QO3A.png\n",
            "test/I5XN9QCD.png\n",
            "test/DQQY6F28.png\n",
            "test/6VMLDO2E.png\n",
            "test/3Q7POQHQ.png\n",
            "test/Q2M4STSE.png\n",
            "test/0URKALRN.png\n",
            "test/HLSRPSUP.png\n",
            "test/VGU9VCNZ.png\n",
            "test/76MKV8KX.png\n",
            "test/LNL5KSV3.png\n",
            "test/3VW526VY.png\n",
            "test/KQC6MX2E.png\n",
            "test/4SRA7N5I.png\n",
            "test/PHBHUDM3.png\n",
            "test/2KYUN749.png\n",
            "test/QDMP8K2F.png\n",
            "test/2M881MW7.png\n",
            "test/R18L8SFI.png\n",
            "test/VOEU2ZYT.png\n",
            "test/F0CFU5ZU.png\n",
            "test/BN48COQ4.png\n",
            "test/RNXNHAI4.png\n",
            "test/ZX7PV5BH.png\n",
            "test/EAB97M27.png\n",
            "test/6XSWL3NT.png\n",
            "test/VK67HA7E.png\n",
            "test/83ZQI2CO.png\n",
            "test/CLXGTH3U.png\n",
            "test/DYJDXB5Z.png\n",
            "test/I7P5N4LR.png\n",
            "test/NT755EH9.png\n",
            "test/JXK7NOG2.png\n",
            "test/6FDR2EX3.png\n",
            "test/LUDQJMJ3.png\n",
            "test/CJZ2BCQK.png\n",
            "test/K1N6BINY.png\n",
            "test/08F4B5WZ.png\n",
            "test/88E2SY5X.png\n",
            "test/DK43JTNN.png\n",
            "test/GA2PIUKX.png\n",
            "test/GWYTW15G.png\n",
            "test/3ULPC5VS.png\n",
            "test/HVVRRUSG.png\n",
            "test/GY9HIQQ9.png\n",
            "test/XJKYBPAL.png\n",
            "test/HQBNCEGS.png\n",
            "test/N538OYQ6.png\n",
            "test/CG21XQT5.png\n",
            "test/1NLCNZYM.png\n",
            "test/6NNJEV49.png\n",
            "test/V3EDDWM2.png\n",
            "test/GNQTXAVY.png\n",
            "test/Y6CW0WLE.png\n",
            "test/LZOS8QWR.png\n",
            "test/UXCWH7GN.png\n",
            "test/T2AK3AAV.png\n",
            "test/1H9Z54UC.png\n",
            "test/6UVQ1XHG.png\n",
            "test/6F91CUAU.png\n",
            "test/B2P9VKLM.png\n",
            "test/ZDJNTX97.png\n",
            "test/AITFWKES.png\n",
            "test/JXFCTB3Z.png\n",
            "test/SW6GSMNF.png\n",
            "test/UPHSKA2F.png\n",
            "test/PPCDUR16.png\n",
            "test/KZLSPZPS.png\n",
            "test/K8Y8W4BJ.png\n",
            "test/HD1I18SL.png\n",
            "test/G3ZTM85F.png\n",
            "test/G5FC0XSN.png\n",
            "test/WURQ99ZE.png\n",
            "test/QORTPHUS.png\n",
            "test/3AO4T5Q3.png\n",
            "test/9F92KLR2.png\n",
            "test/GE292PIN.png\n",
            "test/OIXNIN8M.png\n",
            "test/Y9NTGZCG.png\n",
            "test/SSFEFJ4X.png\n",
            "test/0AX1QPG9.png\n",
            "test/H971LH18.png\n",
            "test/QLB8F1XF.png\n",
            "test/9WUFC6FE.png\n",
            "test/4AQ77QGS.png\n",
            "test/HEOQ5M0X.png\n",
            "test/Q7QDWZQT.png\n",
            "test/FY6VUEEC.png\n",
            "test/6HXH5HDA.png\n",
            "test/KN5TM9HD.png\n",
            "test/54M3SM1U.png\n",
            "test/XSCK1BHE.png\n",
            "test/H78W1PV8.png\n",
            "test/WYQ92TS9.png\n",
            "test/SB7KMADP.png\n",
            "test/XXCQXL04.png\n",
            "test/52SDK3QC.png\n",
            "test/XMPLVA3T.png\n",
            "test/1CYD0J6M.png\n",
            "test/11P74VZV.png\n",
            "test/GVV8OXMX.png\n",
            "test/AOCSGA0N.png\n",
            "test/Q0DD3W17.png\n",
            "test/YROKP4SR.png\n",
            "test/DQR81THL.png\n",
            "test/BGQV3DZZ.png\n",
            "test/VAFT7PPJ.png\n",
            "test/C8TJHA64.png\n",
            "test/XS3VS8FW.png\n",
            "test/38DVYMUP.png\n",
            "test/VA495YRZ.png\n",
            "test/PX5BG9GG.png\n",
            "test/075FQBQ2.png\n",
            "test/DE41ETBN.png\n",
            "test/UM92OG6T.png\n",
            "test/YJAX7AE8.png\n",
            "test/685NO91O.png\n",
            "test/B5QZFREM.png\n",
            "test/XSISQOPS.png\n",
            "test/WMUQ8U7N.png\n",
            "test/8DZ5Z6MI.png\n",
            "test/HM19CNIG.png\n",
            "test/ZST4UHAU.png\n",
            "test/OGBG2FLC.png\n",
            "test/AOEDT01M.png\n",
            "test/C88VSSKD.png\n",
            "test/0O0GEVG3.png\n",
            "test/M26WPHPE.png\n",
            "test/CPPQCBSM.png\n",
            "test/5VOZK5RG.png\n",
            "test/2NW0GM1L.png\n",
            "test/FY6VAO0U.png\n",
            "test/Q7C6WGD4.png\n",
            "test/2F7XJ52Y.png\n",
            "test/XIKNCVZR.png\n",
            "test/AR9XOL89.png\n",
            "test/73F07JKT.png\n",
            "test/167WBHTT.png\n",
            "test/KTAYKGO4.png\n",
            "test/XP8ZPIVJ.png\n",
            "test/JGPJ5PMO.png\n",
            "test/WOL830IN.png\n",
            "test/0CUKEXUM.png\n",
            "test/66EG3XO5.png\n",
            "test/4FVZQAAJ.png\n",
            "test/NH4FGJI0.png\n",
            "test/ICAYUWUX.png\n",
            "test/T1U0X8TE.png\n",
            "test/FE5SH6FT.png\n",
            "test/3ONMXYQR.png\n",
            "test/O895PLWW.png\n",
            "test/U9LUQOAA.png\n",
            "test/I7TK1ZM6.png\n",
            "test/4FN71HPN.png\n",
            "test/OV0E1RIV.png\n",
            "test/4WBZM047.png\n",
            "test/JLET7A2L.png\n",
            "test/KCKLEW5V.png\n",
            "test/0004TGCC.png\n",
            "test/NZJUZLSI.png\n",
            "test/8MVQ6Z3C.png\n",
            "test/4YM8T5QA.png\n",
            "test/VPZPGIQE.png\n",
            "test/9XV3OVFJ.png\n",
            "test/K7WE5ILO.png\n",
            "test/O34M1IAQ.png\n",
            "test/HLMIV557.png\n",
            "test/GUSKOTQ9.png\n",
            "test/8CQ0FWJF.png\n",
            "test/VGF39I62.png\n",
            "test/T3HEFYTZ.png\n",
            "test/BSIOXI82.png\n",
            "test/UAGNQ8AM.png\n",
            "test/BFXVPQZ4.png\n",
            "test/GHGUQ143.png\n",
            "test/X9O4WIXA.png\n",
            "test/1Z71S9EQ.png\n",
            "test/TP89OPBQ.png\n",
            "test/8KK7PRHD.png\n",
            "test/QHQFWQJN.png\n",
            "test/X42W1O9H.png\n",
            "test/PZ4EO62D.png\n",
            "test/5LGODR1K.png\n",
            "test/K7N619BX.png\n",
            "test/0IBUZ1ZN.png\n",
            "test/9NQJQP1A.png\n",
            "test/ILCI39MK.png\n",
            "test/TQ7SRZAI.png\n",
            "test/U859GOW8.png\n",
            "test/O7YKLKW1.png\n",
            "test/RSWES4E2.png\n",
            "test/0WCUFAV4.png\n",
            "test/9BO7E13U.png\n",
            "test/NX0GJ5AS.png\n",
            "test/EUVE233C.png\n",
            "test/57I3EBWA.png\n",
            "test/WUSGZ5H4.png\n",
            "test/E44A61EX.png\n",
            "test/D1ZNRAWA.png\n",
            "test/B0NK8ZPS.png\n",
            "test/QLVSMHIM.png\n",
            "test/A83T6JML.png\n",
            "test/ZM6NU34T.png\n",
            "test/EMUPBDW4.png\n",
            "test/2MOIYZSH.png\n",
            "test/5BPG9DZ7.png\n",
            "test/WFJA6VRB.png\n",
            "test/Q7M5XW9Z.png\n",
            "test/98XEHJ9P.png\n",
            "test/9WMM4CPJ.png\n",
            "test/KOW0CR8P.png\n",
            "test/NAEA17AR.png\n",
            "test/SKJEIOEV.png\n",
            "test/8YELZGA8.png\n",
            "test/K4R7V5L2.png\n",
            "test/NF7VWT9I.png\n",
            "test/704HNIK7.png\n",
            "test/2NRBTI8A.png\n",
            "test/VPPADO79.png\n",
            "test/OUAE9CTG.png\n",
            "test/P3IAY3HR.png\n",
            "test/2A5MIRFE.png\n",
            "test/DGQPQ4I4.png\n",
            "test/DCBGYY8P.png\n",
            "test/PVCKAIW4.png\n",
            "test/ASE9I31F.png\n",
            "test/XYQGY6XY.png\n",
            "test/V85OZKIC.png\n",
            "test/K05BYQEE.png\n",
            "test/ISFAI54B.png\n",
            "test/RVID6870.png\n",
            "test/U3WST0O4.png\n",
            "test/3DKDRQ5U.png\n",
            "test/H3H1BU9T.png\n",
            "test/HYK0BO54.png\n",
            "test/7NB187HZ.png\n",
            "test/Y2MVJNZL.png\n",
            "test/CQ00FG35.png\n",
            "test/UH1TI7TM.png\n",
            "test/PX0SFKH9.png\n",
            "test/TRU2TX9N.png\n",
            "test/26T2FGPQ.png\n",
            "test/CLRYJ8YV.png\n",
            "test/EQ3B8UWJ.png\n",
            "test/4DUH3KWP.png\n",
            "test/VJ2A5610.png\n",
            "test/1NCNVQGC.png\n",
            "test/69AZF7M9.png\n",
            "test/XFZ9NCG2.png\n",
            "test/EJ1N1Z9T.png\n",
            "test/2JGYFUO2.png\n",
            "test/NLMVTALO.png\n",
            "test/PYGTOWQU.png\n",
            "test/T36CPUIA.png\n",
            "test/XWK73SSN.png\n",
            "test/GIN0SZDQ.png\n",
            "test/HPGY4NN4.png\n",
            "test/IS96UN66.png\n",
            "test/ZR9K3N3D.png\n",
            "test/0XFN38ZE.png\n",
            "test/93OZP6GP.png\n",
            "test/TWKY07T9.png\n",
            "test/MLDO6X6B.png\n",
            "test/T0WJTRQH.png\n",
            "test/KY6RVQ2I.png\n",
            "test/SXTZIHQC.png\n",
            "test/5LTDJWYX.png\n",
            "test/YSASLFNF.png\n",
            "test/U7XQIFDA.png\n",
            "test/L4DSF0Z5.png\n",
            "test/W1PZXIGW.png\n",
            "test/WMLPNTPB.png\n",
            "test/ETW2Y2HB.png\n",
            "test/1NCCHGG3.png\n",
            "test/YKSNIZ7B.png\n",
            "test/WN2BU7YR.png\n",
            "test/NPA57XHY.png\n",
            "test/HKD7ZJPR.png\n",
            "test/OKND1CSN.png\n",
            "test/I2L4EJV5.png\n",
            "test/VCI61H3D.png\n",
            "test/K2D3972U.png\n",
            "test/RB9Y8Y5W.png\n",
            "test/ZIK55751.png\n",
            "test/EOE5YZFS.png\n",
            "test/PIRQCETT.png\n",
            "test/UZXYKBUT.png\n",
            "test/5V05U3EH.png\n",
            "test/P90KD7X4.png\n",
            "test/N5JEAVJZ.png\n",
            "test/K0WGDESN.png\n",
            "test/LM2UU690.png\n",
            "test/D8GW7TRQ.png\n",
            "test/2T1B8VPF.png\n",
            "test/6CRALVM3.png\n",
            "test/IV787HN6.png\n",
            "test/75QK2K6P.png\n",
            "test/SNFB1BFU.png\n",
            "test/4Q3SES76.png\n",
            "test/F4KCL0Y8.png\n",
            "test/BN60Z591.png\n",
            "test/593LZVV8.png\n",
            "test/D0SITLJW.png\n",
            "test/3L7H2A3S.png\n",
            "test/CGI5P5PO.png\n",
            "test/S45F61LX.png\n",
            "test/N26DZFQL.png\n",
            "test/50EL0DQV.png\n",
            "test/ADBSXJ7M.png\n",
            "test/5BDUZAUJ.png\n",
            "test/18BO29W0.png\n",
            "test/GQEXHR8L.png\n",
            "test/4I5BTYDU.png\n",
            "test/AR3B9FMD.png\n",
            "test/HFJ3DUXH.png\n",
            "test/RWSJGO10.png\n",
            "test/XZXWAUCJ.png\n",
            "test/1W26Y5QY.png\n",
            "test/7OLNZVKG.png\n",
            "test/W03K9BAT.png\n",
            "test/GAY1EEAK.png\n",
            "test/NX440T34.png\n",
            "test/ZLOOTSRS.png\n",
            "test/1I2FSEFZ.png\n",
            "test/V1TLWYGW.png\n",
            "test/15KLRMZP.png\n",
            "test/FCQBIVBS.png\n",
            "test/AFKIK0CP.png\n",
            "test/67WH2T7G.png\n",
            "test/AY4YJBJ0.png\n",
            "test/6UC9ODVJ.png\n",
            "test/20AJM1BF.png\n",
            "test/IN2GX462.png\n",
            "test/B21GNF5P.png\n",
            "test/MK507L7T.png\n",
            "test/0EZSRU6M.png\n",
            "test/HHGJ8X4F.png\n",
            "test/M230FKST.png\n",
            "test/K8XUOKAB.png\n",
            "test/GRYERW9O.png\n",
            "test/JGY0O013.png\n",
            "test/9VOZPJRQ.png\n",
            "test/FZOJNA1J.png\n",
            "test/K7GS6URM.png\n",
            "test/M46MS4ZU.png\n",
            "test/XFLW7L9V.png\n",
            "test/0Y9BOQOT.png\n",
            "test/B3Y6ZD8N.png\n",
            "test/IIAD7ZR4.png\n",
            "test/74Z0LUGP.png\n",
            "test/8XBJG7AE.png\n",
            "test/R74B56IQ.png\n",
            "test/S7M123S9.png\n",
            "test/I5HPVALF.png\n",
            "test/5GID3ITJ.png\n",
            "test/RHVOGFJL.png\n",
            "test/CDQMSKAP.png\n",
            "test/LBDLWACS.png\n",
            "test/V7I3ZCHQ.png\n",
            "test/I6DQS3LL.png\n",
            "test/MFMG1FDX.png\n",
            "test/OROJMVP4.png\n",
            "test/KZCZ6G3O.png\n",
            "test/RFHN3G1R.png\n",
            "test/8OOR8MLK.png\n",
            "test/GHAGFONB.png\n",
            "test/ZV8D1P4A.png\n",
            "test/CN2PB45M.png\n",
            "test/5T4TME3M.png\n",
            "test/F955SWBV.png\n",
            "test/8K4SHS43.png\n",
            "test/EG2ROSZ5.png\n",
            "test/1OFZN3CU.png\n",
            "test/TKBJ3VP5.png\n",
            "test/J3BF4ZXY.png\n",
            "test/E08HNKRJ.png\n",
            "test/QFR7STYM.png\n",
            "test/XR00I2U7.png\n",
            "test/0VAWP3L8.png\n",
            "test/NEFRUU30.png\n",
            "test/7AERGO9A.png\n",
            "test/TEFGICLN.png\n",
            "test/H9Y17XYG.png\n",
            "test/T34I6GLI.png\n",
            "test/UP3V9PG5.png\n",
            "test/SQBOAFOK.png\n",
            "test/F860E9AT.png\n",
            "test/KEPUXV2M.png\n",
            "test/QE17W70K.png\n",
            "test/9T662RRM.png\n",
            "test/TEWAUAAY.png\n",
            "test/W40JHTOY.png\n",
            "test/TWD99QXR.png\n",
            "test/EPY31OBP.png\n",
            "test/0C96Z772.png\n",
            "test/WJQ8LYXF.png\n",
            "test/6MH4EX5A.png\n",
            "test/FPHNKCQD.png\n",
            "test/ZKA9FB8E.png\n",
            "test/9GCSNH9A.png\n",
            "test/Y1E9VG57.png\n",
            "test/R3ZH5AGS.png\n",
            "test/8GXGT4ZF.png\n",
            "test/MSW79LZH.png\n",
            "test/6R840PJQ.png\n",
            "test/HJCXB4PB.png\n",
            "test/V9J3X5G7.png\n",
            "test/QDYBCM5P.png\n",
            "test/O226AHUG.png\n",
            "test/KFMPHW5B.png\n",
            "test/FM5I1TN3.png\n",
            "test/3P18YUE9.png\n",
            "test/5ZVZNBSE.png\n",
            "test/7WQUPJPJ.png\n",
            "test/XMX5XKO3.png\n",
            "test/XB1XYPRU.png\n",
            "test/QF2D2ZEA.png\n",
            "test/TMMGL2YC.png\n",
            "test/PLVNF158.png\n",
            "test/QQ4YLZDN.png\n",
            "test/S1P3BI71.png\n",
            "test/1FDP4SV4.png\n",
            "test/H5WJDFL0.png\n",
            "test/LH1HULYL.png\n",
            "test/FQFWO9MY.png\n",
            "test/PGK6AWQ9.png\n",
            "test/4QM42XYW.png\n",
            "test/7LD7RY8T.png\n",
            "test/PUABA3BV.png\n",
            "test/H3H4OT5P.png\n",
            "test/9V3TPKMU.png\n",
            "test/THE68GVT.png\n",
            "test/4WGFQ34M.png\n",
            "test/63ICDZK2.png\n",
            "test/NIZYIKON.png\n",
            "test/19GXPZ49.png\n",
            "test/HA76TRN6.png\n",
            "test/ROTQ4YJ9.png\n",
            "test/1RYS9J5G.png\n",
            "test/CWCMKI05.png\n",
            "test/5V56QING.png\n",
            "test/LJPD35IG.png\n",
            "test/1O0MRWDH.png\n",
            "test/KW7WPHXG.png\n",
            "test/6A78ERE7.png\n",
            "test/BB98FJT4.png\n",
            "test/22SDX8DS.png\n",
            "test/WRMBGV1N.png\n",
            "test/M2NWWLY4.png\n",
            "test/PGVA0N7J.png\n",
            "test/TV93JIKA.png\n",
            "test/F6ZGTUCM.png\n",
            "test/EHW7OK57.png\n",
            "test/GAD3710Z.png\n",
            "test/MYNHAVDS.png\n",
            "test/PVWYD7TO.png\n",
            "test/RSR32A4B.png\n",
            "test/I337CE8O.png\n",
            "test/GHR6IYGK.png\n",
            "test/9J9QYTHQ.png\n",
            "test/ZWTZWPGL.png\n",
            "test/FX5JXIUF.png\n",
            "test/YW9CGI1L.png\n",
            "test/E7SZX4PX.png\n",
            "test/F66NZ6Y5.png\n",
            "test/FE5QFT8K.png\n",
            "test/CRNDZXXN.png\n",
            "test/MWB66D79.png\n",
            "test/AMFO1IQX.png\n",
            "test/XS8ZE17V.png\n",
            "test/Y1OFLTID.png\n",
            "test/Z05NFTIQ.png\n",
            "test/GQJM916R.png\n",
            "test/5HJYMQFN.png\n",
            "test/VXY66GBD.png\n",
            "test/Y6YL86GE.png\n",
            "test/GN58KQ19.png\n",
            "test/XJ8TD9SH.png\n",
            "test/KOUF5B66.png\n",
            "test/W15GZJOD.png\n",
            "test/ZXSZ1U7V.png\n",
            "test/ERGQVBV4.png\n",
            "test/AH6GJCDI.png\n",
            "test/8SU3XOLU.png\n",
            "test/N7F3M8AB.png\n",
            "test/GN47COBJ.png\n",
            "test/ZM0ECR30.png\n",
            "test/ONCPUEU6.png\n",
            "test/GS09BVZJ.png\n",
            "test/VNCA2SIF.png\n",
            "test/RFH9RJSI.png\n",
            "test/5N2BGV1A.png\n",
            "test/CV96IO2S.png\n",
            "test/OXGHY3QI.png\n",
            "test/HLDFLLAL.png\n",
            "test/LBVLWYCS.png\n",
            "test/9LU6YFWY.png\n",
            "test/S4VR0V0Q.png\n",
            "test/Y4O0AFN4.png\n",
            "test/ZDQC4362.png\n",
            "test/A5XOMJJI.png\n",
            "test/TZV7NDZF.png\n",
            "test/Z66L8LZJ.png\n",
            "test/9WXO2IFZ.png\n",
            "test/NDPJF7S4.png\n",
            "test/ZR7KOOVN.png\n",
            "test/27FY042Q.png\n",
            "test/A67PEAM0.png\n",
            "test/KEWVDFIF.png\n",
            "test/F941GAQ2.png\n",
            "test/0B1Q99FL.png\n",
            "test/E0GC43AX.png\n",
            "test/YDX7GJLG.png\n",
            "test/SFD35PN7.png\n",
            "test/YCHB5XWC.png\n",
            "test/GVF58QGO.png\n",
            "test/E4IOC0UZ.png\n",
            "test/1OQ3L09F.png\n",
            "test/CKW8Q2MF.png\n",
            "test/9J10EQV2.png\n",
            "test/ZS1P7V8T.png\n",
            "test/SKHCR08Z.png\n",
            "test/HTMZE9JV.png\n",
            "test/NKPBD3O5.png\n",
            "test/VWWUUHJB.png\n",
            "test/XHEI62OX.png\n",
            "test/AK0QCAJA.png\n",
            "test/B2DS88VC.png\n",
            "test/ZB2MUBUU.png\n",
            "test/GRGH1SAP.png\n",
            "test/4GYIE8MK.png\n",
            "test/D0JHS5Z2.png\n",
            "test/TGTFJQZK.png\n",
            "test/ZGVPMEFV.png\n",
            "test/UNZ9UKCD.png\n",
            "test/ZG8OC3G3.png\n",
            "test/G06P1VIL.png\n",
            "test/XSNXT2DY.png\n",
            "test/5LAUJVQI.png\n",
            "test/U9V4ZQFZ.png\n",
            "test/0SOJO99Q.png\n",
            "test/GOCOJKUV.png\n",
            "test/ULDJ3J2J.png\n",
            "test/Y6CGYA6M.png\n",
            "test/6Z0NSGH8.png\n",
            "test/FTSZ0MAO.png\n",
            "test/0IQ9KP95.png\n",
            "test/PFVAF8FE.png\n",
            "test/FJMN5BJX.png\n",
            "test/O8794KIC.png\n",
            "test/LOG9BDS2.png\n",
            "test/MSZOHW8D.png\n",
            "test/4X45ABMU.png\n",
            "test/KCZ8N5AG.png\n",
            "test/2BHVHBIE.png\n",
            "test/REJBC8V3.png\n",
            "test/1JCFNMPR.png\n",
            "test/NYTT3G2I.png\n",
            "test/CSA5BER2.png\n",
            "test/RC9YCHDP.png\n",
            "test/F02OWVDM.png\n",
            "test/19Y2ML4S.png\n",
            "test/3U06ZM96.png\n",
            "test/SJQUTCO6.png\n",
            "test/6QGOPL5P.png\n",
            "test/1JSEZCTN.png\n",
            "test/IJCIO1ZI.png\n",
            "test/45YEB1RM.png\n",
            "test/HQUXLOXJ.png\n",
            "test/SAJXAQUX.png\n",
            "test/4HZ5UXIJ.png\n",
            "test/MLFBN6OS.png\n",
            "test/A7SZU9N3.png\n",
            "test/GR3IUJ76.png\n",
            "test/MKY8AJY2.png\n",
            "test/HLA9KVNX.png\n",
            "test/TYOM8H0X.png\n",
            "test/Y2HKOBMJ.png\n",
            "test/1EYMJX9K.png\n",
            "test/RGKACZAA.png\n",
            "test/5VGV7KFR.png\n",
            "test/WT1SLEUN.png\n",
            "test/609833GW.png\n",
            "test/R6ZWKG41.png\n",
            "test/YNXO1SUA.png\n",
            "test/WVS4IQ9B.png\n",
            "test/4JAB7OX3.png\n",
            "test/SV4CXGYK.png\n",
            "test/ZK4ZMN29.png\n",
            "test/6SUIU2U3.png\n",
            "test/XF5PEW7P.png\n",
            "test/3TV8CXU2.png\n",
            "test/GJF6V2R7.png\n",
            "test/EC3OXFN9.png\n",
            "test/XSTRHHVP.png\n",
            "test/7XFXHXLP.png\n",
            "test/HS9W8QPT.png\n",
            "test/NU9LB8XS.png\n",
            "test/JOXK8EC2.png\n",
            "test/TYBFPIZ6.png\n",
            "test/Y8YCSDUT.png\n",
            "test/ZFPMY00L.png\n",
            "test/XNH4Z2CE.png\n",
            "test/B4H2WTPZ.png\n",
            "test/UPEV7EZZ.png\n",
            "test/31QI1WI0.png\n",
            "test/0K7TZ5JJ.png\n",
            "test/88QBFWGB.png\n",
            "test/RJ8TVHSC.png\n",
            "test/7W21SNIL.png\n",
            "test/1AZEVUCU.png\n",
            "test/SQQ4A592.png\n",
            "test/W5SRI74A.png\n",
            "test/4X4KI0II.png\n",
            "test/5MGURYOP.png\n",
            "test/42JDF4SJ.png\n",
            "test/UHBSA4U7.png\n",
            "test/PKSHSP9T.png\n",
            "test/4EG5Y6L3.png\n",
            "test/CWZ55JJ7.png\n",
            "test/P9OI7I37.png\n",
            "test/CGHMZYVC.png\n",
            "test/UFJ4RX9K.png\n",
            "test/AU50LL04.png\n",
            "test/RZ2R56H1.png\n",
            "test/0KZLNP0E.png\n",
            "test/6603VS8Y.png\n",
            "test/D2FT9VK1.png\n",
            "test/V1FBFP43.png\n",
            "test/7VYQUIYM.png\n",
            "test/DZMNJ7DH.png\n",
            "test/SH0M5Y7V.png\n",
            "test/2UO7X8PA.png\n",
            "test/LRFQT247.png\n",
            "test/HKUMDA5D.png\n",
            "test/3APF6Y2Y.png\n",
            "test/KJNVK5MQ.png\n",
            "test/3XM66XAY.png\n",
            "test/Q1PJHS2K.png\n",
            "test/HIEC03CW.png\n",
            "test/KDN1M6Q2.png\n",
            "test/7RIQG294.png\n",
            "test/TK3B6DVJ.png\n",
            "test/JC4FR0WT.png\n",
            "test/1GCY49BL.png\n",
            "test/5PV1RDUJ.png\n",
            "test/9HBEQ17Z.png\n",
            "test/2HA9SBJZ.png\n",
            "test/TXFZTSSW.png\n",
            "test/KW5WTE13.png\n",
            "test/P3IE3L1E.png\n",
            "test/0AFN5ZV5.png\n",
            "test/H43BJ8VE.png\n",
            "test/ATBA9TXT.png\n",
            "test/4ITVIR86.png\n",
            "test/C6LYK3CM.png\n",
            "test/WDRRDE5T.png\n",
            "test/NM568AJ0.png\n",
            "test/KAW466ZY.png\n",
            "test/L1NO9WZG.png\n",
            "test/65E9EMY0.png\n",
            "test/53IHQU8W.png\n",
            "test/AIQEJBF3.png\n",
            "test/KS03MB42.png\n",
            "test/EOKWQ1Y8.png\n",
            "test/K82KSBRZ.png\n",
            "test/ENLJC5PE.png\n",
            "test/2JNWPCQO.png\n",
            "test/BLLZIC1B.png\n",
            "test/RSX5C5F0.png\n",
            "test/5XXKP9FK.png\n",
            "test/REB4N7B0.png\n",
            "test/WT3KFMVX.png\n",
            "test/RQFAMQ7Q.png\n",
            "test/YNVU31RW.png\n",
            "test/G4LQ1XXJ.png\n",
            "test/I8CO2DTW.png\n",
            "test/4EYU1R9A.png\n",
            "test/ROHO7OSA.png\n",
            "test/DQE6WY68.png\n",
            "test/50GAN0R5.png\n",
            "test/FXN3MN5H.png\n",
            "test/J6AWQATJ.png\n",
            "test/XT6OG6W2.png\n",
            "test/DIHAQQ3P.png\n",
            "test/7CRKIILE.png\n",
            "test/VNL6NS9G.png\n",
            "test/EW0NMC7T.png\n",
            "test/38D6VLAW.png\n",
            "test/6XLMAGHI.png\n",
            "test/71IGLLIK.png\n",
            "test/LR84VNIE.png\n",
            "test/UZPXK5GE.png\n",
            "test/WTFL38GO.png\n",
            "test/ERFNM34V.png\n",
            "test/ZBFTUNTE.png\n",
            "test/78KIRLRJ.png\n",
            "test/0VM6GNNF.png\n",
            "test/EF40Y2BK.png\n",
            "test/KSQATTPW.png\n",
            "test/EUXQU81S.png\n",
            "test/6ERZL4SJ.png\n",
            "test/E2T7N6N5.png\n",
            "test/GAOI200V.png\n",
            "test/PD88YXOA.png\n",
            "test/NFL07FDH.png\n",
            "test/N86G1HZK.png\n",
            "test/AEX25DQR.png\n",
            "test/MEEWETAA.png\n",
            "test/APANI9NM.png\n",
            "test/0SSD08XC.png\n",
            "test/NK8BV1T6.png\n",
            "test/WATR0XYE.png\n",
            "test/SHUI96QS.png\n",
            "test/LU13UFSX.png\n",
            "test/W98ABM1I.png\n",
            "test/DTEBI8CP.png\n",
            "test/LEMSL7S0.png\n",
            "test/W6JMXIE2.png\n",
            "test/4QNU4SSY.png\n",
            "test/NM2YPP3S.png\n",
            "test/0GNGXM28.png\n",
            "test/FEUJHDUD.png\n",
            "test/C0Y01ZA7.png\n",
            "test/6KRHPY8H.png\n",
            "test/VG6ZHYYB.png\n",
            "test/T0VXWY5G.png\n",
            "test/NGK78SQE.png\n",
            "test/YHN5RCED.png\n",
            "test/WBPIU4OF.png\n",
            "test/R0K2BEVA.png\n",
            "test/8O5TYPRR.png\n",
            "test/X3YHE8G9.png\n",
            "test/CXBFP0A3.png\n",
            "test/7YUSF7WR.png\n",
            "test/RDLZAK51.png\n",
            "test/Y8XKVCHS.png\n",
            "test/KQRVK73I.png\n",
            "test/EQIT3IWY.png\n",
            "test/XMVCR5FX.png\n",
            "test/XE8HIX8C.png\n",
            "test/5CQKGJ1X.png\n",
            "test/QJK2O8S9.png\n",
            "test/SY2OWL4B.png\n",
            "test/JHDQ64SC.png\n",
            "test/CVSO4IWM.png\n",
            "test/ERUX82GT.png\n",
            "test/Y496C6FA.png\n",
            "test/W7IZMJ57.png\n",
            "test/IY7MEVBB.png\n",
            "test/3V6KF13B.png\n",
            "test/4OLSX1ZB.png\n",
            "test/8V5BN8AS.png\n",
            "test/PYHGXNJV.png\n",
            "test/DXNTKYER.png\n",
            "test/344V6F43.png\n",
            "test/IG5S4D6G.png\n",
            "test/LRI5SLHA.png\n",
            "test/WM4IDMDN.png\n",
            "test/YIVPWSW3.png\n",
            "test/6EIGARX9.png\n",
            "test/3HV3MYGM.png\n",
            "test/NFYJ3HJZ.png\n",
            "test/N0U2ZY9D.png\n",
            "test/REODPPH6.png\n",
            "test/5DNZJILM.png\n",
            "test/RAJI4HEY.png\n",
            "test/PML7ZJ5A.png\n",
            "test/HWWV2X5J.png\n",
            "test/YK21X94O.png\n",
            "test/MBFT15I0.png\n",
            "test/UWGVR9NY.png\n",
            "test/IAVUEKYA.png\n",
            "test/V5LZ6LVU.png\n",
            "test/0R61112H.png\n",
            "test/YJLUKMWO.png\n",
            "test/F7SD4MKH.png\n",
            "test/DDD4SLYD.png\n",
            "test/0UENFM0T.png\n",
            "test/LKOJ11IK.png\n",
            "test/LWQE018D.png\n",
            "test/NE8EI8L2.png\n",
            "test/OEVV19T9.png\n",
            "test/MVHLDA08.png\n",
            "test/4AFELH16.png\n",
            "test/K7XGSQ7V.png\n",
            "test/JRA2GZ4Q.png\n",
            "test/WD6IR21V.png\n",
            "test/2ARJM4V0.png\n",
            "test/417M4POV.png\n",
            "test/UJ4BCZ6R.png\n",
            "test/PODUJU9Z.png\n",
            "test/FJ1RZ3U4.png\n",
            "test/7Q9I3Z1X.png\n",
            "test/PB1KXNCM.png\n",
            "test/7ABYKUP0.png\n",
            "test/8PA1625S.png\n",
            "test/BKKMVLS5.png\n",
            "test/XMF3MAX0.png\n",
            "test/WX5N0MIT.png\n",
            "test/DTVZDD0O.png\n",
            "test/VXYNWVML.png\n",
            "test/75TI7G3F.png\n",
            "test/HALK8555.png\n",
            "test/E4RQ0C9J.png\n",
            "test/VIUSDELS.png\n",
            "test/6PXYETZ9.png\n",
            "test/1QSTYDT0.png\n",
            "test/U5R4P8NV.png\n",
            "test/KMOQLOR3.png\n",
            "test/WQFMKWFI.png\n",
            "test/VDPN3KVS.png\n",
            "test/41QVMCLG.png\n",
            "test/USZGIPW4.png\n",
            "test/TZ3XTX5Y.png\n",
            "test/113TM2OZ.png\n",
            "test/LSOLLT7G.png\n",
            "test/SHSUE8V8.png\n",
            "test/G57REWAX.png\n",
            "test/Z57S3OUS.png\n",
            "test/A1I29ITS.png\n",
            "test/3UTVZDRE.png\n",
            "test/RN8AKRKR.png\n",
            "test/3ZEEIUGO.png\n",
            "test/4UDFN2Q0.png\n",
            "test/I1CMXNT4.png\n",
            "test/GBLZPEY4.png\n",
            "test/FPF8VVYI.png\n",
            "test/QQKZAY8C.png\n",
            "test/T1KMSU18.png\n",
            "test/CCK6CRH5.png\n",
            "test/EZEPMIQQ.png\n",
            "test/E51GNSWH.png\n",
            "test/LOBE7HFP.png\n",
            "test/S8KC5APO.png\n",
            "test/ZRZULSW0.png\n",
            "test/KPQNVLH1.png\n",
            "test/X8V1MG4O.png\n",
            "test/BJ0OHQWT.png\n",
            "test/VXIM5WK0.png\n",
            "test/15ME2CT2.png\n",
            "test/U1A7I89R.png\n",
            "test/D890BYIO.png\n",
            "test/4XZKICS2.png\n",
            "test/KCIU2B2F.png\n",
            "test/95H02EXA.png\n",
            "test/NEA1PYH9.png\n",
            "test/V5U86JBI.png\n",
            "test/IATQDF0F.png\n",
            "test/5FAXBM0N.png\n",
            "test/9GGO466W.png\n",
            "test/PP4PGH4S.png\n",
            "test/UHHUMUOD.png\n",
            "test/UTTIKFDM.png\n",
            "test/MGFQXGK9.png\n",
            "test/BYOA5E3Y.png\n",
            "test/PSURR8GU.png\n",
            "test/SQMS9QJU.png\n",
            "test/1S7Y0Y66.png\n",
            "test/R5W18BW7.png\n",
            "test/BLVVYECY.png\n",
            "test/HK3EWDYD.png\n",
            "test/USC37IPN.png\n",
            "test/FQPF5GPT.png\n",
            "test/180ORPRB.png\n",
            "test/BPVD78KF.png\n",
            "test/1JSNI8RR.png\n",
            "test/X876D6HQ.png\n",
            "test/YB13QK71.png\n",
            "test/1PN9WZH0.png\n",
            "test/HSRFM6CG.png\n",
            "test/W7R3HFUK.png\n",
            "test/1EDIKOCH.png\n",
            "test/MERBFCWS.png\n",
            "test/RMA0XX6Z.png\n",
            "test/O6GNYV41.png\n",
            "test/5QR9TTEB.png\n",
            "test/DMPZKG16.png\n",
            "test/8KCH2BQJ.png\n",
            "test/1PSL9N9J.png\n",
            "test/NJRLE80Y.png\n",
            "test/VYZ8N8AM.png\n",
            "test/O9BU4QDR.png\n",
            "test/HOYXY4XE.png\n",
            "test/B2NTHQOV.png\n",
            "test/ALYTK9DJ.png\n",
            "test/Z2WN47VT.png\n",
            "test/5IFWAMJD.png\n",
            "test/F4BCIISH.png\n",
            "test/UUOKO7ZH.png\n",
            "test/D0706IDR.png\n",
            "test/XPM3J7QG.png\n",
            "test/3EX8HXKY.png\n",
            "test/X1OM3S0K.png\n",
            "test/9T6QIAZ2.png\n",
            "test/SDZ4B4LA.png\n",
            "test/7Y5MY1IM.png\n",
            "test/SSSW8JIA.png\n",
            "test/9OQO8DCU.png\n",
            "test/P7M7D7P5.png\n",
            "test/CFMH0ECC.png\n",
            "test/GFIK12GI.png\n",
            "test/W2ZJGJ9T.png\n",
            "test/0FDJUUT3.png\n",
            "test/EUGXNYPR.png\n",
            "test/VNPGWW9E.png\n",
            "test/QJPQIXPS.png\n",
            "test/CYGADT6F.png\n",
            "test/GUA1XK4U.png\n",
            "test/319AY5T7.png\n",
            "test/3JK0LAL6.png\n",
            "test/STB76XPJ.png\n",
            "test/ZOTHWY3V.png\n",
            "test/NRYSKLKU.png\n",
            "test/JEL62H3S.png\n",
            "test/6QJ9X8Z0.png\n",
            "test/2G194BII.png\n",
            "test/YCG5YAVQ.png\n",
            "test/PJXUYOV2.png\n",
            "test/Y044OCVH.png\n",
            "test/0J735KWI.png\n",
            "test/TW6DYZ3Y.png\n",
            "test/LW6P1FNV.png\n",
            "test/7RGA3R3B.png\n",
            "test/0PR1HR1N.png\n",
            "test/QAAYJ6OO.png\n",
            "test/6D0BYOLD.png\n",
            "test/PVTP59XA.png\n",
            "test/JZMZ6P7N.png\n",
            "test/YYU842LX.png\n",
            "test/20X76HIT.png\n",
            "test/D9TU7JBX.png\n",
            "test/BURKZYCO.png\n",
            "test/3Z1ODXID.png\n",
            "test/OXEH9HBP.png\n",
            "test/M7ET09KZ.png\n",
            "test/LSRTZ6AE.png\n",
            "test/EPT2UOAH.png\n",
            "test/67YIE0IX.png\n",
            "test/O1G8OCFL.png\n",
            "test/XVC1MAME.png\n",
            "test/UQ6VM68R.png\n",
            "test/HDFSMETI.png\n",
            "test/R0JG017M.png\n",
            "test/1XBH4L4I.png\n",
            "test/AQJV1ZLL.png\n",
            "test/HMOR3M4Y.png\n",
            "test/N3HTU3WU.png\n",
            "test/AN3TPH8D.png\n",
            "test/DTDSNWX6.png\n",
            "test/YCKXLKKH.png\n",
            "test/CRCEK26H.png\n",
            "test/30IHK1QR.png\n",
            "test/TGMN2AWR.png\n",
            "test/9RLGMPP6.png\n",
            "test/KA3SJRAL.png\n",
            "test/MSDZN9A2.png\n",
            "test/ACFZL14Z.png\n",
            "test/YP8K6EMN.png\n",
            "test/JHO7VBKK.png\n",
            "test/VQ0O1MHS.png\n",
            "test/48UW8KXP.png\n",
            "test/65Y08YZE.png\n",
            "test/W24VW01B.png\n",
            "test/9PF51RF2.png\n",
            "test/KQ0D0ER4.png\n",
            "test/SQEPZUAE.png\n",
            "test/OKOQCMZH.png\n",
            "test/1VXY73QX.png\n",
            "test/NWV01D66.png\n",
            "test/7FGCV4HN.png\n",
            "test/TI5UW382.png\n",
            "test/DWBGE2CK.png\n",
            "test/8SQRJ5RE.png\n",
            "test/4AGXH0ZY.png\n",
            "test/X7QXAFAV.png\n",
            "test/9B1HEG6Y.png\n",
            "test/KODTWP9B.png\n",
            "test/R3KH9I4M.png\n",
            "test/BYMPJOBL.png\n",
            "test/C58ZR6A0.png\n",
            "test/3ZQRU0H6.png\n",
            "test/52HTN5LS.png\n",
            "test/4MG4OAF2.png\n",
            "test/T318YY54.png\n",
            "test/1GKT5C6X.png\n",
            "test/PKYJLANT.png\n",
            "test/JKF0CCIQ.png\n",
            "test/MCYLT2IE.png\n",
            "test/E65888NI.png\n",
            "test/263HRY3W.png\n",
            "test/2FXAP61V.png\n",
            "test/00J6CTJ6.png\n",
            "test/DRUICDXR.png\n",
            "test/O78K3U0E.png\n",
            "test/82P5KA4S.png\n",
            "test/RNOAILT9.png\n",
            "test/DH2C21YL.png\n",
            "test/Y6MYW9KG.png\n",
            "test/FAOKO60F.png\n",
            "test/98AN6KWP.png\n",
            "test/5WFWCK5M.png\n",
            "test/GLLS6MHN.png\n",
            "test/1LU8FA17.png\n",
            "test/KV8YIMRY.png\n",
            "test/37G8V3C5.png\n",
            "test/RPIE60D4.png\n",
            "test/CA657NI5.png\n",
            "test/ABA3ZZIO.png\n",
            "test/BQIAL618.png\n",
            "test/NLRX3RGA.png\n",
            "test/ACCNR8ZJ.png\n",
            "test/WY0NCI5P.png\n",
            "test/D1T42S7O.png\n",
            "test/B07DVZQJ.png\n",
            "test/QOOXNPAU.png\n",
            "test/1J30PP4W.png\n",
            "test/4GH6EQEI.png\n",
            "test/X8MRPD1I.png\n",
            "test/9DYSJG3I.png\n",
            "test/BH0GURP4.png\n",
            "test/UIQ4S4DK.png\n",
            "test/OX2E1FO8.png\n",
            "test/TKGVTGGR.png\n",
            "test/BDL4VW9B.png\n",
            "test/B70LTF6W.png\n",
            "test/SOTIMYQO.png\n",
            "test/VMWYTCKD.png\n",
            "test/CEVG6H9D.png\n",
            "test/TABM60YK.png\n",
            "test/3PHF6QAP.png\n",
            "test/X45AMEJN.png\n",
            "test/3NWVMJWH.png\n",
            "test/KBLPO551.png\n",
            "test/IEEO30F0.png\n",
            "test/HUC64LWV.png\n",
            "test/Q9ZF8KS0.png\n",
            "test/NRFSKZP0.png\n",
            "test/VWEXE6QU.png\n",
            "test/0543S2ZJ.png\n",
            "test/QIYMSAHS.png\n",
            "test/RVPSVM5G.png\n",
            "test/ERSIBA9Y.png\n",
            "test/WBJVF4OS.png\n",
            "test/383GJBEX.png\n",
            "test/X39HPQLZ.png\n",
            "test/LW3TX1LK.png\n",
            "test/AINE637Z.png\n",
            "test/B9G10AX8.png\n",
            "test/LFBKT38C.png\n",
            "test/TW6VFL5D.png\n",
            "test/840WPGN4.png\n",
            "test/RKNMB5T7.png\n",
            "test/W4EPUZA8.png\n",
            "test/XIRFXGFX.png\n",
            "test/GP9UYZS2.png\n",
            "test/TPYRWZVV.png\n",
            "test/FZI8QLSJ.png\n",
            "test/RHNU5HZ3.png\n",
            "test/GS2OT7MQ.png\n",
            "test/8VOIC035.png\n",
            "test/IN1BOAHK.png\n",
            "test/HAD2QVZG.png\n",
            "test/WIX1P7GK.png\n",
            "test/8K54BXU5.png\n",
            "test/93NVOVUD.png\n",
            "test/8HDL1FW7.png\n",
            "test/SHAVMJEC.png\n",
            "test/L00M06BJ.png\n",
            "test/GF040LMM.png\n",
            "test/T8AKXUTG.png\n",
            "test/P38ZIJ4Q.png\n",
            "test/V4GLVKI5.png\n",
            "test/FXWJCZ30.png\n",
            "test/LZNKV02O.png\n",
            "test/0YGLIDPW.png\n",
            "test/DMQA9QYU.png\n",
            "test/U7881UE4.png\n",
            "test/SJNKTR61.png\n",
            "test/NTSVVNAW.png\n",
            "test/GV0YW8A1.png\n",
            "test/AI7ZA9Z7.png\n",
            "test/Q1IU319V.png\n",
            "test/VOTVV2VY.png\n",
            "test/JZ1QH7AR.png\n",
            "test/VYNKZAN2.png\n",
            "test/JHIR8KLE.png\n",
            "test/Y8PB6TNT.png\n",
            "test/2IFCQCOP.png\n",
            "test/OPWEMERA.png\n",
            "test/V59NWVL3.png\n",
            "test/FWTRYKH3.png\n",
            "test/GERTUHCA.png\n",
            "test/GY2FI2WE.png\n",
            "test/FQOM6C6E.png\n",
            "test/KP8UD0C2.png\n",
            "test/ISVKAC5V.png\n",
            "test/CSD6ALIF.png\n",
            "test/F7W1937E.png\n",
            "test/RW9IOQ3O.png\n",
            "test/8PEODYQL.png\n",
            "test/AJTM8ASP.png\n",
            "test/LTRBIBJR.png\n",
            "test/TQSABVHN.png\n",
            "test/57ROSBIQ.png\n",
            "test/QU1C2USD.png\n",
            "test/ICEGZLQU.png\n",
            "test/DP7MVFDJ.png\n",
            "test/TPZ3EP8M.png\n",
            "test/NW6PH4P2.png\n",
            "test/9P0NXMLS.png\n",
            "test/4IOWQQVN.png\n",
            "test/MLNB3GRD.png\n",
            "test/MA5OUBUG.png\n",
            "test/UC03UNPB.png\n",
            "test/7C51K599.png\n",
            "test/RMVKJ2O4.png\n",
            "test/0KKW56DP.png\n",
            "test/YYLSOS94.png\n",
            "test/V3HUNAUS.png\n",
            "test/I3Z1W5ZU.png\n",
            "test/537RI5LV.png\n",
            "test/P1EF6UFB.png\n",
            "test/GZ0JI6IN.png\n",
            "test/UC6KMZE9.png\n",
            "test/0ZDGAQ66.png\n",
            "test/CID5H9F1.png\n",
            "test/EIONOY4J.png\n",
            "test/7MTGZ33F.png\n",
            "test/2SUQIF9F.png\n",
            "test/XT1L8C8U.png\n",
            "test/4QWLQDTV.png\n",
            "test/PHI5VEGF.png\n",
            "test/E75R304A.png\n",
            "test/4TB0SD67.png\n",
            "test/4B24VTIS.png\n",
            "test/17VAWD6D.png\n",
            "test/JZG2DEIV.png\n",
            "test/J1LJWVZ8.png\n",
            "test/4CLMFB49.png\n",
            "test/6BGEUXQR.png\n",
            "test/205OPHJL.png\n",
            "test/EYTWSN2L.png\n",
            "test/V6NX1MTQ.png\n",
            "test/IKEL2Q6Q.png\n",
            "test/KZWBVVRB.png\n",
            "test/03KA7ID9.png\n",
            "test/W0MGZENZ.png\n",
            "test/8QT4EH91.png\n",
            "test/ASHQOTPT.png\n",
            "test/TZZC8N2T.png\n",
            "test/ALBMB8ER.png\n",
            "test/2490C0EH.png\n",
            "test/VIAZYXPB.png\n",
            "test/X030ER5B.png\n",
            "test/3HMTWEZH.png\n",
            "test/M7EXNJID.png\n",
            "test/FDKMUYSP.png\n",
            "test/VPT4TLKN.png\n",
            "test/7FHKBTSY.png\n",
            "test/SPR25482.png\n",
            "test/YAQPKB3P.png\n",
            "test/8W3M5082.png\n",
            "test/L16SZHYC.png\n",
            "test/RXEYS8RV.png\n",
            "test/N1MXCJR5.png\n",
            "test/R6PZ6VVO.png\n",
            "test/SOQVOSXP.png\n",
            "test/9O0IKO62.png\n",
            "test/4EHL5QKL.png\n",
            "test/8B7MKXUZ.png\n",
            "test/MUQWPXAK.png\n",
            "test/1CB3S6SE.png\n",
            "test/5M23VXW5.png\n",
            "test/62SQNJTO.png\n",
            "test/GUT1Z0E6.png\n",
            "test/F604ZPSC.png\n",
            "test/QS03Z6UU.png\n",
            "test/KGERABZH.png\n",
            "test/IGQ9LHD4.png\n",
            "test/4WLIWOWT.png\n",
            "test/1UTHR6BB.png\n",
            "test/RHD6UT3K.png\n",
            "test/1D40ML8F.png\n",
            "test/2JQV939I.png\n",
            "test/18JN5LLC.png\n",
            "test/OSHFOR5K.png\n",
            "test/SNM1S386.png\n",
            "test/LNQPU9FI.png\n",
            "test/UXFK6IQL.png\n",
            "test/ALVC9C52.png\n",
            "test/XWF6KIQU.png\n",
            "test/ZC5ECIN7.png\n",
            "test/FN8OP16Q.png\n",
            "test/ZGC3OLAS.png\n",
            "test/2SI197S6.png\n",
            "test/TJ2IAI73.png\n",
            "test/HINM2IRP.png\n",
            "test/4NXCDUS0.png\n",
            "test/HRYVZHOB.png\n",
            "test/C569CEJS.png\n",
            "test/10V61SLT.png\n",
            "test/1CSPCQ4M.png\n",
            "test/5LFW8HJC.png\n",
            "test/3KLH7HVX.png\n",
            "test/IWH9ZKSU.png\n",
            "test/VXN21UR9.png\n",
            "test/09VCYD6C.png\n",
            "test/PHLUVYBJ.png\n",
            "test/GWH06L1J.png\n",
            "test/RMEHUA7I.png\n",
            "test/O0GRASV5.png\n",
            "test/IAKPLIWR.png\n",
            "test/XTUHEZQN.png\n",
            "test/KXNFOAAE.png\n",
            "test/M1Z172TO.png\n",
            "test/KHKH82I4.png\n",
            "test/7KAVW5TN.png\n",
            "test/K1HN3U8Q.png\n",
            "test/L2T2R1BC.png\n",
            "test/WDSBMLTB.png\n",
            "test/1GB1P26C.png\n",
            "test/TK293IKA.png\n",
            "test/233Y1OLM.png\n",
            "test/6HYO4K3S.png\n",
            "test/GLJEJDV5.png\n",
            "test/6VYYL18V.png\n",
            "test/V8LU2SGV.png\n",
            "test/3R031Y5H.png\n",
            "test/9LH8ECSA.png\n",
            "test/ORVMY0LW.png\n",
            "test/JDDUODZ1.png\n",
            "test/TJG791IG.png\n",
            "test/R60F6GMK.png\n",
            "test/DPT2XHE4.png\n",
            "test/ZCQHRVOK.png\n",
            "test/OBDAGTLB.png\n",
            "test/YAYXCAWI.png\n",
            "test/BQVMKQWE.png\n",
            "test/9FMZ04RT.png\n",
            "test/KN9IPBR1.png\n",
            "test/DKJGX0AN.png\n",
            "test/EG058IYL.png\n",
            "test/8Y5DQIG7.png\n",
            "test/AQ84LNAQ.png\n",
            "test/HMIG9O5L.png\n",
            "test/DOATGE9T.png\n",
            "test/CJDVSMNO.png\n",
            "test/CDAH0OI7.png\n",
            "test/ZO322R4Q.png\n",
            "test/U3ATFJGI.png\n",
            "test/IU3LCAQG.png\n",
            "test/IT9OVRVT.png\n",
            "test/9VUJWVI0.png\n",
            "test/WKRN2EEY.png\n",
            "test/5XSQ5MJP.png\n",
            "test/AKF99O4Q.png\n",
            "test/WXTJP8EW.png\n",
            "test/HPU406YH.png\n",
            "test/XVU5FNTV.png\n",
            "test/E3GDH7V5.png\n",
            "test/5DJZAHOE.png\n",
            "test/KYCQGUEF.png\n",
            "test/61H23JWF.png\n",
            "test/Q7W6H5QE.png\n",
            "test/HIIZIARW.png\n",
            "test/7TXE7KS4.png\n",
            "test/TT3TXS6K.png\n",
            "test/4WZYMBTC.png\n",
            "test/IYFU8OWI.png\n",
            "test/Y57IZH6M.png\n",
            "test/UUUZKEHR.png\n",
            "test/29UX8GMZ.png\n",
            "test/RF3IHK2L.png\n",
            "test/OBYHB00C.png\n",
            "test/SROH7UNA.png\n",
            "test/VJQZKFD1.png\n",
            "test/Q58CDQTW.png\n",
            "test/YSMJLK18.png\n",
            "test/D51VDMB8.png\n",
            "test/P8SJPKXK.png\n",
            "test/DMY1BEN0.png\n",
            "test/1IZPXPN9.png\n",
            "test/0LPNHTSB.png\n",
            "test/I3RF4P12.png\n",
            "test/BNVBKTI8.png\n",
            "test/75M4NPQX.png\n",
            "test/368XHYZU.png\n",
            "test/XM445G6H.png\n",
            "test/UONOTLGZ.png\n",
            "test/8HMKNUDF.png\n",
            "test/XMHE25ME.png\n",
            "test/2236XNNK.png\n",
            "test/9YDW0HZJ.png\n",
            "test/NEVJAVKH.png\n",
            "test/Y24KUQCQ.png\n",
            "test/VZ90CIFO.png\n",
            "test/ISYKPQGU.png\n",
            "test/X3PQOFHE.png\n",
            "test/HJZ9J511.png\n",
            "test/0QFJJX9Y.png\n",
            "test/LU37KQZL.png\n",
            "test/TMFXGYSA.png\n",
            "test/WFQ1074P.png\n",
            "test/MU0S5OQJ.png\n",
            "test/WOZJ3FFV.png\n",
            "test/2R26FNMH.png\n",
            "test/UFKB255I.png\n",
            "test/7UKQRGT6.png\n",
            "test/6QP6YQBT.png\n",
            "test/JZP2Z8HY.png\n",
            "test/KQBICNWA.png\n",
            "test/J3WXCDPI.png\n",
            "test/0F8JN3RW.png\n",
            "test/GUMOJ8A8.png\n",
            "test/53TJDY8L.png\n",
            "test/A8X0TQUI.png\n",
            "test/FQQOTW1I.png\n",
            "test/AEOQ2743.png\n",
            "test/59P9P77R.png\n",
            "test/U906AFHF.png\n",
            "test/9IE28XLP.png\n",
            "test/UOC4V9HZ.png\n",
            "test/4TA4LY2A.png\n",
            "test/QWVXPG8E.png\n",
            "test/0EBV5UDU.png\n",
            "test/534O9IND.png\n",
            "test/LX21PCJJ.png\n",
            "test/C0228R73.png\n",
            "test/TTVJZYQ6.png\n",
            "test/DVESOV0C.png\n",
            "test/LP24EVV5.png\n",
            "test/X72GB7P7.png\n",
            "test/O942NVA3.png\n",
            "test/YS5WKWPY.png\n",
            "test/WIWG4QCT.png\n",
            "test/U2G44JKC.png\n",
            "test/GZGSORQH.png\n",
            "test/QJAMK4ZC.png\n",
            "test/KYTLWXMJ.png\n",
            "test/1MFZTPJ5.png\n",
            "test/6HWMKHV1.png\n",
            "test/J9WZT6SF.png\n",
            "test/I6QA7ACE.png\n",
            "test/X7JDLVMZ.png\n",
            "test/QNESUFVZ.png\n",
            "test/QME0Q7ND.png\n",
            "test/0YFFUI4H.png\n",
            "test/5WNSTGV9.png\n",
            "test/NJC5EOXO.png\n",
            "test/Y4LV9WZ0.png\n",
            "test/YVTIL8QG.png\n",
            "test/O5W5A5RY.png\n",
            "test/5GIHV655.png\n",
            "test/64WNSRC0.png\n",
            "test/2BU5I6MN.png\n",
            "test/ZZJ1YE0X.png\n",
            "test/KP2C8A03.png\n",
            "test/UV8KLKXO.png\n",
            "test/1KBXVX6T.png\n",
            "test/CCEP375J.png\n",
            "test/R25BQBEW.png\n",
            "test/EJTUBH4E.png\n",
            "test/1EPSLBGK.png\n",
            "test/0ELVTTLJ.png\n",
            "test/CYOI40ZD.png\n",
            "test/47K84DEM.png\n",
            "test/BXUBZKC4.png\n",
            "test/Q4SSGWU2.png\n",
            "test/ZZYISCEF.png\n",
            "test/WDUX4NYQ.png\n",
            "test/A8WMCM6F.png\n",
            "test/9RUKU5JA.png\n",
            "test/1GKIRSWF.png\n",
            "test/FDSE84SU.png\n",
            "test/Q9ECQBJK.png\n",
            "test/JLZV6LQK.png\n",
            "test/7PII4YXO.png\n",
            "test/XYLNEBTN.png\n",
            "test/SL2J03L9.png\n",
            "test/QTHJSB05.png\n",
            "test/A58V5E40.png\n",
            "test/YDX0X3NN.png\n",
            "test/KQE1E7BR.png\n",
            "test/85Q9TR0F.png\n",
            "test/2N81NQRX.png\n",
            "test/DH443ZLP.png\n",
            "test/GUKMINAJ.png\n",
            "test/QSE5BNAM.png\n",
            "test/952MI5UT.png\n",
            "test/AEFP9ETB.png\n",
            "test/UEFC32SF.png\n",
            "test/6MMGJRK1.png\n",
            "test/5LDLRY3F.png\n",
            "test/IHAOKR9C.png\n",
            "test/Y6P4NHGX.png\n",
            "test/RL54XM68.png\n",
            "test/WU0U8HES.png\n",
            "test/RPAUKBTZ.png\n",
            "test/EIR6SLX2.png\n",
            "test/BSMBMC5R.png\n",
            "test/0TWYKW1Z.png\n",
            "test/6IKJ2C43.png\n",
            "test/V3BVTI37.png\n",
            "test/NLF0UL8U.png\n",
            "test/A67J7UGV.png\n",
            "test/2QZDM0R3.png\n",
            "test/VBF4BZT5.png\n",
            "test/66BZO2BJ.png\n",
            "test/JGHMI5MS.png\n",
            "test/CLJV4YUY.png\n",
            "test/XGPU40WR.png\n",
            "test/BRAVW3RW.png\n",
            "test/NENN1Q06.png\n",
            "test/WYSL7V1E.png\n",
            "test/QZENM89M.png\n",
            "test/YPFMXYSP.png\n",
            "test/O5KJ485U.png\n",
            "test/B11QV5VU.png\n",
            "test/MWQORBLH.png\n",
            "test/7UKRF42F.png\n",
            "test/B3ZF00IL.png\n",
            "test/YE6W3F1Y.png\n",
            "test/BG8M16VU.png\n",
            "test/7CGKHG7C.png\n",
            "test/NCB0HTLW.png\n",
            "test/I5UVOSFS.png\n",
            "test/1BS292V2.png\n",
            "test/B2TUO7Q7.png\n",
            "test/ADQWLMGB.png\n",
            "test/MMINKMWI.png\n",
            "test/3VMB9PO3.png\n",
            "test/P8J4XRKG.png\n",
            "test/0NF9V7B1.png\n",
            "test/4QO26MW3.png\n",
            "test/QQ6AFU36.png\n",
            "test/QNP4BSZY.png\n",
            "test/YNYP8TJM.png\n",
            "test/AVJU1G9D.png\n",
            "test/LQ5UDWX9.png\n",
            "test/836UPAGY.png\n",
            "test/TSQ3L0YA.png\n",
            "test/E4I8ZBZH.png\n",
            "test/ZDZK6VWM.png\n",
            "test/L4YNFVUQ.png\n",
            "test/NBSUX0BA.png\n",
            "test/7DVA018L.png\n",
            "test/XE73UTGK.png\n",
            "test/KZ1M9B5W.png\n",
            "test/24U7U3AO.png\n",
            "test/WRLJHSAV.png\n",
            "test/1ML58ZRM.png\n",
            "test/T168EAMQ.png\n",
            "test/PAB1G86O.png\n",
            "test/EI6HDRH1.png\n",
            "test/886I7HE5.png\n",
            "test/933Z0KWB.png\n",
            "test/9MBSBBL7.png\n",
            "test/YG7RKP9Z.png\n",
            "test/07A36LI8.png\n",
            "test/Q4WGPJSA.png\n",
            "test/07G0C5EE.png\n",
            "test/WYDPWSN6.png\n",
            "test/NVY6ZZB0.png\n",
            "test/3XQGK83C.png\n",
            "test/BH4FLV4C.png\n",
            "test/YDTFU474.png\n",
            "test/UMMM4W0M.png\n",
            "test/752UW0OO.png\n",
            "test/ST08WZTQ.png\n",
            "test/X73PRPB0.png\n",
            "test/R7V0CIGV.png\n",
            "test/ZBFZXGWR.png\n",
            "test/PCNL43C4.png\n",
            "test/TG7EOXZ6.png\n",
            "test/4KB5FGHL.png\n",
            "test/AMVPE6CW.png\n",
            "test/OXN5BAJC.png\n",
            "test/HL0Q3VYT.png\n",
            "test/MWZ942O1.png\n",
            "test/YXRN9ZKU.png\n",
            "test/BC8J1XXF.png\n",
            "test/I5S56I9Y.png\n",
            "test/1ZPADL94.png\n",
            "test/F10Y3235.png\n",
            "test/GQRQJLE5.png\n",
            "test/X486I4TM.png\n",
            "test/CTRNZCKG.png\n",
            "test/BND13K4J.png\n",
            "test/VCGOPJ9A.png\n",
            "test/0J8ZY0VK.png\n",
            "test/DPJ88RBB.png\n",
            "test/4VV1WJ5Y.png\n",
            "test/KCSEE4PQ.png\n",
            "test/9CIFRS0C.png\n",
            "test/K0H73V6O.png\n",
            "test/4GE0EKNS.png\n",
            "test/458CSAXW.png\n",
            "test/B1PPKDXH.png\n",
            "test/8BXQSBDH.png\n",
            "test/PCL62IVK.png\n",
            "test/P9CAQJZC.png\n",
            "test/68CL6HL3.png\n",
            "test/VPHRZKZ9.png\n",
            "test/M6H9QW2G.png\n",
            "test/B5YA2PPX.png\n",
            "test/OVHU816L.png\n",
            "test/OWNURSUI.png\n",
            "test/JZYG9X4V.png\n",
            "test/LJRMD67L.png\n",
            "test/NJL7Q1TA.png\n",
            "test/NTBLLSJG.png\n",
            "test/WY9RB2NR.png\n",
            "test/A8D9O5YY.png\n",
            "test/AORZ85L6.png\n",
            "test/K8GW7AK9.png\n",
            "test/4BI3IR7P.png\n",
            "test/Y6L8KPK1.png\n",
            "test/CQ3WRHP3.png\n",
            "test/2PPS0TAN.png\n",
            "test/29YYMXSQ.png\n",
            "test/3QQ355RD.png\n",
            "test/APE19N8G.png\n",
            "test/0YINV6H8.png\n",
            "test/H02R0PQZ.png\n",
            "test/8PUEAXGB.png\n",
            "test/58Q78TH3.png\n",
            "test/AKFS3BE1.png\n",
            "test/HEBI15FU.png\n",
            "test/65N45CFU.png\n",
            "test/V6581PZY.png\n",
            "test/NS6DHFKK.png\n",
            "test/H4PEN6X4.png\n",
            "test/1SETICJQ.png\n",
            "test/IBD14DO2.png\n",
            "test/WWZ0JCKI.png\n",
            "test/F0WLQX7T.png\n",
            "test/4ARYOLP3.png\n",
            "test/AMWERXDC.png\n",
            "test/2XL4WUXD.png\n",
            "test/LMCWT5NS.png\n",
            "test/9DHREV93.png\n",
            "test/Y9459LY4.png\n",
            "test/OOLIQN93.png\n",
            "test/57K812D6.png\n",
            "test/EPN9BZAB.png\n",
            "test/F59YSIMI.png\n",
            "test/CIVR75WY.png\n",
            "test/HPENCR6I.png\n",
            "test/45NKT80Q.png\n",
            "test/601DDMCU.png\n",
            "test/0GFDLVW5.png\n",
            "test/E0BPJQTJ.png\n",
            "test/LXIE0YG8.png\n",
            "test/OJDL0QIU.png\n",
            "test/0NTCGGKJ.png\n",
            "test/4MR4RL8N.png\n",
            "test/E4KFXBBY.png\n",
            "test/YG8ZKI4P.png\n",
            "test/NVSRQ2VW.png\n",
            "test/M92A6JEY.png\n",
            "test/BQXRB93Z.png\n",
            "test/3JN12XQ5.png\n",
            "test/XSK7JX67.png\n",
            "test/IYZ43U6Z.png\n",
            "test/5501UZ8O.png\n",
            "test/JERKE5ML.png\n",
            "test/3QHLJXDD.png\n",
            "test/RHICBZGL.png\n",
            "test/S0C2GYLT.png\n",
            "test/BAPUIPN5.png\n",
            "test/3ZGM4JZ7.png\n",
            "test/39HZ4F4Q.png\n",
            "test/87X3C7YK.png\n",
            "test/MNHOK4A9.png\n",
            "test/TQJNBB5O.png\n",
            "test/XIKIGGI0.png\n",
            "test/YCCT3W7C.png\n",
            "test/F10SZ1M6.png\n",
            "test/0M5LL865.png\n",
            "test/JA5TQO63.png\n",
            "test/FZT6ULUO.png\n",
            "test/VC1LVL03.png\n",
            "test/CXEUKB25.png\n",
            "test/EP3U0NM7.png\n",
            "test/M82KA9EO.png\n",
            "test/V5FEWSNY.png\n",
            "test/VCCMXJOX.png\n",
            "test/8APZZCOC.png\n",
            "test/FDEJWJUI.png\n",
            "test/WJ7TVIPF.png\n",
            "test/ZPATN7V5.png\n",
            "test/MQGD6CJE.png\n",
            "test/7DQ5F4HP.png\n",
            "test/YCCZQJBW.png\n",
            "test/VRVWYVMM.png\n",
            "test/W4KGY34G.png\n",
            "test/D9NMRV8R.png\n",
            "test/65WQO4FO.png\n",
            "test/HIYPJNCQ.png\n",
            "test/E29WMU8G.png\n",
            "test/VGGVEU6T.png\n",
            "test/DQNOIEJI.png\n",
            "test/KN4S44B8.png\n",
            "test/HQPMTF4D.png\n",
            "test/D3JBNN7Y.png\n",
            "test/089YV089.png\n",
            "test/CZSFOUDC.png\n",
            "test/36818YMA.png\n",
            "test/T34OX8R6.png\n",
            "test/F5O3KT80.png\n",
            "test/2ZH8N5VX.png\n",
            "test/2KMJIN79.png\n",
            "test/FZOTUIWQ.png\n",
            "test/93CFOW5F.png\n",
            "test/DCQE5FBE.png\n",
            "test/RNNHIDM2.png\n",
            "test/7L1ULCCN.png\n",
            "test/DDD9SS0J.png\n",
            "test/1JTB9XEW.png\n",
            "test/AQXXK9MB.png\n",
            "test/PRBXGITI.png\n",
            "test/D1HY6WWJ.png\n",
            "test/EE59W5LL.png\n",
            "test/6SQIQMYM.png\n",
            "test/EWE5HK8K.png\n",
            "test/GMDIW4W4.png\n",
            "test/XP9X1BF2.png\n",
            "test/6SNSWQQK.png\n",
            "test/U1LJWF6B.png\n",
            "test/BRZYUZD1.png\n",
            "test/XA9Z1RTU.png\n",
            "test/71Y018PM.png\n",
            "test/VEMMWI8Z.png\n",
            "test/7LEKAS3Z.png\n",
            "test/HE1ZLE34.png\n",
            "test/QDG3AJAN.png\n",
            "test/CBGIVDK3.png\n",
            "test/KLUTTBOP.png\n",
            "test/63PEHCBW.png\n",
            "test/Y8JY1P0D.png\n",
            "test/WU4TRJ0C.png\n",
            "test/BITHZR4X.png\n",
            "test/KVWVZAWR.png\n",
            "test/W4P8N2FE.png\n",
            "test/DCZ48NDT.png\n",
            "test/3ZY3WI84.png\n",
            "test/1OHSZW0P.png\n",
            "test/2URRET13.png\n",
            "test/BBQB3LHL.png\n",
            "test/9XI8GX6T.png\n",
            "test/7B9FLZ8F.png\n",
            "test/0G511ZTP.png\n",
            "test/BORRPSV6.png\n",
            "test/IN8NSBBY.png\n",
            "test/KDEP3HSW.png\n",
            "test/G5RDB18S.png\n",
            "test/Y4WZEVGI.png\n",
            "test/9R1Z2VPD.png\n",
            "test/H1UVNVGY.png\n",
            "test/S534BHHP.png\n",
            "test/D5RR99R2.png\n",
            "test/28AJXKGN.png\n",
            "test/X2ZDS1RR.png\n",
            "test/NJF7OX8D.png\n",
            "test/SV05QS1J.png\n",
            "test/UX2TYCBH.png\n",
            "test/21S6KAR8.png\n",
            "test/EGX6PI7U.png\n",
            "test/Y0CER1PQ.png\n",
            "test/8E20RQD5.png\n",
            "test/XEDL34IY.png\n",
            "test/PXYO03RX.png\n",
            "test/9XH3LYYI.png\n",
            "test/DIPRX2H3.png\n",
            "test/O5HGY8IJ.png\n",
            "test/9O7XN1XG.png\n",
            "test/4II1P3R9.png\n",
            "test/MFFN81AC.png\n",
            "test/9R3S4JL7.png\n",
            "test/AFOMBHWM.png\n",
            "test/W1FD8UCR.png\n",
            "test/80O79ZOX.png\n",
            "test/5R5LG9YY.png\n",
            "test/EZKMCAW7.png\n",
            "test/THLFSV13.png\n",
            "test/LSJT4J07.png\n",
            "test/WVDRBOA9.png\n",
            "test/JLRVMCHF.png\n",
            "test/A3K4K9G3.png\n",
            "test/OEZ27R6R.png\n",
            "test/J87J7X5B.png\n",
            "test/3SC79C7H.png\n",
            "test/IGTU9CTD.png\n",
            "test/H2VYZVRG.png\n",
            "test/G6KM9YFV.png\n",
            "test/03JU8VX8.png\n",
            "test/LRCMR0AS.png\n",
            "test/FRRPRC1A.png\n",
            "test/57XWLXWC.png\n",
            "test/NNQEJ815.png\n",
            "test/B4003R7S.png\n",
            "test/509SPO5T.png\n",
            "test/IY7PPE69.png\n",
            "test/E6I2NPKC.png\n",
            "test/TX3AH4QA.png\n",
            "test/IYO1FNTL.png\n",
            "test/EVMNO2JT.png\n",
            "test/DWSWZK57.png\n",
            "test/5QEOPTGN.png\n",
            "test/U1MJ9EZN.png\n",
            "test/F3385KY4.png\n",
            "test/Z4JFH7L2.png\n",
            "test/UCZTBBJX.png\n",
            "test/ZE8JQW6E.png\n",
            "test/7NC9NK9K.png\n",
            "test/HAC5SBJN.png\n",
            "test/2L2L4NPE.png\n",
            "test/Y2CSJ51F.png\n",
            "test/IGPCOIBN.png\n",
            "test/DIDKS5CD.png\n",
            "test/B7EL9HO9.png\n",
            "test/QC9NP4BT.png\n",
            "test/MD3XLVUZ.png\n",
            "test/ETUV16F1.png\n",
            "test/PNE35B65.png\n",
            "test/L3N1YEDX.png\n",
            "test/AF8L6RSM.png\n",
            "test/CV8OY21H.png\n",
            "test/ZRMC1T0M.png\n",
            "test/868C9BLV.png\n",
            "test/V73URR7M.png\n",
            "test/J7F42Z6I.png\n",
            "test/SXZQ8HZT.png\n",
            "test/XLOIZLN5.png\n",
            "test/HQANPYW9.png\n",
            "test/ETETMS2P.png\n",
            "test/CL1TFH3B.png\n",
            "test/3XRY48ZP.png\n",
            "test/3W7D8WT3.png\n",
            "test/1OTNM2T2.png\n",
            "test/RJDXCBOI.png\n",
            "test/FML5BVP0.png\n",
            "test/MKDSXQ4S.png\n",
            "test/J2KZ402V.png\n",
            "test/E1H5MQ3Y.png\n",
            "test/5WGRJ9DA.png\n",
            "test/SC99BAH6.png\n",
            "test/8CJ86H68.png\n",
            "test/7CQNNCM3.png\n",
            "test/E5I5U62R.png\n",
            "test/9ZAL22BF.png\n",
            "test/2MDSUYAR.png\n",
            "test/L1SAF6F5.png\n",
            "test/SO4Y0RPP.png\n",
            "test/TO5O5O0W.png\n",
            "test/X24KVWTJ.png\n",
            "test/2QLIKHLE.png\n",
            "test/LKJHUJQ2.png\n",
            "test/2PHF3RCN.png\n",
            "test/NY4YU4OX.png\n",
            "test/CTGXON8M.png\n",
            "test/CFOK2AGV.png\n",
            "test/P7HYPC44.png\n",
            "test/1I745RPP.png\n",
            "test/D11XBFB7.png\n",
            "test/A45MIJL8.png\n",
            "test/4DVAE833.png\n",
            "test/RYAHC39W.png\n",
            "test/GAK56N6S.png\n",
            "test/XDYZMG9N.png\n",
            "test/15DG55LO.png\n",
            "test/JCN7Z3DL.png\n",
            "test/40C38Z08.png\n",
            "test/VQHVFX4K.png\n",
            "test/3HFUK3MH.png\n",
            "test/4YAJ2ZR6.png\n",
            "test/2P5478RR.png\n",
            "test/P5UJSRNM.png\n",
            "test/08Y94B5H.png\n",
            "test/1DLERTMO.png\n",
            "test/MQ18N7Z7.png\n",
            "test/LWMDU9GA.png\n",
            "test/FDNILULW.png\n",
            "test/KZKKWU4I.png\n",
            "test/LJNEK6OB.png\n",
            "test/8A8N2H5E.png\n",
            "test/D1QZ6D42.png\n",
            "test/J22BR4ZK.png\n",
            "test/WE8WK6F1.png\n",
            "test/AL8MOSRW.png\n",
            "test/4AF02WV6.png\n",
            "test/Y88FHTID.png\n",
            "test/KBYXIV8E.png\n",
            "test/L86MPPOG.png\n",
            "test/J6W8KDL4.png\n",
            "test/KTCPN24Y.png\n",
            "test/UA6QQUF9.png\n",
            "test/G8OGQC3Y.png\n",
            "test/MX23FZ3X.png\n",
            "test/HBB8YTJV.png\n",
            "test/A6DKGFAL.png\n",
            "test/CL22HUJP.png\n",
            "test/PK2WGCU4.png\n",
            "test/U6PDSW8B.png\n",
            "test/CLYY4MF8.png\n",
            "test/SCXCNZND.png\n",
            "test/PNCKRTHK.png\n",
            "test/88EJFJT7.png\n",
            "test/9R236ORJ.png\n",
            "test/ZD7VGQ2Q.png\n",
            "test/QT0DS3H8.png\n",
            "test/NO80UB4F.png\n",
            "test/6FFI935K.png\n",
            "test/6R2Y5ZVN.png\n",
            "test/BFTS7O8C.png\n",
            "test/OLW6LGMR.png\n",
            "test/CH11R9MM.png\n",
            "test/5IQEWA8F.png\n",
            "test/YJ83RVD5.png\n",
            "test/L3DSR0C5.png\n",
            "test/8RS9M021.png\n",
            "test/ZG74CYGA.png\n",
            "test/I5QU7R8C.png\n",
            "test/OBEZ1EWZ.png\n",
            "test/C7X5LERQ.png\n",
            "test/KUWAOYH7.png\n",
            "test/4KPUFM8L.png\n",
            "test/IXWF2M16.png\n",
            "test/05Z2GRV3.png\n",
            "test/C9XJE6OI.png\n",
            "test/MHUJKFLF.png\n",
            "test/IPPB2AU8.png\n",
            "test/NNF8PHH4.png\n",
            "test/YIISF6K0.png\n",
            "test/OCXTLM4N.png\n",
            "test/9X5KVMBU.png\n",
            "test/XC093J56.png\n",
            "test/CVNJLF43.png\n",
            "test/HQ0210JF.png\n",
            "test/FKKDRYYE.png\n",
            "test/QGUY6N6U.png\n",
            "test/4603HXUY.png\n",
            "test/77HHNM5G.png\n",
            "test/HXUO307J.png\n",
            "test/65YFM5RC.png\n",
            "test/9OODMRSO.png\n",
            "test/7FB4GPBW.png\n",
            "test/J4N384JK.png\n",
            "test/1X73L1Y6.png\n",
            "test/IIG12E3H.png\n",
            "test/GHPD39GG.png\n",
            "test/8PJYCN81.png\n",
            "test/K8J4V7AG.png\n",
            "test/HC2F4AH8.png\n",
            "test/ML2RO4TZ.png\n",
            "test/C5SOMALF.png\n",
            "test/YM18KQ8Q.png\n",
            "test/4IL6J3Y8.png\n",
            "test/QIEK1JSG.png\n",
            "test/UY2XWCRZ.png\n",
            "test/FVCP3NDL.png\n",
            "test/J3017Z87.png\n",
            "test/Q3OGB19K.png\n",
            "test/KR0DMJJX.png\n",
            "test/36RDLPMU.png\n",
            "test/F4CKJ5TA.png\n",
            "test/2A97I9D7.png\n",
            "test/R20SXK9A.png\n",
            "test/RQ0F2HWQ.png\n",
            "test/J8ZTVCNY.png\n",
            "test/36SHQV9H.png\n",
            "test/LTFB0D3D.png\n",
            "test/6P4R7FZQ.png\n",
            "test/82F3PESD.png\n",
            "test/DL5I3HYK.png\n",
            "test/ELMOG2HU.png\n",
            "test/IQ33O6QO.png\n",
            "test/CRHY5LQ0.png\n",
            "test/JIS2HF8C.png\n",
            "test/X301GFNH.png\n",
            "test/NL7OCL3Q.png\n",
            "test/PS1NP7FQ.png\n",
            "test/5RWYM60M.png\n",
            "test/Y9JXYWFD.png\n",
            "test/B5TE7R4N.png\n",
            "test/FUVE870U.png\n",
            "test/801AMRUS.png\n",
            "test/7UT1NXIW.png\n",
            "test/SDYEYUYQ.png\n",
            "test/VKT1WIPH.png\n",
            "test/O65XAJBQ.png\n",
            "test/ZO5U4JBV.png\n",
            "test/2T4L3YMM.png\n",
            "test/YV7IO2IZ.png\n",
            "test/4OBNZA9S.png\n",
            "test/8EZADR2Z.png\n",
            "test/CS5QAL5O.png\n",
            "test/KAH45NEF.png\n",
            "test/6VWLXR1U.png\n",
            "test/S9G9XMFP.png\n",
            "test/04VF78BE.png\n",
            "test/8PSV54XV.png\n",
            "test/0HNRB77O.png\n",
            "test/0RXDDZFE.png\n",
            "test/UAXAQGL0.png\n",
            "test/TVAQ86ZW.png\n",
            "test/37ZSRXXA.png\n",
            "test/2G4LNW2C.png\n",
            "test/FV79MRBP.png\n",
            "test/YVHVOOWH.png\n",
            "test/ZD7NPJ85.png\n",
            "test/NVZI880K.png\n",
            "test/K2BJUUBW.png\n",
            "test/HK155WS4.png\n",
            "test/KACAY2JQ.png\n",
            "test/VPSI0CEV.png\n",
            "test/MOODSHO2.png\n",
            "test/9TZ2FRU0.png\n",
            "test/7BJ59S25.png\n",
            "test/4FURVPU4.png\n",
            "test/PL6DDLV8.png\n",
            "test/4FUUM0LW.png\n",
            "test/BD1XIOLY.png\n",
            "test/BBCFR7V9.png\n",
            "test/9PXS3A85.png\n",
            "test/IL81RILT.png\n",
            "test/O2ADBK2B.png\n",
            "test/1UC19KBT.png\n",
            "test/5TBIMN6F.png\n",
            "test/2PJ5C3GJ.png\n",
            "test/4VIYXVLW.png\n",
            "test/SRTFTFEQ.png\n",
            "test/0MBHGC19.png\n",
            "test/04CK8NU2.png\n",
            "test/20HGK0Y8.png\n",
            "test/SV82JM0C.png\n",
            "test/G80KRTB6.png\n",
            "test/PEXXTS5J.png\n",
            "test/RJ610JW0.png\n",
            "test/PIX9UJ7A.png\n",
            "test/VZH4IWHA.png\n",
            "test/Q0ANB8DV.png\n",
            "test/2KQ756OU.png\n",
            "test/C00448OP.png\n",
            "test/CLRR0IDB.png\n",
            "test/RSYXEA47.png\n",
            "test/ORKYBGW5.png\n",
            "test/U4E37NVC.png\n",
            "test/JQJNRK8Q.png\n",
            "test/6OA6PFAR.png\n",
            "test/AR8YBKEB.png\n",
            "test/JH6H00NC.png\n",
            "test/IHHUUNUM.png\n",
            "test/6ARZFZO1.png\n",
            "test/0FS97PDP.png\n",
            "test/108KYSON.png\n",
            "test/DWQ8W745.png\n",
            "test/PGH0478C.png\n",
            "test/C5BJ8Z6H.png\n",
            "test/JK9JAVU6.png\n",
            "test/IB9OGVBS.png\n",
            "test/HURTIUCO.png\n",
            "test/CVUOI0JN.png\n",
            "test/KWOFU4QZ.png\n",
            "test/ZPARDC2G.png\n",
            "test/SBSPZQIQ.png\n",
            "test/WAR02Q4Z.png\n",
            "test/VA6XF9WO.png\n",
            "test/35TYD4B5.png\n",
            "test/7BMU3CBP.png\n",
            "test/K5J4Y8LW.png\n",
            "test/LPY6OYGG.png\n",
            "test/1UHO7LTS.png\n",
            "test/B95TGRP3.png\n",
            "test/T9PH1L1V.png\n",
            "test/XSIWJIHQ.png\n",
            "test/TK0G5BR8.png\n",
            "test/WDV65LJQ.png\n",
            "test/KVUBT1N0.png\n",
            "test/NZW1KWPA.png\n",
            "test/G3TG7CEV.png\n",
            "test/5AFVI99L.png\n",
            "test/BIE9Z8AT.png\n",
            "test/ZJ0JGOR2.png\n",
            "test/N88U6JWC.png\n",
            "test/7HF8ZMBE.png\n",
            "test/KSY5W4LP.png\n",
            "test/YMP26N64.png\n",
            "test/DZO37B59.png\n",
            "test/EH9A7WC2.png\n",
            "test/K3GIZHPG.png\n",
            "test/XDWXPC03.png\n",
            "test/H8JM4FGU.png\n",
            "test/SGQHH463.png\n",
            "test/OLZ5932J.png\n",
            "test/274MLIPD.png\n",
            "test/GYVEL9US.png\n",
            "test/X4KD09RH.png\n",
            "test/73HL9GP7.png\n",
            "test/HKVCCK0K.png\n",
            "test/LLUCVUA1.png\n",
            "test/ULWYN12J.png\n",
            "test/B8L3RY5A.png\n",
            "test/04H80B5R.png\n",
            "test/JHLTD4JP.png\n",
            "test/85POI7GP.png\n",
            "test/EHW26CRS.png\n",
            "test/RJ9MZWOC.png\n",
            "test/Q8KQVRN6.png\n",
            "test/G0ZFMHFS.png\n",
            "test/X1SIP9PP.png\n",
            "test/0JKI08G9.png\n",
            "test/CDZP1TZO.png\n",
            "test/57KMQK62.png\n",
            "test/O4C5G4ZT.png\n",
            "test/J7QNP43U.png\n",
            "test/8TEXV5ZI.png\n",
            "test/V2GR1DWU.png\n",
            "test/MNXBGYQY.png\n",
            "test/5SZ42V73.png\n",
            "test/0UVXSNXN.png\n",
            "test/JBXL00KX.png\n",
            "test/265T6MQO.png\n",
            "test/PX4NM1K2.png\n",
            "test/RYJLP38F.png\n",
            "test/1IY034NS.png\n",
            "test/L1YWZSMT.png\n",
            "test/8THOKP1J.png\n",
            "test/4OG0WAXB.png\n",
            "test/DS1LZ8SI.png\n",
            "test/F1L29LHQ.png\n",
            "test/4AZFRACH.png\n",
            "test/ZKOT5165.png\n",
            "test/1IEGTFVQ.png\n",
            "test/797TJPH8.png\n",
            "test/4803KWM6.png\n",
            "test/6UH5CVOH.png\n",
            "test/99PODU4N.png\n",
            "test/T2FADGFZ.png\n",
            "test/1OS47YB0.png\n",
            "test/RS61J9LQ.png\n",
            "test/ZIM12AQ8.png\n",
            "test/OLE3HU1B.png\n",
            "test/CREWCYCG.png\n",
            "test/4PCGEWN1.png\n",
            "test/DJK61MYA.png\n",
            "test/HWTRS1S3.png\n",
            "test/LIDKVFNR.png\n",
            "test/C98V8J5S.png\n",
            "test/VIJYSBVU.png\n",
            "test/U6SVL20G.png\n",
            "test/UX4BW1PA.png\n",
            "test/RLHGGQ0O.png\n",
            "test/IDFXGXQJ.png\n",
            "test/2Y20CQHQ.png\n",
            "test/23QCNBLX.png\n",
            "test/O4D1U2VK.png\n",
            "test/TZFZODC4.png\n",
            "test/LEF7CIO1.png\n",
            "test/1HMM5COF.png\n",
            "test/GR0XEF1K.png\n",
            "test/3VXG8GQX.png\n",
            "test/HJDMXZF7.png\n",
            "test/TB8PFENJ.png\n",
            "test/CO708R16.png\n",
            "test/AH84KHQG.png\n",
            "test/SVJ51WTT.png\n",
            "test/M8KXZ3N2.png\n",
            "test/ZW28O9D4.png\n",
            "test/A4YD5GLF.png\n",
            "test/J76GA8B7.png\n",
            "test/ZXBQGY0V.png\n",
            "test/ZCVBT82E.png\n",
            "test/6RU970PJ.png\n",
            "test/QG8J31Y1.png\n",
            "test/N3RR4GCG.png\n",
            "test/5XB67VXL.png\n",
            "test/MOG8D5XW.png\n",
            "test/MEZIGAO1.png\n",
            "test/22A96GLS.png\n",
            "test/Y50RRQGS.png\n",
            "test/NHIDYWEZ.png\n",
            "test/S7ABPDKS.png\n",
            "test/H8O09RIY.png\n",
            "test/9KLLD9W6.png\n",
            "test/IIWQAAZ5.png\n",
            "test/4JLMPA8G.png\n",
            "test/UUZ86XHN.png\n",
            "test/5MB6QIWE.png\n",
            "test/KANTF11J.png\n",
            "test/YT4JTJ9S.png\n",
            "test/Z19X2Z9L.png\n",
            "test/7Q016NOY.png\n",
            "test/EV8PBUWE.png\n",
            "test/PC4XD9AH.png\n",
            "test/RBV9JM9K.png\n",
            "test/XSJO0LXZ.png\n",
            "test/P30G4B66.png\n",
            "test/9XDOEV5K.png\n",
            "test/5H76N93Y.png\n",
            "test/QWE4EJ2V.png\n",
            "test/N9BOYQZ8.png\n",
            "test/RCORE0ZJ.png\n",
            "test/8NS1PWS9.png\n",
            "test/JWXOIYP4.png\n",
            "test/3M2SSLIC.png\n",
            "test/JK44LWCI.png\n",
            "test/M5C1AV16.png\n",
            "test/RFUKDB6I.png\n",
            "test/3UAIHPSX.png\n",
            "test/QMGWRMC4.png\n",
            "test/9TNV1BI8.png\n",
            "test/DWDBMNPF.png\n",
            "test/9IO9XKAM.png\n",
            "test/MGN1HWGG.png\n",
            "test/CIFKLGF2.png\n",
            "test/R34L1N6X.png\n",
            "test/8TX903JT.png\n",
            "test/2WXIN9M5.png\n",
            "test/SHT5EQJV.png\n",
            "test/I1ZYQR3P.png\n",
            "test/G4TLTXF6.png\n",
            "test/A549PFC8.png\n",
            "test/6ROYQX1H.png\n",
            "test/6C6Q7424.png\n",
            "test/SP5X5VXF.png\n",
            "test/0XJFRHHC.png\n",
            "test/RFUFC5BM.png\n",
            "test/EPVMRLHY.png\n",
            "test/KGTX95LT.png\n",
            "test/FAYU6LWK.png\n",
            "test/GI7EEL7I.png\n",
            "test/BGR9ON0T.png\n",
            "test/8JESZMME.png\n",
            "test/9L2EI1ZC.png\n",
            "test/XVRL7OP5.png\n",
            "test/V5DN81XB.png\n",
            "test/PEZCTUCX.png\n",
            "test/U1VZUVJJ.png\n",
            "test/GW590DDR.png\n",
            "test/MTSJFXL6.png\n",
            "test/IL3TC4ZC.png\n",
            "test/4T9I1D20.png\n",
            "test/262N1CP0.png\n",
            "test/PIT8D6YL.png\n",
            "test/CDX0UN9L.png\n",
            "test/LJAT95JN.png\n",
            "test/LX317H0M.png\n",
            "test/T24TAVVT.png\n",
            "test/3KNZMFPC.png\n",
            "test/NVJPAODR.png\n",
            "test/L6ZIIFFN.png\n",
            "test/NQJ0W6MW.png\n",
            "test/P3ITW21N.png\n",
            "test/CEXHYFQW.png\n",
            "test/4IYC4DB3.png\n",
            "test/OPAAU3IV.png\n",
            "test/R2XZ79NH.png\n",
            "test/XZVK8J1B.png\n",
            "test/5KP72RR4.png\n",
            "test/X6293793.png\n",
            "test/6SHIWMVP.png\n",
            "test/1GRXMXXS.png\n",
            "test/8IHZFDSF.png\n",
            "test/D38TG83U.png\n",
            "test/83CBF9G9.png\n",
            "test/MYT0Z6EV.png\n",
            "test/T2WRH9PS.png\n",
            "test/QC8HTM4N.png\n",
            "test/KBG38NGK.png\n",
            "test/XLSDG0UT.png\n",
            "test/UX8RC4K7.png\n",
            "test/L0ATPUNN.png\n",
            "test/BAVZ6NMZ.png\n",
            "test/181QFED0.png\n",
            "test/62JOO1D9.png\n",
            "test/H65UND7G.png\n",
            "test/ZKM63Q1W.png\n",
            "test/EJV6AT6B.png\n",
            "test/2DDJO6WC.png\n",
            "test/QPSJWBJQ.png\n",
            "test/PN5JY0UQ.png\n",
            "test/630BSWFW.png\n",
            "test/GH8OE0KB.png\n",
            "test/A17UP4EQ.png\n",
            "test/2I9IV8QK.png\n",
            "test/LISKAUL2.png\n",
            "test/JAN47JSG.png\n",
            "test/2F84XLDQ.png\n",
            "test/VF1E1CDG.png\n",
            "test/28AF667G.png\n",
            "test/XEK7OZWO.png\n",
            "test/3J1H0HBK.png\n",
            "test/K2HN65XJ.png\n",
            "test/C7X9LTKD.png\n",
            "test/ZRHLSK2G.png\n",
            "test/9O9DZV3Q.png\n",
            "test/IQZW81FS.png\n",
            "test/0LS6G5M4.png\n",
            "test/YMLIXO8F.png\n",
            "test/1Q8SGWGB.png\n",
            "test/CCBUOSEE.png\n",
            "test/G7EYJFS2.png\n",
            "test/QBIBD2SN.png\n",
            "test/4ESW1DPN.png\n",
            "test/05LDA231.png\n",
            "test/BQIGL101.png\n",
            "test/7Y53UO4F.png\n",
            "test/PHUY7P55.png\n",
            "test/QTJI04UK.png\n",
            "test/0ED4NOU8.png\n",
            "test/47KA3VUR.png\n",
            "test/72D6RH56.png\n",
            "test/CDZLO8O4.png\n",
            "test/0BSHCC3U.png\n",
            "test/XRYW2M1C.png\n",
            "test/BEXR4Q09.png\n",
            "test/BVIIV3KN.png\n",
            "test/M0F1RF7U.png\n",
            "test/GAYFYY5L.png\n",
            "test/R65P9WQX.png\n",
            "test/SKPOSHO9.png\n",
            "test/CS0YMDY1.png\n",
            "test/YHLWZ2KC.png\n",
            "test/GT17Y1F3.png\n",
            "test/TNBJQLWX.png\n",
            "test/UMI7U0RH.png\n",
            "test/AP2JT9BN.png\n",
            "test/LYOENZ8P.png\n",
            "test/MNPKSF4Q.png\n",
            "test/190WJPF9.png\n",
            "test/3RPTDT8M.png\n",
            "test/KOV901SG.png\n",
            "test/1BAQO59H.png\n",
            "test/2OS9BMDC.png\n",
            "test/3Y320QWC.png\n",
            "test/2N7U86PI.png\n",
            "test/3UKKDHF8.png\n",
            "test/JFCYYM0R.png\n",
            "test/JSKIW3F1.png\n",
            "test/79G9HK2P.png\n",
            "test/5SAAHXH4.png\n",
            "test/BOL1DNIH.png\n",
            "test/HI3Z4KUN.png\n",
            "test/YI1NTNOL.png\n",
            "test/2UA4NYWZ.png\n",
            "test/EIJRZFDO.png\n",
            "test/1D8ZJU5R.png\n",
            "test/IA3GD9TF.png\n",
            "test/3SK5K7H3.png\n",
            "test/4L0R452D.png\n",
            "test/D8UBQK3O.png\n",
            "test/046GQHF0.png\n",
            "test/TOUERW47.png\n",
            "test/GA68GN9P.png\n",
            "test/1B4G64TX.png\n",
            "test/K3ZUXB55.png\n",
            "test/1KCINENG.png\n",
            "test/P2ROAN97.png\n",
            "test/RELY4UM0.png\n",
            "test/8ZFRBAQP.png\n",
            "test/EPJ1S5R8.png\n",
            "test/IY6ENPEN.png\n",
            "test/HSWEZV1K.png\n",
            "test/WLLRM6DH.png\n",
            "test/8BNN9LIO.png\n",
            "test/3744PMEY.png\n",
            "test/BSTZTT8K.png\n",
            "test/AY0NGPGO.png\n",
            "test/HK2ZQCT0.png\n",
            "test/D299HXJG.png\n",
            "test/NM8B2KTS.png\n",
            "test/LZZTF01S.png\n",
            "test/5SERDD21.png\n",
            "test/ACASM8JW.png\n",
            "test/FAPIADPC.png\n",
            "test/90WHUNQT.png\n",
            "test/ALVBQ714.png\n",
            "test/X2CS1L8H.png\n",
            "test/FIRABHP0.png\n",
            "test/E75XBPZY.png\n",
            "test/D62N984Q.png\n",
            "test/HQPORHY1.png\n",
            "test/36XOJQ05.png\n",
            "test/LWLHO06D.png\n",
            "test/GSEJQ669.png\n",
            "test/MUIHCMWE.png\n",
            "test/6R1GCBVF.png\n",
            "test/7SIZQ2R9.png\n",
            "test/XSNU5892.png\n",
            "test/DZHAGPDG.png\n",
            "test/9AUSX9ZT.png\n",
            "test/LRFAUY3N.png\n",
            "test/UIA1WIYV.png\n",
            "test/TADHAM2D.png\n",
            "test/ISJK1N8A.png\n",
            "test/VPHZDG24.png\n",
            "test/TP5UKH6I.png\n",
            "test/GBA754KQ.png\n",
            "test/MMTJIWTS.png\n",
            "test/367DFL9C.png\n",
            "test/L1XYI68X.png\n",
            "test/2NTSMMHD.png\n",
            "test/AU4YGTRR.png\n",
            "test/NB4L6OL1.png\n",
            "test/WQ7XL747.png\n",
            "test/Q5RZRTI0.png\n",
            "test/DICHS8EI.png\n",
            "test/9K3QS1Q3.png\n",
            "test/UV1S8OV5.png\n",
            "test/KGJ6ZDF1.png\n",
            "test/WS17GXT3.png\n",
            "test/PFHXWI9R.png\n",
            "test/PZQP701T.png\n",
            "test/2STFIKUA.png\n",
            "test/69E5AAFU.png\n",
            "test/NTWE6NUQ.png\n",
            "test/M66HDKJE.png\n",
            "test/QTNJQY9K.png\n",
            "test/PFXE9J76.png\n",
            "test/0M7G2FIG.png\n",
            "test/O7M6KKQV.png\n",
            "test/S0HHDD4B.png\n",
            "test/2H1IBN9Z.png\n",
            "test/3U2PO520.png\n",
            "test/BDLTTT0W.png\n",
            "test/Z2MJJUJ8.png\n",
            "test/HPS3VP5K.png\n",
            "test/N20W918E.png\n",
            "test/IT3JH9YK.png\n",
            "test/TE1G1FLG.png\n",
            "test/KL2C0PRV.png\n",
            "test/I2G7ZF43.png\n",
            "test/DXI8SA51.png\n",
            "test/C754M808.png\n",
            "test/J2JMNNAL.png\n",
            "test/QAJVAF1I.png\n",
            "test/9GM7SJGX.png\n",
            "test/MF8F0K7E.png\n",
            "test/TAZ9UNWV.png\n",
            "test/75NPWERI.png\n",
            "test/61ME7SZ4.png\n",
            "test/6JXXH549.png\n",
            "test/NMWLL758.png\n",
            "test/MBBJI2F7.png\n",
            "test/VO9CJBRJ.png\n",
            "test/MLMFE9BY.png\n",
            "test/ET7VHJGF.png\n",
            "test/SKCQGKQ8.png\n",
            "test/JGSEJRMS.png\n",
            "test/UOK8HYF1.png\n",
            "test/ZUB6WG9L.png\n",
            "test/M3EX3ACI.png\n",
            "test/72P2GVMY.png\n",
            "test/5382TKRI.png\n",
            "test/7NYR632H.png\n",
            "test/P6916W6A.png\n",
            "test/KKEV55U5.png\n",
            "test/OOLWTA6H.png\n",
            "test/A99JNGPL.png\n",
            "test/Q07HDZ9V.png\n",
            "test/BHOC9RUW.png\n",
            "test/PGSTYMEC.png\n",
            "test/3RAYJLG2.png\n",
            "test/Z41QI014.png\n",
            "test/DTL3P37C.png\n",
            "test/UK9OZ3K8.png\n",
            "test/1PFEBVT8.png\n",
            "test/1PKCOGRQ.png\n",
            "test/RUP0GO14.png\n",
            "test/S8ZI0M0K.png\n",
            "test/BFAN8NYS.png\n",
            "test/LP9W7IKG.png\n",
            "test/T7SATVAK.png\n",
            "test/7SQUCTYE.png\n",
            "test/4T3BSQSA.png\n",
            "test/PEYRN5DH.png\n",
            "test/FDL9S9K8.png\n",
            "test/9V5QI16G.png\n",
            "test/TY3F4560.png\n",
            "test/WHCV49I0.png\n",
            "test/9X78GPT9.png\n",
            "test/6HFKBJJ6.png\n",
            "test/B36AX8E9.png\n",
            "test/U73KN277.png\n",
            "test/JACLTSWC.png\n",
            "test/M621D5LZ.png\n",
            "test/8ZPPBTQ3.png\n",
            "test/1JW9DUGP.png\n",
            "test/I16NAK57.png\n",
            "test/IP4TK20G.png\n",
            "test/MW4HFW0V.png\n",
            "test/K566DFE8.png\n",
            "test/STO8PBQD.png\n",
            "test/9B1L4ZP5.png\n",
            "test/ZJ53TH76.png\n",
            "test/AYZBPB38.png\n",
            "test/9DCVH0PQ.png\n",
            "test/3LAT2HVS.png\n",
            "test/MU0ELXA0.png\n",
            "test/SLGVHFIY.png\n",
            "test/7XMGAA43.png\n",
            "test/3180ZXGV.png\n",
            "test/A4E53339.png\n",
            "test/HFFX7P3R.png\n",
            "test/QQBATLUY.png\n",
            "test/JWI72T5I.png\n",
            "test/3M2M8UJ2.png\n",
            "test/4HSIT85V.png\n",
            "test/9HBT1GQ3.png\n",
            "test/ZQ2FP1Y6.png\n",
            "test/XC71T3AS.png\n",
            "test/1DYL0BU4.png\n",
            "test/5Y5B5YDH.png\n",
            "test/QPOF0OVK.png\n",
            "test/WZZURMDM.png\n",
            "test/0JCYPE2A.png\n",
            "test/M6MU4SLN.png\n",
            "test/T98MD23V.png\n",
            "test/VXMUABH0.png\n",
            "test/8JD7U2RJ.png\n",
            "test/WFHL71P0.png\n",
            "test/KLG09OBD.png\n",
            "test/X21CAB1F.png\n",
            "test/5VXRV93E.png\n",
            "test/829MTHTD.png\n",
            "test/A6CRVR7P.png\n",
            "test/B5BT6V40.png\n",
            "test/0HJWCYFL.png\n",
            "test/8AY5MHT3.png\n",
            "test/90WC7M40.png\n",
            "test/5ALRK8D0.png\n",
            "test/ONT1WZBI.png\n",
            "test/IQQFE8I0.png\n",
            "test/0DEH982K.png\n",
            "test/XGWIP340.png\n",
            "test/K6ZV0HJI.png\n",
            "test/KGC1BVC1.png\n",
            "test/QA2DXV3L.png\n",
            "test/D3P6NFL3.png\n",
            "test/T0XLN6DK.png\n",
            "test/8AA2TJG0.png\n",
            "test/H3V16R0O.png\n",
            "test/2EB38R75.png\n",
            "test/1N7VXU5E.png\n",
            "test/MC4FO6UQ.png\n",
            "test/UFPNTD97.png\n",
            "test/WYSWGZ61.png\n",
            "test/0338EIMA.png\n",
            "test/NO37PEWS.png\n",
            "test/R9BB40M3.png\n",
            "test/ITRG04WC.png\n",
            "test/58HDM43Z.png\n",
            "test/G9QLHK6F.png\n",
            "test/VWN45FXU.png\n",
            "test/QB2QIE36.png\n",
            "test/OOYI0ADW.png\n",
            "test/MVIAH5ES.png\n",
            "test/WVEOO55X.png\n",
            "test/Y521UFJ6.png\n",
            "test/O4C33K99.png\n",
            "test/VBKTPB0N.png\n",
            "test/3OYTAUYN.png\n",
            "test/H7H0YD1S.png\n",
            "test/YR539QYR.png\n",
            "test/5OBO2PI5.png\n",
            "test/S71W0VPJ.png\n",
            "test/7FS157J8.png\n",
            "test/PAX40532.png\n",
            "test/89M1YDQP.png\n",
            "test/50N924Q0.png\n",
            "test/Z75GKOLE.png\n",
            "test/AOBH5E3M.png\n",
            "test/VZILOPD0.png\n",
            "test/0T64ZT9O.png\n",
            "test/I7YIB88F.png\n",
            "test/3YGHI6T3.png\n",
            "test/WMQ05UXU.png\n",
            "test/YWR39X4Z.png\n",
            "test/ZIXT8VO0.png\n",
            "test/TH6JNHO5.png\n",
            "test/NEW8F0XV.png\n",
            "test/AV8WKMEK.png\n",
            "test/PV29RWQ5.png\n",
            "test/8R38CC13.png\n",
            "test/HU49AKK2.png\n",
            "test/318NJ1L2.png\n",
            "test/64FL18W2.png\n",
            "test/AP4WBZCK.png\n",
            "test/D4MTVZAC.png\n",
            "test/5RK2JEIS.png\n",
            "test/KOIRKEHG.png\n",
            "test/02N9OSO4.png\n",
            "test/8WDWL8C7.png\n",
            "test/M486BON7.png\n",
            "test/A6B2HVIU.png\n",
            "test/RCDI60MD.png\n",
            "test/53SP1DVM.png\n",
            "test/UKIHRXXF.png\n",
            "test/21HA7L0R.png\n",
            "test/W9XYWTDD.png\n",
            "test/7H0SKIBZ.png\n",
            "test/KG7ZK5C1.png\n",
            "test/UROVWQTB.png\n",
            "test/LID7QWMV.png\n",
            "test/M40ZIZQK.png\n",
            "test/07U7U8YY.png\n",
            "test/GV0TF9GF.png\n",
            "test/W3L2GGCQ.png\n",
            "test/IYNCLG0F.png\n",
            "test/PH6G8N6H.png\n",
            "test/UJPMT15H.png\n",
            "test/3QTE5S8O.png\n",
            "test/H0H2YEYR.png\n",
            "test/A3GZT8N1.png\n",
            "test/NIIJI9CN.png\n",
            "test/0BZ6729J.png\n",
            "test/ID8PZBO6.png\n",
            "test/RXJ6R7LL.png\n",
            "test/PGWIYVJA.png\n",
            "test/8IX8F1XX.png\n",
            "test/SZ3Y04CD.png\n",
            "test/8AKZVI7Y.png\n",
            "test/JOW9RHPP.png\n",
            "test/C5M5FMFC.png\n",
            "test/7SQX0FYL.png\n",
            "test/2WGE5FN8.png\n",
            "test/N980UGVU.png\n",
            "test/4VFD8DME.png\n",
            "test/3RTN0I8Z.png\n",
            "test/P1RGVOA8.png\n",
            "test/CDL2TFNI.png\n",
            "test/2JFSUYUO.png\n",
            "test/P0ZU5S9L.png\n",
            "test/EFOGXFON.png\n",
            "test/FQCGC2N9.png\n",
            "test/1BLK4MF7.png\n",
            "test/H0WJAPWC.png\n",
            "test/BKSFPFSY.png\n",
            "test/17FTZ0WT.png\n",
            "test/7DE4BR7X.png\n",
            "test/XM2O5E68.png\n",
            "test/CJG80X9T.png\n",
            "test/TUOANA3T.png\n",
            "test/A61M8ZFL.png\n",
            "test/BR4NDGZ2.png\n",
            "test/UCTRD4YQ.png\n",
            "test/8LXJHMXT.png\n",
            "test/1EY2WH36.png\n",
            "test/0PD9IOLY.png\n",
            "test/MTZH7DMV.png\n",
            "test/LELZOXAF.png\n",
            "test/V56X8HU4.png\n",
            "test/H0B1T502.png\n",
            "test/3IGWPSR6.png\n",
            "test/LNWF40ZQ.png\n",
            "test/2J2TPPOZ.png\n",
            "test/V7OWJ9JX.png\n",
            "test/Q1P1JIZH.png\n",
            "test/0HZNQS64.png\n",
            "test/HN67EBRD.png\n",
            "test/932NY1ME.png\n",
            "test/DI1RMG5R.png\n",
            "test/9373286P.png\n",
            "test/GRPZOGU8.png\n",
            "test/2K0VV3DS.png\n",
            "test/BQKXHC0C.png\n",
            "test/RKV6K0KJ.png\n",
            "test/JI3DJ1JO.png\n",
            "test/9C0ZFOGE.png\n",
            "test/SF8ED6XA.png\n",
            "test/N05RUWYF.png\n",
            "test/P05N02N5.png\n",
            "test/47AU2MR8.png\n",
            "test/ASXSOWRF.png\n",
            "test/CYUWAZGD.png\n",
            "test/6UWH5L6Z.png\n",
            "test/4XAM4AN6.png\n",
            "test/B563E91X.png\n",
            "test/GSCUQDR1.png\n",
            "test/PL3O75MV.png\n",
            "test/6H9SMOJV.png\n",
            "test/E73J87WV.png\n",
            "test/0VD112D3.png\n",
            "test/NDO0XNTG.png\n",
            "test/NESCQOB9.png\n",
            "test/11HN25LK.png\n",
            "test/CZRWC93E.png\n",
            "test/ER0L9373.png\n",
            "test/93V5PP6F.png\n",
            "test/VC5C95UJ.png\n",
            "test/9RKPXS00.png\n",
            "test/SHBTQQ8K.png\n",
            "test/WU93NTK2.png\n",
            "test/WDX44QGF.png\n",
            "test/XCHJ37WB.png\n",
            "test/B3ZMMCR2.png\n",
            "test/UEQ8XPTF.png\n",
            "test/RECTSHSN.png\n",
            "test/UL9VR6OM.png\n",
            "test/NSE5BCV4.png\n",
            "test/D9B9MLV1.png\n",
            "test/3L3UVSHD.png\n",
            "test/J5CFS5IA.png\n",
            "test/04KNVQVO.png\n",
            "test/N9DESEOU.png\n",
            "test/39KW40TP.png\n",
            "test/NADYW0ZB.png\n",
            "test/LP6EQKO8.png\n",
            "test/WGI2OPS3.png\n",
            "test/J1J0HHEW.png\n",
            "test/9BLW270Q.png\n",
            "test/XHGIUCOV.png\n",
            "test/HDFMJNN2.png\n",
            "test/B61VF6Y6.png\n",
            "test/ZT5W1GYW.png\n",
            "test/259KT2AM.png\n",
            "test/ACKU6NRN.png\n",
            "test/NBC3YE5K.png\n",
            "test/T9N89IEN.png\n",
            "test/DV3389R6.png\n",
            "test/HIYNXG3J.png\n",
            "test/8FMU6IBH.png\n",
            "test/YCKI8Q2L.png\n",
            "test/MS55E0O7.png\n",
            "test/U072A9EE.png\n",
            "test/YSXSWHE6.png\n",
            "test/R9G4F4FT.png\n",
            "test/CB84QINA.png\n",
            "test/4XAYNUL2.png\n",
            "test/4GNXC0PH.png\n",
            "test/60U5JQDK.png\n",
            "test/UUNF00DI.png\n",
            "test/9QYTCEU5.png\n",
            "test/EIRT4B7J.png\n",
            "test/WLIJXOB1.png\n",
            "test/4Q6MEDT2.png\n",
            "test/BCXF1QHL.png\n",
            "test/AJ1FV2HJ.png\n",
            "test/0PKODKN9.png\n",
            "test/KDA5ZI2X.png\n",
            "test/AB5FRJ38.png\n",
            "test/YLQ1KYQH.png\n",
            "test/CUQ5K1PW.png\n",
            "test/53ZFOE0I.png\n",
            "test/2IRFN11T.png\n",
            "test/DECQCS9H.png\n",
            "test/WMJA23CH.png\n",
            "test/R1G5NHPV.png\n",
            "test/B9H33NGR.png\n",
            "test/CWIRBH5U.png\n",
            "test/33VXNBQB.png\n",
            "test/4744ALER.png\n",
            "test/9EIZ0T0W.png\n",
            "test/YHHH5UGE.png\n",
            "test/05TIF50O.png\n",
            "test/MUNG125X.png\n",
            "test/BXFU5BPS.png\n",
            "test/MX418RRN.png\n",
            "test/BQOV0D4O.png\n",
            "test/QQJLB3PW.png\n",
            "test/3541X8HV.png\n",
            "test/NBHTW1YK.png\n",
            "test/KI8D29JJ.png\n",
            "test/JQAJOZL7.png\n",
            "test/8GJJKPC2.png\n",
            "test/JO3W6W9K.png\n",
            "test/H7TZ0JCX.png\n",
            "test/6SF1A9RO.png\n",
            "test/EMGMNST2.png\n",
            "test/AQWEKLCI.png\n",
            "test/UUSW5KTX.png\n",
            "test/0Z23G9ML.png\n",
            "test/18C49MP2.png\n",
            "test/GBD1W398.png\n",
            "test/WFY9IQFM.png\n",
            "test/BE2S171S.png\n",
            "test/3BQDJONZ.png\n",
            "test/98HDN74H.png\n",
            "test/V7MU5DZ6.png\n",
            "test/B0KE4Z0L.png\n",
            "test/HDEXPV5Z.png\n",
            "test/BU7N502H.png\n",
            "test/77HDDPJU.png\n",
            "test/N43F4BUL.png\n",
            "test/UBVHDQOI.png\n",
            "test/HPJN0S95.png\n",
            "test/B3YW7EYB.png\n",
            "test/0HKXQEWL.png\n",
            "test/0SMDKYML.png\n",
            "test/AM0P0ZP0.png\n",
            "test/21MVXC0J.png\n",
            "test/JUW0Y2P6.png\n",
            "test/H39B850G.png\n",
            "test/57BNYAG7.png\n",
            "test/4B86F1MH.png\n",
            "test/P6BHQJF6.png\n",
            "test/QD7LOCWX.png\n",
            "test/LHC15D1A.png\n",
            "test/QISZAGJK.png\n",
            "test/SLVRGUXG.png\n",
            "test/TPO9EFZV.png\n",
            "test/JH1P8C94.png\n",
            "test/2U3QNY1C.png\n",
            "test/H1TU24OW.png\n",
            "test/9WNJQMP9.png\n",
            "test/YPPPKEJC.png\n",
            "test/PPXAQHBX.png\n",
            "test/6T44GBL7.png\n",
            "test/X17NJGDG.png\n",
            "test/7N4VNUD1.png\n",
            "test/M8VLU0HW.png\n",
            "test/UZSYDP3Z.png\n",
            "test/UJ5HM65F.png\n",
            "test/J5OXDEEV.png\n",
            "test/99JH0TIY.png\n",
            "test/B73DFIG4.png\n",
            "test/8430JVT9.png\n",
            "test/P66RA457.png\n",
            "test/5DIZGXIG.png\n",
            "test/XLJM2FX3.png\n",
            "test/SOXXQXNV.png\n",
            "test/0GOUCJJW.png\n",
            "test/8R9OYG4U.png\n",
            "test/8NYLEFAD.png\n",
            "test/QAE4TPTJ.png\n",
            "test/181XR0J3.png\n",
            "test/CI1QHA8O.png\n",
            "test/TOOI6PH2.png\n",
            "test/H44JI3UL.png\n",
            "test/617YNNOS.png\n",
            "test/TJQNEKD8.png\n",
            "test/B20X4YPV.png\n",
            "test/LB47APXL.png\n",
            "test/JTI4K3YW.png\n",
            "test/1UFGWGAQ.png\n",
            "test/YST5KVEF.png\n",
            "test/NRPJSBJJ.png\n",
            "test/HLZS9IV9.png\n",
            "test/AFWCE15Y.png\n",
            "test/1WUYY772.png\n",
            "test/99ARZ3KJ.png\n",
            "test/TN8QK8AX.png\n",
            "test/0A14DNF4.png\n",
            "test/EOYZHXZX.png\n",
            "test/IG8JYF49.png\n",
            "test/MISYIFH2.png\n",
            "test/PFCCV2VE.png\n",
            "test/TMIPJVDQ.png\n",
            "test/9BW3SQF5.png\n",
            "test/J0T67HNP.png\n",
            "test/XGB83OKA.png\n",
            "test/ACLY397F.png\n",
            "test/EOLWUWQ0.png\n",
            "test/DJ0THRE2.png\n",
            "test/41EHKQCA.png\n",
            "test/7ZDZJCCZ.png\n",
            "test/Q9W29QLD.png\n",
            "test/5I39Z8AB.png\n",
            "test/ZXM37LB5.png\n",
            "test/S2MFOBBV.png\n",
            "test/ZTVRXBHP.png\n",
            "test/VIWMEYJ5.png\n",
            "test/9HMUI3IQ.png\n",
            "test/AP63FAC3.png\n",
            "test/5QLN6NRV.png\n",
            "test/SCFCDMKS.png\n",
            "test/1CYRQ7X1.png\n",
            "test/K62UCMS8.png\n",
            "test/PPBANBN7.png\n",
            "test/MAFXHSMA.png\n",
            "test/UYCJWGWU.png\n",
            "test/HHFTS960.png\n",
            "test/DZ544Z1M.png\n",
            "test/9Y6JQ30I.png\n",
            "test/GFQ9NSB8.png\n",
            "test/N32KS8FZ.png\n",
            "test/72UPL7L3.png\n",
            "test/IWUORMO8.png\n",
            "test/HOXVPEYI.png\n",
            "test/CF5K7AG7.png\n",
            "test/LTQ4N0NZ.png\n",
            "test/U3JELOIK.png\n",
            "test/XZGC3OAB.png\n",
            "test/O6Z7LQTK.png\n",
            "test/F5N3MES3.png\n",
            "test/4ISY6T95.png\n",
            "test/9JC02TRT.png\n",
            "test/HHNY2SSB.png\n",
            "test/5DBHTKZL.png\n",
            "test/0KJAJ6FB.png\n",
            "test/C93P57YL.png\n",
            "test/FPYRDLZY.png\n",
            "test/9Q2BV89D.png\n",
            "test/HLICYD2Z.png\n",
            "test/OVVADBMA.png\n",
            "test/TEEOD9O0.png\n",
            "test/CVK1UZEW.png\n",
            "test/QS98KD2V.png\n",
            "test/ID5NZFTN.png\n",
            "test/CG9LBEWY.png\n",
            "test/I9WKS2R9.png\n",
            "test/5HHDCALK.png\n",
            "test/NWNRAJ7C.png\n",
            "test/HHH9D731.png\n",
            "test/ATKYW3UF.png\n",
            "test/COH8X7RR.png\n",
            "test/EB5PWS17.png\n",
            "test/CQRAEH1P.png\n",
            "test/P5QQU0VI.png\n",
            "test/WOQ131CF.png\n",
            "test/ITPGTADV.png\n",
            "test/P5F4A7T9.png\n",
            "test/YZRJIHJM.png\n",
            "test/Y59ZVHK8.png\n",
            "test/ANEVET95.png\n",
            "test/4JNXLR7Y.png\n",
            "test/5CV99TG9.png\n",
            "test/3LV5623U.png\n",
            "test/4U821W2N.png\n",
            "test/PJHBR2T9.png\n",
            "test/YO2K8UT6.png\n",
            "test/9CRMZHIA.png\n",
            "test/0MD50KCO.png\n",
            "test/O3BO8IEH.png\n",
            "test/R871LTEZ.png\n",
            "test/JTLOS8YE.png\n",
            "test/4TVJ73DA.png\n",
            "test/C2VPQZH6.png\n",
            "test/HZQ8306W.png\n",
            "test/PD9CLGSG.png\n",
            "test/IO42QS6C.png\n",
            "test/WJ06QQ9B.png\n",
            "test/GDMAJ0CM.png\n",
            "test/7KNHWA6Z.png\n",
            "test/X7A0621A.png\n",
            "test/K56Y3FBR.png\n",
            "test/GUJ8D08B.png\n",
            "test/86QCDWBQ.png\n",
            "test/YSL6TARI.png\n",
            "test/BQDN7B6U.png\n",
            "test/OJ5FG585.png\n",
            "test/FYHNH4TW.png\n",
            "test/P9WC92XZ.png\n",
            "test/D09HZLXA.png\n",
            "test/51HIK398.png\n",
            "test/XSPN55ZC.png\n",
            "test/M2BHUX51.png\n",
            "test/UWTNKT9Q.png\n",
            "test/I5USRVU3.png\n",
            "test/FAZO29QU.png\n",
            "test/J0EXBJJN.png\n",
            "test/77LTK6NW.png\n",
            "test/ZMMCE0SH.png\n",
            "test/L4V5CCEB.png\n",
            "test/4HDMUPCW.png\n",
            "test/AB3YOGL4.png\n",
            "test/1OIIMTTC.png\n",
            "test/O5ROJ9ZZ.png\n",
            "test/G8UA29QU.png\n",
            "test/BIYAH5IN.png\n",
            "test/ZGXAWHHV.png\n",
            "test/65XK5IGN.png\n",
            "test/5X8IIPPC.png\n",
            "test/9VS88VDJ.png\n",
            "test/POM6IPD0.png\n",
            "test/YX3FQDU4.png\n",
            "test/4S3KHM8U.png\n",
            "test/B80LKNKL.png\n",
            "test/EILJLL4J.png\n",
            "test/2ENY9QY4.png\n",
            "test/XJN6O7BC.png\n",
            "test/J19MP43H.png\n",
            "test/T97SKKP6.png\n",
            "test/UE3V7QR3.png\n",
            "test/LC3MIGLQ.png\n",
            "test/M2ZH584D.png\n",
            "test/QV20B2C9.png\n",
            "test/V2FH1SH2.png\n",
            "test/G8HZPJAR.png\n",
            "test/5H0TTP8K.png\n",
            "test/VP65KI19.png\n",
            "test/I9LVURL0.png\n",
            "test/G1LZ3K8P.png\n",
            "test/8ZCEWSNI.png\n",
            "test/SXJ0NE9L.png\n",
            "test/W7W12LD4.png\n",
            "test/0UROIVAU.png\n",
            "test/J51F5KGX.png\n",
            "test/5VDYAFL9.png\n",
            "test/PMEE0D0K.png\n",
            "test/OGZYB9RS.png\n",
            "test/EJ29ZQ25.png\n",
            "test/UHIE4B2Z.png\n",
            "test/707CUKPM.png\n",
            "test/26IES3BB.png\n",
            "test/3ZDRU593.png\n",
            "test/JBYW0RNI.png\n",
            "test/3OQEK7MK.png\n",
            "test/7JV7QSD1.png\n",
            "test/ULBFIY77.png\n",
            "test/BUD2LCBW.png\n",
            "test/3F528MB6.png\n",
            "test/6E6RBRWM.png\n",
            "test/RDJRPYRL.png\n",
            "test/R1MKAA89.png\n",
            "test/04T573I6.png\n",
            "test/WRHMOJ3T.png\n",
            "test/62IVMAQQ.png\n",
            "test/HIH86BUW.png\n",
            "test/EFG7C3AM.png\n",
            "test/CQ101P9B.png\n",
            "test/SO1WFMF9.png\n",
            "test/2AGVZNGA.png\n",
            "test/1BLYNSXO.png\n",
            "test/DC15M4AQ.png\n",
            "test/G2L5EU16.png\n",
            "test/CRLRKAQB.png\n",
            "test/IKGNMWST.png\n",
            "test/W7464KQE.png\n",
            "test/EK2EA7F8.png\n",
            "test/24QBGPAK.png\n",
            "test/9WPPOXFE.png\n",
            "test/N5498HQ2.png\n",
            "test/Y6J5B0LA.png\n",
            "test/ZJ4EFW55.png\n",
            "test/ASTX9AQC.png\n",
            "test/ALCIA11C.png\n",
            "test/1YFBQX69.png\n",
            "test/BF3IIDFM.png\n",
            "test/FLHGZCDF.png\n",
            "test/KNKUZ52P.png\n",
            "test/IFUGEI8L.png\n",
            "test/CS81Y7QR.png\n",
            "test/KE2LDZ84.png\n",
            "test/IP8EYUUY.png\n",
            "test/DT3WM74C.png\n",
            "test/4DFSKJG7.png\n",
            "test/2KRSWMAF.png\n",
            "test/3DOAI74Y.png\n",
            "test/BJHFXMMH.png\n",
            "test/FJUGULMP.png\n",
            "test/UWTIWSKU.png\n",
            "test/SV3YOITG.png\n",
            "test/56NUSXG8.png\n",
            "test/Y03D7I2S.png\n",
            "test/BWOFX8QE.png\n",
            "test/5FR3UU6J.png\n",
            "test/GBY8B600.png\n",
            "test/Q1KH1IVK.png\n",
            "test/NKH2Z9HO.png\n",
            "test/QTWL2RK9.png\n",
            "test/OC8N0WXY.png\n",
            "test/2KOY0SL0.png\n",
            "test/4L5XO8PX.png\n",
            "test/8AUPKJ9X.png\n",
            "test/Z8EUYXE9.png\n",
            "test/TVEAV1ZA.png\n",
            "test/KJFPZ0ZE.png\n",
            "test/0WV63XUZ.png\n",
            "test/ERFZ1GUD.png\n",
            "test/C0190GSA.png\n",
            "test/7FY6ANKG.png\n",
            "test/DAGEJU3W.png\n",
            "test/AL8IORAX.png\n",
            "test/ACEKD8KJ.png\n",
            "test/U55XWZM7.png\n",
            "test/VGWLD5UL.png\n",
            "test/VVOP116J.png\n",
            "test/OM3XKTW3.png\n",
            "test/WBKPU608.png\n",
            "test/CR3DHGQK.png\n",
            "test/GOTIU98O.png\n",
            "test/L6YXR5HD.png\n",
            "test/HWF6HTUH.png\n",
            "test/MCJ66XU0.png\n",
            "test/NCI0CPW6.png\n",
            "test/NBFTLPLI.png\n",
            "test/WEM7503T.png\n",
            "test/EJRB0PF8.png\n",
            "test/LK890U3J.png\n",
            "test/5PAYCBAS.png\n",
            "test/8FWPXHBY.png\n",
            "test/Q72M66SC.png\n",
            "test/9YXH3AWR.png\n",
            "test/AINB57W5.png\n",
            "test/NC2W39TJ.png\n",
            "test/S95QT70M.png\n",
            "test/7D3G6IGF.png\n",
            "test/C265AM9L.png\n",
            "test/II48DSXO.png\n",
            "test/1L236OSK.png\n",
            "test/FT6GTF9G.png\n",
            "test/M7E1S64V.png\n",
            "test/93PJDLDF.png\n",
            "test/I6XIOIWS.png\n",
            "test/BWS6CVPL.png\n",
            "test/89KFCYEX.png\n",
            "test/X9KYGGX1.png\n",
            "test/S46LJCN6.png\n",
            "test/THFMYSLT.png\n",
            "test/YEAO0P8W.png\n",
            "test/MIZ123U9.png\n",
            "test/7Q7FPTE3.png\n",
            "test/4X56BM7P.png\n",
            "test/7YV01TBM.png\n",
            "test/VFLA4LIE.png\n",
            "test/TMNJSOZ4.png\n",
            "test/NOA5NMDN.png\n",
            "test/V875YCFS.png\n",
            "test/C4844EBE.png\n",
            "test/3Q6U29RF.png\n",
            "test/64M9C9PY.png\n",
            "test/LKJF0RBS.png\n",
            "test/MMDMJMSK.png\n",
            "test/CQUHBSBV.png\n",
            "test/9GXHI40T.png\n",
            "test/S593WFRU.png\n",
            "test/Y2CGN2R7.png\n",
            "test/YG61LK3O.png\n",
            "test/N2BLY5GG.png\n",
            "test/D0R2YZ29.png\n",
            "test/DWBZUKGC.png\n",
            "test/ICWPANTB.png\n",
            "test/7DCUZW4H.png\n",
            "test/HYGAYCHW.png\n",
            "test/0TRZ7YAL.png\n",
            "test/R0ZBGOQL.png\n",
            "test/L69UEU8Q.png\n",
            "test/YCE7KOV7.png\n",
            "test/IBTDCMQ6.png\n",
            "test/WB8YLRQN.png\n",
            "test/0R71JUA9.png\n",
            "test/DQ7J5CXA.png\n",
            "test/15IL35D5.png\n",
            "test/WO0ZCVWH.png\n",
            "test/XBBJHOY5.png\n",
            "test/6IRFZEKQ.png\n",
            "test/5SXY8B1D.png\n",
            "test/ISBJBN9R.png\n",
            "test/9ED0EFCB.png\n",
            "test/VB8BX2SD.png\n",
            "test/9V0TL14G.png\n",
            "test/0QC1K5P5.png\n",
            "test/66BTDGFO.png\n",
            "test/2VLLC8J7.png\n",
            "test/55IMA61D.png\n",
            "test/A2O6Y6JG.png\n",
            "test/RM1SA15W.png\n",
            "test/YVDSKOWW.png\n",
            "test/9I49E0Z7.png\n",
            "test/7KIBM6XP.png\n",
            "test/XJ5VO1AM.png\n",
            "test/GG67HYM4.png\n",
            "test/J3Z1ZBG4.png\n",
            "test/WJP08B6A.png\n",
            "test/B3BF356H.png\n",
            "test/SH2BQ7SZ.png\n",
            "test/3BIJS6IY.png\n",
            "test/VJB8RM0R.png\n",
            "test/ZMNZHP1P.png\n",
            "test/HCRO94U2.png\n",
            "test/0X851VVL.png\n",
            "test/M997FDXP.png\n",
            "test/VFSB30H8.png\n",
            "test/GLI1P8OS.png\n",
            "test/8J4A8NQJ.png\n",
            "test/Z7ADMPU6.png\n",
            "test/SLENF20X.png\n",
            "test/AQ08F3YD.png\n",
            "test/01RRI4YP.png\n",
            "test/8KYXXHA8.png\n",
            "test/M8EFXH1E.png\n",
            "test/MKTTSBGL.png\n",
            "test/M60T3O5U.png\n",
            "test/1U3UOVEX.png\n",
            "test/RG6BO373.png\n",
            "test/3NER1WE5.png\n",
            "test/P3BG28SW.png\n",
            "test/MYZTKBXT.png\n",
            "test/WTAK8NIK.png\n",
            "test/KV264LT3.png\n",
            "test/0AAO51JW.png\n",
            "test/7MS5LLHF.png\n",
            "test/PUD4L9HD.png\n",
            "test/HK6APH3I.png\n",
            "test/WGV8E8FM.png\n",
            "test/P6P6F9XZ.png\n",
            "test/25C2Z891.png\n",
            "test/RMX2EMH3.png\n",
            "test/3Z0P0FMZ.png\n",
            "test/ZI1YP3ZT.png\n",
            "test/YAY40OPO.png\n",
            "test/V5O4YVMZ.png\n",
            "test/OIEXGVOC.png\n",
            "test/FW64TLQD.png\n",
            "test/DHTMKLOR.png\n",
            "test/442BXF5T.png\n",
            "test/6OR8VZ9W.png\n",
            "test/FA3VXQU6.png\n",
            "test/50D4N34K.png\n",
            "test/3TFZ2AHE.png\n",
            "test/V00ERVVQ.png\n",
            "test/F2OY19ZP.png\n",
            "test/HD6B8CVK.png\n",
            "test/AAPVM5QN.png\n",
            "test/ZEZTQOED.png\n",
            "test/BD7QV2EK.png\n",
            "test/VPXLZLMN.png\n",
            "test/2VEROKJG.png\n",
            "test/RVMA42DS.png\n",
            "test/3UNU65L5.png\n",
            "test/6DA70FGW.png\n",
            "test/R6JKN43N.png\n",
            "test/4LQRX0ER.png\n",
            "test/UKLJSDRG.png\n",
            "test/51Q0R4IS.png\n",
            "test/ULM2USHF.png\n",
            "test/YEQBEJEL.png\n",
            "test/WNU31HUG.png\n",
            "test/UL2FP3PC.png\n",
            "test/XIDUEQV5.png\n",
            "test/7FEQ0C19.png\n",
            "test/8M5CPDPT.png\n",
            "test/BPJ7XGBO.png\n",
            "test/WERTWBO2.png\n",
            "test/F3U3590H.png\n",
            "test/B2HIBNSJ.png\n",
            "test/FOE99DUT.png\n",
            "test/7JD6CPC1.png\n",
            "test/41M9J9M2.png\n",
            "test/V9PNTZK9.png\n",
            "test/6YMOIM0O.png\n",
            "test/IIP3QYBH.png\n",
            "test/9IQGE99I.png\n",
            "test/5D06DPP1.png\n",
            "test/TV5BII81.png\n",
            "test/ULVFZ5YG.png\n",
            "test/SCDN30B6.png\n",
            "test/3919HB5O.png\n",
            "test/WXNJF5VU.png\n",
            "test/G256IVUF.png\n",
            "test/5AWFO1KM.png\n",
            "test/9MBB4YK8.png\n",
            "test/WZ9QVJNO.png\n",
            "test/AOQJR9IR.png\n",
            "test/F4NEJ9VN.png\n",
            "test/QSI76R8Q.png\n",
            "test/UOQBDB5B.png\n",
            "test/UC8DNXPB.png\n",
            "test/BZ28CCZO.png\n",
            "test/L5FR6WMQ.png\n",
            "test/7O574IVK.png\n",
            "test/RFQ70FRX.png\n",
            "test/2AM0DTTC.png\n",
            "test/MJQH722R.png\n",
            "test/P1MPH848.png\n",
            "test/HK6MY1RB.png\n",
            "test/EU5C8QRN.png\n",
            "test/41ORINIM.png\n",
            "test/OI5P59FI.png\n",
            "test/8BIH29Q7.png\n",
            "test/LZ0DEJG6.png\n",
            "test/22VGJ1GI.png\n",
            "test/7UHZ0I14.png\n",
            "test/EJCQG86K.png\n",
            "test/GCY0KEYQ.png\n",
            "test/M6LQFD8D.png\n",
            "test/RCEIDTLA.png\n",
            "test/HPDCAK9X.png\n",
            "test/XXHE2ZPW.png\n",
            "test/Z16SOOLY.png\n",
            "test/KVEVZI2X.png\n",
            "test/NUG6053D.png\n",
            "test/47R6B7UD.png\n",
            "test/VHBP3MZQ.png\n",
            "test/TO3Y2TKK.png\n",
            "test/QZJSV0PG.png\n",
            "test/UZDKOFL4.png\n",
            "test/D2GC19HU.png\n",
            "test/O9NOISPF.png\n",
            "test/1K3MLR5Y.png\n",
            "test/82OLH2GM.png\n",
            "test/QWMOMNYV.png\n",
            "test/E6JPI00O.png\n",
            "test/ZFSRSF7N.png\n",
            "test/0BAQXFYZ.png\n",
            "test/IJFZY2EH.png\n",
            "test/F7EVMY2P.png\n",
            "test/D9QB1O08.png\n",
            "test/A6AW7OK9.png\n",
            "test/QEZKN2Z1.png\n",
            "test/JV8EVDIN.png\n",
            "test/RCTCNZBJ.png\n",
            "test/GFCMMJLB.png\n",
            "test/PAHL2E5F.png\n",
            "test/OUJ0Q9BP.png\n",
            "test/UDP6RR36.png\n",
            "test/GGQ8U815.png\n",
            "test/5UFT8K99.png\n",
            "test/ERY3KM0R.png\n",
            "test/KHKYQOUL.png\n",
            "test/IH7K8WFQ.png\n",
            "test/42Q9BKHB.png\n",
            "test/N4H5YHSG.png\n",
            "test/DBP7BBTB.png\n",
            "test/JDNY87TQ.png\n",
            "test/564UGMP6.png\n",
            "test/TOXWMHNE.png\n",
            "test/L4GJNARU.png\n",
            "test/5UKNS8RL.png\n",
            "test/4IIQIZGA.png\n",
            "test/XHV1O4MZ.png\n",
            "test/ME1LQ31L.png\n",
            "test/D3BO2HI5.png\n",
            "test/B8QNNEPT.png\n",
            "test/HFCNETXQ.png\n",
            "test/SBHU1ZSZ.png\n",
            "test/SW20OFAS.png\n",
            "test/T3EP1XIX.png\n",
            "test/RB4XJ1L2.png\n",
            "test/JLX62G42.png\n",
            "test/B0D9MSW3.png\n",
            "test/RCM4XKU2.png\n",
            "test/F80GCGHT.png\n",
            "test/86V8Y0SC.png\n",
            "test/ILQF6A7I.png\n",
            "test/6PLVSXCN.png\n",
            "test/NKODQNP7.png\n",
            "test/KTZ7ARKZ.png\n",
            "test/HL3O3O7L.png\n",
            "test/M93IZMGA.png\n",
            "test/7ZH001Z8.png\n",
            "test/1M2ABAY4.png\n",
            "test/NOEVRE24.png\n",
            "test/GDNDUN8F.png\n",
            "test/DM7OTV01.png\n",
            "test/4VG8V2XQ.png\n",
            "test/TAENLN84.png\n",
            "test/UBINWE81.png\n",
            "test/4E9QXX5J.png\n",
            "test/93G6090G.png\n",
            "test/VBGY8DBN.png\n",
            "test/MKMLB0RF.png\n",
            "test/W6JG1ZZ7.png\n",
            "test/F4QJ6CZS.png\n",
            "test/WDLNTKTT.png\n",
            "test/IVAFIW08.png\n",
            "test/YADVRZ4F.png\n",
            "test/XQCW99LE.png\n",
            "test/LUQVMZI4.png\n",
            "test/OI8P16YQ.png\n",
            "test/UK1SIJTX.png\n",
            "test/7HZ7ZCU6.png\n",
            "test/2I90CVXF.png\n",
            "test/8Y5WXHIO.png\n",
            "test/65ARE49I.png\n",
            "test/CYHBPTVP.png\n",
            "test/ZP1G1CPT.png\n",
            "test/AUBSETEQ.png\n",
            "test/AVRFT21C.png\n",
            "test/S1929MWJ.png\n",
            "test/PUOPDIHI.png\n",
            "test/TFNXGFW6.png\n",
            "test/ZA3HTO2Y.png\n",
            "test/FXCPRA6J.png\n",
            "test/DUJ0G1WC.png\n",
            "test/BR0M35Y4.png\n",
            "test/UXXG2EA0.png\n",
            "test/6O65YUTI.png\n",
            "test/37IM46LN.png\n",
            "test/7ZE3QYL4.png\n",
            "test/DDE897P7.png\n",
            "test/LKV1XP8G.png\n",
            "test/1US0WKIM.png\n",
            "test/MOI5E2WE.png\n",
            "test/XEALHU7E.png\n",
            "test/DSOYL2J6.png\n",
            "test/OG8YATW2.png\n",
            "test/5NIBW3NF.png\n",
            "test/DOY9MBHE.png\n",
            "test/XXQ3WQR6.png\n",
            "test/3LFOVMKW.png\n",
            "test/MSZHDBUL.png\n",
            "test/K2S0ERRG.png\n",
            "test/0ZZP2HCQ.png\n",
            "test/EW0XNWON.png\n",
            "test/KMFZGFQ6.png\n",
            "test/PWJ3OFNB.png\n",
            "test/65Q1633G.png\n",
            "test/68RDRDA1.png\n",
            "test/1LFYH3PH.png\n",
            "test/M00IEYUT.png\n",
            "test/BH5Z9KCK.png\n",
            "test/PLX6TMID.png\n",
            "test/2PX5SOTH.png\n",
            "test/VNGKA55V.png\n",
            "test/W1I78GBG.png\n",
            "test/CR800I4J.png\n",
            "test/30HI3IQA.png\n",
            "test/KB88F2Q6.png\n",
            "test/57IECJ1X.png\n",
            "test/WWYKZY1R.png\n",
            "test/FTWT8BU4.png\n",
            "test/2EJJAAE4.png\n",
            "test/YPZ0M7QI.png\n",
            "test/50V0RCS3.png\n",
            "test/BSHIP1TB.png\n",
            "test/HBDPG9X3.png\n",
            "test/21HLT2TW.png\n",
            "test/EJGFFVUA.png\n",
            "test/3VCXMZM1.png\n",
            "test/R1P9CNSQ.png\n",
            "test/12DI4FDI.png\n",
            "test/P5EZCUBJ.png\n",
            "test/ADNVRAB1.png\n",
            "test/2QQU1DXS.png\n",
            "test/LC7ID8JZ.png\n",
            "test/YFFN7D62.png\n",
            "test/P4IOH96W.png\n",
            "test/6G0MJQH3.png\n",
            "test/TS0VZG9S.png\n",
            "test/73R67YEK.png\n",
            "test/H12IG8HA.png\n",
            "test/FMYDVWLM.png\n",
            "test/793YX7I9.png\n",
            "test/UHQDMZ3R.png\n",
            "test/0NQB472M.png\n",
            "test/ZIUND7KP.png\n",
            "test/VRQMV2QB.png\n",
            "test/9CXNMYER.png\n",
            "test/C84C7ACQ.png\n",
            "test/M3DV1RF6.png\n",
            "test/91THIT1U.png\n",
            "test/7UXH9R69.png\n",
            "test/FWGSX8PR.png\n",
            "test/MGTS7ZMB.png\n",
            "test/MAXQG26L.png\n",
            "test/F3HTF2PL.png\n",
            "test/JJ3HWJGD.png\n",
            "test/PRW9YTKS.png\n",
            "test/3HRYUXW1.png\n",
            "test/XYFZ1OYD.png\n",
            "test/Q8S1UQSY.png\n",
            "test/IS1JUS6R.png\n",
            "test/A6CNZBD0.png\n",
            "test/X16T4GOO.png\n",
            "test/YS9DXI5J.png\n",
            "test/DZ741U2Y.png\n",
            "test/W7RHF42I.png\n",
            "test/S88XFUVQ.png\n",
            "test/A9JF8TSP.png\n",
            "test/AT56K2SW.png\n",
            "test/P7VTO3FU.png\n",
            "test/O7LQVSR2.png\n",
            "test/8QJET3AQ.png\n",
            "test/9E5ELIQU.png\n",
            "test/U3UM4YEP.png\n",
            "test/HK4G2K0C.png\n",
            "test/NME3OY2C.png\n",
            "test/XDC0L4M4.png\n",
            "test/YVJO7KLU.png\n",
            "test/92NPVSCN.png\n",
            "test/IG88OUGN.png\n",
            "test/Q22Q7RBX.png\n",
            "test/YEMOMGMY.png\n",
            "test/GDUX9GZB.png\n",
            "test/KHBIJ3JV.png\n",
            "test/8AN3GEVF.png\n",
            "test/ZKUQRL35.png\n",
            "test/YVK17QW4.png\n",
            "test/RWRI6V69.png\n",
            "test/5EUOKC0D.png\n",
            "test/2U3US5I6.png\n",
            "test/0A821EZN.png\n",
            "test/H14IXCZZ.png\n",
            "test/NC17TWB3.png\n",
            "test/LM7250JG.png\n",
            "test/J2Q39SGB.png\n",
            "test/47PI4VMW.png\n",
            "test/I4KSXSKW.png\n",
            "test/TI3ITFWR.png\n",
            "test/9L76H1VE.png\n",
            "test/OSZU3MO1.png\n",
            "test/T33Q8O5V.png\n",
            "test/G2NK0KBW.png\n",
            "test/N0MWAM8W.png\n",
            "test/Q77W7ODA.png\n",
            "test/S27DOSI5.png\n",
            "test/CLUQAX50.png\n",
            "test/FJCRKUCG.png\n",
            "test/4Q62FDL5.png\n",
            "test/ZBDSHIWF.png\n",
            "test/DF0HF12D.png\n",
            "test/O77VDZUI.png\n",
            "test/PP8J6VEG.png\n",
            "test/2CNFM8FK.png\n",
            "test/DAINF4GE.png\n",
            "test/53SFYE58.png\n",
            "test/KB9VKJ4X.png\n",
            "test/OUUB94X4.png\n",
            "test/7X7QIZA6.png\n",
            "test/QE6OU9R5.png\n",
            "test/RSUMISLS.png\n",
            "test/NYO9UEUM.png\n",
            "test/6OV0NMMN.png\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LQQZx-LIA8rk"
      },
      "source": [
        "!mv /content/IDRND_FASDB_train/spoof/test /content"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZDh0d_lvBKCM",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "d6207b4c-8d37-43b7-dda1-b1244c7c63cc"
      },
      "source": [
        "tt[0].shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(512,)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2hRkGQbh64WQ"
      },
      "source": [
        "t=face_rec.calc_emb(\"/content/IDRND_FASDB_train/spoof/FT720P_G780_REDMI4X_id1_s0_60.png\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3EHCcvOmVhQO"
      },
      "source": [
        "/content/grey/real/AAE5573GP98K_id159_s0_118.png"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4YvOZTVnDCIq"
      },
      "source": [
        "t=face_rec.calc_emb(\"/content/grey/spoof/FT720P_I2269VWM_DOOX30_id1_s1_108.png\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Z03qt7pICQMF"
      },
      "source": [
        "t=np.expand_dims(t, axis=0)    "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YwZiAIH2CX1G",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "465457a9-2e5b-4678-f461-757991549f2e"
      },
      "source": [
        "p=model_rf.predict_proba(t)\n",
        "p[0][1]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.026"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9nKXBZLXBw6p"
      },
      "source": [
        "#t.reshape((1,) + t.shape) \n",
        "#t=np.array(t) \n",
        "#t.reshape(1, -1)\n",
        "\n",
        "\n",
        "#tt=t.reshape(-1, 1)\n",
        "predictions = model.predict(t)\n",
        "#predictions"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-UbOxwJD_Z3F",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "4b3acf51-2c6a-4f28-e5a6-f0df470ab52f"
      },
      "source": [
        "predictions[0][1]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9999974"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bwg2yma4sVSw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "17c056f9-e061-4537-d2bb-b532e6d1d321"
      },
      "source": [
        "!mkdir /content/testmode"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "mkdir: cannot create directory ‘/content/testmode’: File exists\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Xb0y4NJO2d8K"
      },
      "source": [
        "##  make testgrey "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i1iWJQoSP9Z7"
      },
      "source": [
        "os.chdir(\"/content/test\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "  img = Image.open(f).convert(\"L\")\n",
        "  im=img.filter(ModeFilter(size=5))\n",
        "  img1 = im.filter(GaussianBlur(radius=20))\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/testgrey/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AxO7HCLSuTxf"
      },
      "source": [
        "!mkdir /content/testfiltered"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "n8_Jr3L8t-zr"
      },
      "source": [
        "os.chdir(\"/content/test\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  if f.endswith(\"png\"):\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "    img = Image.open(f)\n",
        "#Applying the blur filter\n",
        "    img1 = img.filter(GaussianBlur(radius=30))\n",
        "    img1.save(\"/content/testfiltered/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mtH4Oez8J2Qx"
      },
      "source": [
        "!mkdir /content/testgrey"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "anHew4FIJsMi"
      },
      "source": [
        "os.chdir(\"/content/testmode\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  if f.endswith(\"png\"):\n",
        "  \n",
        "    img = Image.open(f).convert(\"L\")\n",
        "#Applying the blur filter\n",
        "    \n",
        "    img.save(\"/content/testgrey/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nvgwE4No40qI"
      },
      "source": [
        "answers=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oQ4DvgZ13_1W"
      },
      "source": [
        "dir=\"/content/testgrey\"\n",
        "for img in os.listdir(dir):\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      emb = face_rec.calc_emb(dir+\"/\"+img)\n",
        "  \n",
        "      emb=np.expand_dims(emb, axis=0)  \n",
        "      \n",
        "      predictions = model.predict(emb)\n",
        "      answers.append([img, predictions[0][1]])\n",
        "    except NameError:\n",
        "      continue"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KGVVnlkDEjp5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "2564c97f-aa58-4917-8573-99f25a54863e"
      },
      "source": [
        "len(answers)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 231
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gwfqg3YDEkRN",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "a71aa3b9-2523-43c0-f80b-4c0486f56b44"
      },
      "source": [
        "predictions[9] ccc"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1., 0.], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rJesrUpzEkRh",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 105
        },
        "outputId": "c093746f-5168-4d1f-82b7-0b52caefe025"
      },
      "source": [
        "answers[:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[['B20X4YPV.png', 0.0032353483],\n",
              " ['SAH613I4.png', 0.024759386],\n",
              " ['ALYTK9DJ.png', 0.0036492136],\n",
              " ['3OU8E1TS.png', 0.036386076],\n",
              " ['9WSF8I4H.png', 0.99736905]]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 232
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "G7yICW8gHAwV"
      },
      "source": [
        "import pandas as pd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CwrqOmA9EkRq"
      },
      "source": [
        "df1=pd.DataFrame(answers, columns=[\"0\", \"1\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hZRhEhkkQCbD"
      },
      "source": [
        "dfzap=pd.DataFrame(answers, columns=[\"0\", \"1\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yqmVMi-gQlAb"
      },
      "source": [
        "df4=pd.DataFrame([answers[0], answers[1]])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Nq7T1oBAEkRz",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "9c5d1ff2-0b3f-4ccd-c5e6-a3fdf078d32e"
      },
      "source": [
        "df1.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.2</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>B20X4YPV.png</td>\n",
              "      <td>0.00323535</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>SAH613I4.png</td>\n",
              "      <td>0.0247594</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>ALYTK9DJ.png</td>\n",
              "      <td>0.00364921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3OU8E1TS.png</td>\n",
              "      <td>0.0363861</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              0           1\n",
              "0           0.2            \n",
              "0  B20X4YPV.png  0.00323535\n",
              "1  SAH613I4.png   0.0247594\n",
              "2  ALYTK9DJ.png  0.00364921\n",
              "3  3OU8E1TS.png   0.0363861"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 239
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "U3y-QICzE4u1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "c720930a-526a-4d25-c6cf-b9efea88503b"
      },
      "source": [
        "df1.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10001, 2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 238
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Q7_JF4zaE5Sc"
      },
      "source": [
        "\n",
        "\n",
        "df1.to_csv(\"/content/doping_1535.csv\", index=False, header=None)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "brTQXLQhE5So"
      },
      "source": [
        "df.to_csv(\"/content/1027_on_arrays_df.csv\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "S9C0ZWjgE5Su"
      },
      "source": [
        "df1 = pd.DataFrame(list(zip(test_array_names, test_array)))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WavSJHKqE5S2"
      },
      "source": [
        "df2=pd.DataFrame([[round(0.2, 1), \"\"]], columns=[\"0\", \"1\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "curB9PHmE5S7"
      },
      "source": [
        "df1 = pd.concat([df2, df1])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r8wPyVL8E5TA"
      },
      "source": [
        "df1.loc[-1] = [round(0.2, 1), \"\"]  # adding a row\n",
        "df1.index = df.index + 1  # shifting index\n",
        "df1.sort_index(inplace=True) "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vDTdF9mrEkR3"
      },
      "source": [
        "with open(\"model_on_arrays_df.txt\", \"a\") as f:\n",
        "  f.write(df.to_string())"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CFC3CcDpEkR8"
      },
      "source": [
        "os.chdir(\"/content\")\n",
        "with open('resnet_based_model.txt', 'w') as f:\n",
        "    for item in sasha:\n",
        "        f.write(str(item)+'\\n')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5BPd0YVFPGxN"
      },
      "source": [
        "## regression and random forest "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oSx61sxYRdBk"
      },
      "source": [
        "dir_real='/content/grey/real'\n",
        "dir_spoof='/content/grey/spoof'"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b2c6tkTjRkzV"
      },
      "source": [
        "from arcface import ArcFace\n",
        "face_rec = ArcFace.ArcFace()\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-EHELRtHRkzf"
      },
      "source": [
        "emb_real=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W-qD7IADRkzn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "368d43a1-afd0-45be-eec9-c97bcefe1caa"
      },
      "source": [
        "len(os.listdir(dir_spoof))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8237"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GhhFgpOXRkzx"
      },
      "source": [
        "for img in os.listdir(dir_real):\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      emb = face_rec.calc_emb(dir_real+\"/\"+img)\n",
        "      emb_real.append(emb)\n",
        "    except NameError:\n",
        "      continue"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s1agPZB5Rkz4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "4093b34d-5e52-4a22-e47d-52a84e3422ab"
      },
      "source": [
        "len(emb_real)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1200"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RP23sdXjRk0A"
      },
      "source": [
        "emb_spoof=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eewLT7haRk0I"
      },
      "source": [
        "for img in os.listdir(dir_spoof):\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      emb = face_rec.calc_emb(dir_spoof+\"/\"+img)\n",
        "      emb_spoof.append(emb)\n",
        "    except NameError:\n",
        "      continue"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0tF0kFvrRk0Q"
      },
      "source": [
        "x_train=emb_real+emb_spoof"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I9sKz-GERk0Y"
      },
      "source": [
        "y_train=[1]*len(emb_real)+[0]*len(emb_spoof)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bg-RKQqt-LHU"
      },
      "source": [
        "_rf"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a4bUd3hmRk0l"
      },
      "source": [
        "X_train, X_val, Y_train, Y_val = train_test_split(x_train, y_train, test_size = 0.2, random_state=4)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wImcGqt6mMUx"
      },
      "source": [
        "from sklearn import metrics \n",
        "from sklearn.linear_model import LogisticRegression"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m50AGNgesYn3"
      },
      "source": [
        "from sklearn.tree import DecisionTreeClassifier"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EJG85TMzmb5K"
      },
      "source": [
        "logistic_regression = LogisticRegression()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FQDb-YoWAlm_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "cc92e1d0-5b25-4f3c-a73c-bae887772316"
      },
      "source": [
        "len(os.listdir(\"/content/testgrey\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yHCGMGyCsmK3"
      },
      "source": [
        "dt=DecisionTreeClassifier(max_depth=10)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dFUIgon5mpar"
      },
      "source": [
        "history=logistic_regression.fit(X_train, Y_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cToDL97anEYi"
      },
      "source": [
        "y_pred = logistic_regression.predict(X_val)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PE4Uc7HFs4Gj",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 123
        },
        "outputId": "10037444-dbe3-4831-d85f-9740635812d1"
      },
      "source": [
        "dt.fit(X_train, Y_train)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',\n",
              "                       max_depth=10, max_features=None, max_leaf_nodes=None,\n",
              "                       min_impurity_decrease=0.0, min_impurity_split=None,\n",
              "                       min_samples_leaf=1, min_samples_split=2,\n",
              "                       min_weight_fraction_leaf=0.0, presort='deprecated',\n",
              "                       random_state=None, splitter='best')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 219
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "G6WaRDaIs9A4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 158
        },
        "outputId": "f49b0993-ccc8-4ac5-8821-501cf5e2719a"
      },
      "source": [
        "y_pred=dt.predict(X_val)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-48-87e80bfdd020>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0my_pred\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_val\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'dt' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EBAAzLIEOlv0"
      },
      "source": [
        "from sklearn.ensemble  import RandomForestClassifier"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ddAsJb1qKHcA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 147
        },
        "outputId": "32b821ea-c1b3-47c3-dad5-d4c6269ee30b"
      },
      "source": [
        "model_rf = RandomForestClassifier(n_estimators=400, random_state=100, max_depth=30)\n",
        "model_rf.fit(X_train, Y_train) "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n",
              "                       criterion='gini', max_depth=30, max_features='auto',\n",
              "                       max_leaf_nodes=None, max_samples=None,\n",
              "                       min_impurity_decrease=0.1, min_impurity_split=None,\n",
              "                       min_samples_leaf=1, min_samples_split=2,\n",
              "                       min_weight_fraction_leaf=0.0, n_estimators=400,\n",
              "                       n_jobs=None, oob_score=False, random_state=100,\n",
              "                       verbose=0, warm_start=False)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vDjlwENjPPjN"
      },
      "source": [
        "y_pred=model_rf.predict(X_val)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JwjcOQC_gEsi"
      },
      "source": [
        "y_pred"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "w_QxwJ-inUQg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "5189dd98-31d4-4626-b99b-079bcd427c3c"
      },
      "source": [
        "accuracy = metrics.accuracy_score(Y_val, y_pred)\n",
        "accuracy\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.775"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GZTqnfAiU8My",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 167
        },
        "outputId": "efd8db02-373d-485a-ba95-87fe9bc256f6"
      },
      "source": [
        "len(answers)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-a73cf94fa81e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0manswers\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'answers' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sMnAaNLXVH96"
      },
      "source": [
        "answers=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hw2FtERlVH-C"
      },
      "source": [
        "dir=\"/content/testgrey\"\n",
        "for img in os.listdir(dir):\n",
        "  if img.endswith(\"png\"):\n",
        "    try:\n",
        "      emb = face_rec.calc_emb(dir+\"/\"+img)\n",
        "  \n",
        "      emb=np.expand_dims(emb, axis=0)  \n",
        "      \n",
        "      predictions = model_rf.predict_proba(emb)\n",
        "      answers.append([img, predictions[0][1]])\n",
        "    except NameError:\n",
        "      continue"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-giza8JNdM0b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e0f5c0ef-1fbb-43d6-bbdd-9a329dd8e2a0"
      },
      "source": [
        "model_rf.score(X_val, Y_val)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7055085722222223"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 271
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-M8EKB4BqppR"
      },
      "source": [
        "## #"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fFY-gh2CoqJF"
      },
      "source": [
        "import pandas as pd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DjOVV61JoqKA"
      },
      "source": [
        "df1=pd.DataFrame(answers, columns=[\"0\", \"1\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Db5HNUceoqKK"
      },
      "source": [
        "dfzap=pd.DataFrame(answers, columns=[\"0\", \"1\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zsTY3mS4oqKa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "b2954b0a-bc7d-4510-f368-3f248664f9c7"
      },
      "source": [
        "df1.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.2</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>OOQOD7BH.png</td>\n",
              "      <td>0.718</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>K4WB4T4Q.png</td>\n",
              "      <td>0.083</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>UQ6VM68R.png</td>\n",
              "      <td>0.833</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>W4P8N2FE.png</td>\n",
              "      <td>0.636</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              0      1\n",
              "0           0.2       \n",
              "0  OOQOD7BH.png  0.718\n",
              "1  K4WB4T4Q.png  0.083\n",
              "2  UQ6VM68R.png  0.833\n",
              "3  W4P8N2FE.png  0.636"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KbDSJi1hoqKg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "c54cbdc0-ee65-459d-de0f-51827e39c9c6"
      },
      "source": [
        "df1.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10001, 2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "crDRHHENoqKj"
      },
      "source": [
        "\n",
        "\n",
        "df1.to_csv(\"/content/forest.csv\", index=False, header=None)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IWVNq2onoqKt"
      },
      "source": [
        "df2=pd.DataFrame([[round(0.2, 1), \"\"]], columns=[\"0\", \"1\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TM9Uth78oqKx"
      },
      "source": [
        "df1 = pd.concat([df2, df1])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b9wYWCfI8_6y"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0KgtrgZdTS1k"
      },
      "source": [
        "from sklearn.linear_model import LinearRegression  \n",
        "from sklearn.preprocessing import PolynomialFeatures "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nPeT2wqZTVtj"
      },
      "source": [
        "polynomial_features = PolynomialFeatures(degree = 3)\n",
        "\n",
        "X_TRANSF = polynomial_features.fit_transform(X_train)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PQfnVJWsVymx",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "ffeb10e3-4762-4819-df19-ab84d4a2b963"
      },
      "source": [
        "model = LinearRegression()\n",
        "\n",
        "model.fit(X_TRANSF, Y_train)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oiL4VcsUV2vp"
      },
      "source": [
        "X_NEW_TRANSF = polynomial_features.fit_transform(X_val)\n",
        "\n",
        "Y_NEW = model.predict(X_NEW_TRANSF)\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RpOwByoizmOb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "f11d48b2-4ff4-4024-8911-8a54501165fa"
      },
      "source": [
        "accuracy = metrics.accuracy_score(Y_val, Y_NEW.round())\n",
        "accuracy_percentage = 100 * accuracy\n",
        "accuracy_percentage"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "78.2051282051282"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bXX-qFi-bT1C"
      },
      "source": [
        "## Detect+Vgg7"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0VMFD0zXjyzl"
      },
      "source": [
        "!cd /content/\n",
        "!mkdir /content//cut\n",
        "!mkdir /content/cut/spoof\n",
        "!mkdir /content/cut/real"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8xbYO-Yxew0I"
      },
      "source": [
        "\n",
        "detections = embedder.extract(\"/content/IDRND_FASDB_train/real/AA5742_id154_s0_112.png\", threshold=0.95)#\n",
        "c=detections[0][\"box\"]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HRo0dQExkbKa"
      },
      "source": [
        "from PIL import Image"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cbw48CTZZvtO"
      },
      "source": [
        "import glob"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IONqiz4PqNO7"
      },
      "source": [
        "!pip install keras-facenet"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7d_T27Q7qJUJ"
      },
      "source": [
        "from keras_facenet import FaceNet"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WbYGFGRZc1-L"
      },
      "source": [
        "embedder = FaceNet()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sCkPpAR1cTbc"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  if f.endswith(\"png\"):\n",
        "  \n",
        "    detections = embedder.extract(f, threshold=0.95)\n",
        " \n",
        "    i=load_img(f)\n",
        "    try:\n",
        "      c=detections[0][\"box\"]\n",
        "    except IndexError:\n",
        "      pass\n",
        "    im_crop = i.crop((c))\n",
        "    im_crop.save(\"/content/cut/real/\"+f)\n",
        "    \n",
        "    \n",
        " "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YNWFZEQ_Zkmo"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  if f.endswith(\"png\"):\n",
        "  \n",
        "    detections = embedder.extract(f, threshold=0.95)\n",
        "    i=load_img(f)\n",
        "  try:\n",
        "    c=detections[0][\"box\"]\n",
        "  except IndexError:\n",
        "    pass\n",
        "\n",
        "    im_crop = i.crop((c))\n",
        "    im_crop.save(\"/content/cut/spoof/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MUOVxAMMfARP",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "f0845381-cb67-4cc4-eeac-7c3971ebc674"
      },
      "source": [
        "len(os.listdir(\"/content/detected/spoof\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1200"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 164
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GsFnVF3x0AkD"
      },
      "source": [
        "## from here"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "C2QxJAry5SDM"
      },
      "source": [
        "pip install keras-facenet"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fDd3IsZ-zRvc"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/real\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  if f.endswith(\"png\"):\n",
        "  \n",
        "   \n",
        "    try:\n",
        "      im = load_img(f).convert(\"L\")\n",
        "    except PIL.UnidentifiedImageError:\n",
        "      continue\n",
        "    \n",
        "    x = img_to_array(im) \n",
        "    x[x > x.mean()] = 255\n",
        "    \n",
        "    save_img(\"/content/detected/real/\"+f, x)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ti-JUBNm2uoq"
      },
      "source": [
        "os.chdir(\"/content/IDRND_FASDB_train/spoof\")\n",
        "for f in glob.glob(\"*.png\")[:1200]:\n",
        "  if f.endswith(\"png\"):\n",
        "  \n",
        "   \n",
        "    try:\n",
        "      im = load_img(f).convert(\"L\")\n",
        "    except PIL.UnidentifiedImageError:\n",
        "      continue\n",
        "    \n",
        "    x = img_to_array(im) \n",
        "    x[x > x.mean()] = 255\n",
        "    \n",
        "    save_img(\"/content/detected/spoof/\"+f, x)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "y1Zjo5512-6o"
      },
      "source": [
        "!rm -r '/content/detected/real/.ipynb_checkpoints'"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5aihhDk84uoo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "36814bd7-63ee-455d-a5c2-94452009f42d"
      },
      "source": [
        "!rm -r '/content/detected/spoof/.ipynb_checkpoints'"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "rm: cannot remove '/content/detected/spoof/.ipynb_checkpoints': No such file or directory\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5FHVlCuqNnfs"
      },
      "source": [
        "################################################################################################size=224, 224"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dePw-H2hRSos"
      },
      "source": [
        "i=load_img(\"/content/IDRND_FASDB_train/real/AA5742_id154_s0_112.png\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ktVVgaCeR7gG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "f568ecd9-adbf-4e00-a544-a10ecc03b75f"
      },
      "source": [
        "i=load_img\n",
        "detections = embedder.extract(\"/content/IDRND_FASDB_train/real/AA5742_id154_s0_112.png\", threshold=0.95)#\n",
        "c=detections[0][\"box\"]\n",
        "im_crop = i.crop((c))\n",
        "im_crop.save('/content/new.png', quality=95)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[127, 34, 385, 545]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HWxZ2kq6ZocY"
      },
      "source": [
        "im_crop = i.crop((c))\n",
        "im_crop.save('/content/new.png', quality=95)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KnoRcLwBTkL1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "0664229b-4cf3-4002-ad88-6cb3057dac54"
      },
      "source": [
        "i.size"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(656, 656)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k92Gs0Krtx_y"
      },
      "source": [
        "\n",
        "arr = np.array(Image.open('/content/iiii.png'))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "soRt0aWqvmXq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "8a75e3d1-5774-4c01-e574-b5ca2c5aed02"
      },
      "source": [
        "arr.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(224, 224)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zCWCqgAovp2s"
      },
      "source": [
        "arr[arr > arr.mean()] = 255"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YXkcShxKRpkz"
      },
      "source": [
        "#######################################################################################################"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "L2DONADO781v"
      },
      "source": [
        "x=np.zeros([224, 224])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-HRnWlbO9V6j"
      },
      "source": [
        "new=np.c_[arr, x]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FRSvA0na6XrW"
      },
      "source": [
        "from keras.preprocessing.sequence import pad_sequences"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dWFXkgm46UJy"
      },
      "source": [
        "padded=pad_sequences(arr, [224, 224], padding=\"post\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mQqq5BzjvxyI"
      },
      "source": [
        "image=Image.fromarray(arr)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b_a4OAZrtZOf"
      },
      "source": [
        "from tensorflow.keras.applications.vgg16 import VGG16\n",
        "from tensorflow.keras.preprocessing import image\n",
        "from tensorflow.keras.applications.vgg16 import preprocess_input\n",
        "from tensorflow.keras.models import Model"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YnjM35UBep8G"
      },
      "source": [
        "import random"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f8v8TWCZemVk"
      },
      "source": [
        "for f in random.sample(os.listdir(\"/content/IDRND_FASDB_train/spoof\"), 6000):\n",
        "   os.remove(f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AQminZwde4bY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "9ab3ffd0-435c-452c-9b35-c11e5ae47b4e"
      },
      "source": [
        "len(os.listdir(\"/content/IDRND_FASDB_train/spoof\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2238"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 169
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JfggLzTt0ijC"
      },
      "source": [
        "train_datagen = ImageDataGenerator(preprocessing_function=preprocess_input, rotation_range=0.1, height_shift_range=0.1, \n",
        "                                   width_shift_range=0.1,\n",
        "                                   \n",
        "                                   validation_split=0.1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i5h0ZBkPeyU2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "87eab08e-ecf1-4a55-c829-0ac9ef0ff55e"
      },
      "source": [
        "\n",
        "train_generator = train_datagen.flow_from_directory(\n",
        "    '/content/IDRND_FASDB_train',\n",
        "    target_size=(224, 224), shuffle=True, \n",
        "    batch_size=28, #64\n",
        "    class_mode='categorical', #class_mode='binary'\n",
        "    classes=[\"real\", \"spoof\"],\n",
        "    subset='training') # set as training data\n",
        "\n",
        "validation_generator = train_datagen.flow_from_directory(\n",
        "    '/content/IDRND_FASDB_train',\n",
        "    target_size=(224, 224), shuffle=True,\n",
        "    batch_size=28,\n",
        "    class_mode='categorical', #class_mode='binary'\n",
        "    classes=[\"real\", \"spoof\"],\n",
        "    subset='validation')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Found 2097 images belonging to 2 classes.\n",
            "Found 232 images belonging to 2 classes.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v5HAd0GQez4P"
      },
      "source": [
        "vgg16 = VGG16(weights=None, include_top=False, input_shape=(224, 224, 3)) #weights=\"imagenet\"\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "clnY_yUgez4a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e25e4594-5233-4617-85a7-96feb259ab9e"
      },
      "source": [
        "len(vgg16.layers)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "19"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 226
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JbctcrC_ez4g"
      },
      "source": [
        "for layer in vgg16.layers[:10]: \n",
        "  layer.trainable=False"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "t3X8bv4qez4l"
      },
      "source": [
        "vgg16.summary()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "A2XQIrc1ez4o"
      },
      "source": [
        "\n",
        "base_layer = vgg16.get_layer('block5_pool').output\n",
        "x=Flatten()(base_layer)\n",
        "x = Dense(1024, activation='relu')(x)\n",
        "x = Dense(1024, activation='relu')(x)\n",
        "x = Dense(2, activation='softmax')(x)\n",
        "\n",
        "my_model = Model(inputs=vgg16.input, outputs=x) \n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "U0BBrkADASp5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "201b362e-164f-47a5-a1bc-9a076bdf5d3c"
      },
      "source": [
        "len(my_model.layers)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "23"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 163
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "S8wugEZaAaOE"
      },
      "source": [
        "for layer in my_model.layers[:17]: \n",
        "  layer.trainable=False"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OqpBKcRZ7hgM"
      },
      "source": [
        "\n",
        "base_layer = vgg16.get_layer(\"fc2\").output #vgg16.get_layer('block5_pool').output\n",
        "\n",
        "x = Dense(2, activation='softmax')(base_layer)\n",
        "\n",
        "my_model = Model(inputs=vgg16.input, outputs=x) "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cvB5ET--isSy"
      },
      "source": [
        "my_model.summary()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8zSqfqX7r2K6"
      },
      "source": [
        "сheckpoint1 = ModelCheckpoint('cut.h5', \n",
        "                              monitor='val_accuracy', \n",
        "                              save_best_only=True,\n",
        "                              verbose=1)\n",
        "#checkpoint=tf.keras.callbacks.EarlyStopping(patience=2, monitor=\"val_accuracy\", verbose=1, \n",
        "                                            #restore_best_weights=True, mode=\"auto\")\n",
        "\n",
        "my_model.compile(loss=\"binary_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n",
        "  "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T4jaA_CSr2LF"
      },
      "source": [
        "\n",
        "history = my_model.fit(\n",
        "    train_generator, steps_per_epoch=36,\n",
        "    \n",
        "    validation_data = validation_generator,\n",
        "    \n",
        "    epochs = 10, verbose=1,\n",
        "    callbacks=[сheckpoint1])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jpkBK3RO5pNo"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Tbo0WqPzr2LI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        },
        "outputId": "4c44bb92-8c8e-4bbe-b3b6-85373119d221"
      },
      "source": [
        "plt.plot(history.history['accuracy'], \n",
        "         label='Доля верных ответов на обучающем наборе')\n",
        "plt.plot(history.history['val_accuracy'], \n",
        "         label='Доля верных ответов на проверочном наборе')\n",
        "plt.xlabel('Эпоха')\n",
        "plt.ylabel('Верные ответы')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yutQugrO-bX3"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uIq7by9v-b_o",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 82
        },
        "outputId": "6dc072c8-9586-4465-879d-8e1fb28ca4a4"
      },
      "source": [
        "!gdown --id 1teaLCo-F-5RCQM8Puxqbk13bI0evqIzg"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading...\n",
            "From: https://drive.google.com/uc?id=1teaLCo-F-5RCQM8Puxqbk13bI0evqIzg\n",
            "To: /content/IDRND_FASDB_train/spoof/test.tar.gz\n",
            "1.71GB [00:25, 67.1MB/s]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zpqB4rrW-b_1"
      },
      "source": [
        "!mv /content/IDRND_FASDB_train/spoof/test.tar.gz /content"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pJ504tvh-b_9"
      },
      "source": [
        "!cd /content"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FxP4y2Yg-cAB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "4c7154e5-54ee-49d3-bee2-5739574b3cb0"
      },
      "source": [
        "!tar -xvzf \"/content/test.tar.gz\""
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43mВыходные данные были обрезаны до нескольких последних строк (5000).\u001b[0m\n",
            "test/SJILUT5Q.png\n",
            "test/22BN8P1F.png\n",
            "test/MCL2E8D1.png\n",
            "test/GCD80IZY.png\n",
            "test/EHRXFXQF.png\n",
            "test/O17ZXG8S.png\n",
            "test/TPFUO53O.png\n",
            "test/Y2NFCKTP.png\n",
            "test/A2FL72P9.png\n",
            "test/OQ1WB5SV.png\n",
            "test/PP9O4A6C.png\n",
            "test/WRR6N6JC.png\n",
            "test/XZHE16WA.png\n",
            "test/YEKNM7DD.png\n",
            "test/C1CICGG5.png\n",
            "test/9RZ7UN85.png\n",
            "test/UN1BBB1S.png\n",
            "test/6A4SICHW.png\n",
            "test/UMCN8TTK.png\n",
            "test/7CTGJXTP.png\n",
            "test/Y81P02JH.png\n",
            "test/AOQJFPP7.png\n",
            "test/CEH69DL7.png\n",
            "test/WB6WOVTU.png\n",
            "test/5PU1NIDZ.png\n",
            "test/V6RO0EU5.png\n",
            "test/T56WFIT7.png\n",
            "test/XHIG0GI6.png\n",
            "test/JPII8FI5.png\n",
            "test/43PSGS3J.png\n",
            "test/DC38VMSF.png\n",
            "test/1979MHH3.png\n",
            "test/S0NO6U1B.png\n",
            "test/N95IT95A.png\n",
            "test/Q0N7UQZV.png\n",
            "test/A3MQSQ20.png\n",
            "test/4L9IKW0U.png\n",
            "test/YY6YAPKU.png\n",
            "test/ZPL5RV9H.png\n",
            "test/A5VDG4YC.png\n",
            "test/9Q78QMUT.png\n",
            "test/OA1XFCOO.png\n",
            "test/3WCVWNA6.png\n",
            "test/U2RXZAND.png\n",
            "test/XXYN87DV.png\n",
            "test/7G66F466.png\n",
            "test/J7J9FULL.png\n",
            "test/MCWVSSTQ.png\n",
            "test/MBW22QQR.png\n",
            "test/GGGY773E.png\n",
            "test/UTKR0CFS.png\n",
            "test/PR5ZOD33.png\n",
            "test/MEJ5A7KS.png\n",
            "test/HO43Z1T7.png\n",
            "test/LJFJLLWK.png\n",
            "test/9F00S8MU.png\n",
            "test/4AX7ALEG.png\n",
            "test/CSUZQ45M.png\n",
            "test/5CIWJ64X.png\n",
            "test/LZ1JTJPH.png\n",
            "test/ZB9IV4AZ.png\n",
            "test/IDO1WI9P.png\n",
            "test/GB1XJBE4.png\n",
            "test/YUXP55CF.png\n",
            "test/L5W72LMI.png\n",
            "test/SMPZUU70.png\n",
            "test/BFC3YX0F.png\n",
            "test/F6H1NCR0.png\n",
            "test/PNIL1BMY.png\n",
            "test/CAVU6WGK.png\n",
            "test/AO1YIZJX.png\n",
            "test/YBO9YS12.png\n",
            "test/9JCWHANS.png\n",
            "test/FPPXAEMI.png\n",
            "test/9B8YD2DR.png\n",
            "test/DR5A38X5.png\n",
            "test/DDQ73QBI.png\n",
            "test/XUM1BT63.png\n",
            "test/RY94S86I.png\n",
            "test/4W3HIXVY.png\n",
            "test/QS5LI5DG.png\n",
            "test/JZOGFY5R.png\n",
            "test/Z9WTM49V.png\n",
            "test/L8AM7X3X.png\n",
            "test/MS8M4LT5.png\n",
            "test/1UWX8VO5.png\n",
            "test/1864JLCJ.png\n",
            "test/E1EXL97B.png\n",
            "test/YI3WRR7C.png\n",
            "test/UNJL72D3.png\n",
            "test/YHCXD31R.png\n",
            "test/IRYUI1JX.png\n",
            "test/CUCA2TOF.png\n",
            "test/XOEGEGGO.png\n",
            "test/74MYHXC2.png\n",
            "test/4FJ5J9TX.png\n",
            "test/WI9XZETL.png\n",
            "test/9JPC3JZT.png\n",
            "test/6NJ2B8UI.png\n",
            "test/OM6SP5W1.png\n",
            "test/G2YKI5SM.png\n",
            "test/IA19PGAQ.png\n",
            "test/3L9OQ8A2.png\n",
            "test/271TRZFE.png\n",
            "test/CQ3H9W6V.png\n",
            "test/2QVDPA3Z.png\n",
            "test/LBMTO6IM.png\n",
            "test/Y7RKEZVP.png\n",
            "test/9UAMJDZG.png\n",
            "test/KB9YJ6NH.png\n",
            "test/TI5BC0RH.png\n",
            "test/DFSS5WFF.png\n",
            "test/2ZK353SB.png\n",
            "test/5QRVS5PH.png\n",
            "test/C9C9TGVQ.png\n",
            "test/J5VP0KU5.png\n",
            "test/T6RMZ67E.png\n",
            "test/X5A34A5L.png\n",
            "test/BVSN8TI6.png\n",
            "test/SDTQ3UUD.png\n",
            "test/HZ8E6HP0.png\n",
            "test/ITLREMJR.png\n",
            "test/9SWYIZR9.png\n",
            "test/12OXXGZA.png\n",
            "test/9X6IB99U.png\n",
            "test/8SZ1REOM.png\n",
            "test/QXG1Y87N.png\n",
            "test/F6XFH79E.png\n",
            "test/R7ZCOCA9.png\n",
            "test/I0VJS7T3.png\n",
            "test/FUY8KBQX.png\n",
            "test/DAG1L8WE.png\n",
            "test/9R4OE7GZ.png\n",
            "test/6LW9MBEK.png\n",
            "test/JCJUA3Z3.png\n",
            "test/PSEAOTBN.png\n",
            "test/XX15U47O.png\n",
            "test/X8YQKU6N.png\n",
            "test/N0DB1A93.png\n",
            "test/DR03LFGE.png\n",
            "test/N7LULG7J.png\n",
            "test/IF3047E9.png\n",
            "test/BHC8RLPP.png\n",
            "test/MAGR0515.png\n",
            "test/C24FCGRP.png\n",
            "test/T3RTC75E.png\n",
            "test/GU4GWPX9.png\n",
            "test/CZA117Y0.png\n",
            "test/TD6U8QBF.png\n",
            "test/UCX6MRYN.png\n",
            "test/2VZDB7DE.png\n",
            "test/CU06TWKB.png\n",
            "test/NU2G1F21.png\n",
            "test/KX6JJTNT.png\n",
            "test/83L8HJGI.png\n",
            "test/8QQBGDMR.png\n",
            "test/DYDTMI7S.png\n",
            "test/4HY1K779.png\n",
            "test/T79OAV24.png\n",
            "test/GD0MUIZD.png\n",
            "test/KGRGI6C8.png\n",
            "test/S11CIRV4.png\n",
            "test/V8GHLTQY.png\n",
            "test/ZXMWMAKG.png\n",
            "test/V9NXCK8W.png\n",
            "test/76CLARFM.png\n",
            "test/K5FA9OIL.png\n",
            "test/XWMNWC1A.png\n",
            "test/JZN27YQS.png\n",
            "test/S3K7URUA.png\n",
            "test/F1HK0XR4.png\n",
            "test/369WI4TS.png\n",
            "test/M3B7LUDJ.png\n",
            "test/7RNNNKME.png\n",
            "test/1J4B9GWG.png\n",
            "test/SPNF8E33.png\n",
            "test/J76VMG2X.png\n",
            "test/FF9VRJ0F.png\n",
            "test/1BJV32SN.png\n",
            "test/NL6YXDLJ.png\n",
            "test/A0TJU437.png\n",
            "test/66C3VJI9.png\n",
            "test/DFXBDI13.png\n",
            "test/XVR56HMD.png\n",
            "test/FEZEMTZ9.png\n",
            "test/NO07KZHD.png\n",
            "test/EF4TLWBU.png\n",
            "test/G44RYXYK.png\n",
            "test/WFSHKZJ5.png\n",
            "test/NO07FQDS.png\n",
            "test/TSVFLJPV.png\n",
            "test/0G4KXE2E.png\n",
            "test/WBO2HPEX.png\n",
            "test/6OAB8CLH.png\n",
            "test/5888IC0M.png\n",
            "test/ZHHL03L8.png\n",
            "test/92UM02T9.png\n",
            "test/BSWQ9B7X.png\n",
            "test/WSDMTQSF.png\n",
            "test/N9W7VD76.png\n",
            "test/6UG4RK1B.png\n",
            "test/7JWTY5A1.png\n",
            "test/KXJOAWUB.png\n",
            "test/FY0IA20V.png\n",
            "test/K34SH728.png\n",
            "test/Z025ENSB.png\n",
            "test/5E7C350N.png\n",
            "test/7M6KMSXG.png\n",
            "test/RE1NJ6OG.png\n",
            "test/4IC06SML.png\n",
            "test/WBNA1BJT.png\n",
            "test/6AND4UAZ.png\n",
            "test/I387A6YO.png\n",
            "test/J84F680C.png\n",
            "test/48SPYT14.png\n",
            "test/QMFHZUA8.png\n",
            "test/YVA03OKZ.png\n",
            "test/L9QLPLLH.png\n",
            "test/6C3IV89B.png\n",
            "test/J0D6PSLZ.png\n",
            "test/RCU76TUV.png\n",
            "test/ZV0MVBFQ.png\n",
            "test/7WJX1OYK.png\n",
            "test/CIKBS1MQ.png\n",
            "test/ZZK5MPVA.png\n",
            "test/4DOJ69VY.png\n",
            "test/E2MZXBX5.png\n",
            "test/5Q1MEY3A.png\n",
            "test/BZO9YRON.png\n",
            "test/PVYE8JLT.png\n",
            "test/UGA85GBN.png\n",
            "test/PRHJ03JY.png\n",
            "test/NJIYLB8G.png\n",
            "test/HBYS69ZN.png\n",
            "test/0CFVRE6U.png\n",
            "test/EWPYCNND.png\n",
            "test/1EN1XVC4.png\n",
            "test/YRCAR8IV.png\n",
            "test/RPEPPSC0.png\n",
            "test/1QHYUWVF.png\n",
            "test/STL0A3GP.png\n",
            "test/VQOT1LNY.png\n",
            "test/HMQFI9FN.png\n",
            "test/ACBBS10X.png\n",
            "test/PHLUL84N.png\n",
            "test/27DKN79T.png\n",
            "test/68YW1SX8.png\n",
            "test/CFOBJVPE.png\n",
            "test/CRIRB70E.png\n",
            "test/PTP2305H.png\n",
            "test/M3AFDIVF.png\n",
            "test/VHEOZD27.png\n",
            "test/E4WBU4VK.png\n",
            "test/J161MUFJ.png\n",
            "test/LCORFMTY.png\n",
            "test/978CTK47.png\n",
            "test/Z67B2Z0V.png\n",
            "test/C56MY9I2.png\n",
            "test/GVUQBIZ4.png\n",
            "test/HTKZLNXV.png\n",
            "test/L9PT8FBR.png\n",
            "test/PDJ4T5DI.png\n",
            "test/VBBM0D8Q.png\n",
            "test/NN79E257.png\n",
            "test/SXMCRGWH.png\n",
            "test/4JY91SUF.png\n",
            "test/1ZL85PO1.png\n",
            "test/7EVRLOTN.png\n",
            "test/1KDAQK93.png\n",
            "test/GHEJ4HPS.png\n",
            "test/NR1I3PIX.png\n",
            "test/GA8LPLUE.png\n",
            "test/JSXBDF8I.png\n",
            "test/CNUCJC29.png\n",
            "test/CF7CPG8I.png\n",
            "test/KC66VAEK.png\n",
            "test/CW2XFC40.png\n",
            "test/AF517CT0.png\n",
            "test/AZ6JE40I.png\n",
            "test/BQ1DNYBB.png\n",
            "test/LZ5IDYFC.png\n",
            "test/EKZ2DU6Q.png\n",
            "test/9ZNLPZ93.png\n",
            "test/TTEUH1S0.png\n",
            "test/3Q5OJJKZ.png\n",
            "test/5BJ1TB0A.png\n",
            "test/2BZS2MCE.png\n",
            "test/8Y1LSWE1.png\n",
            "test/ZCMWMXGL.png\n",
            "test/BRY8KQGQ.png\n",
            "test/Y26LMTAN.png\n",
            "test/YSGK3R00.png\n",
            "test/N6P2AO65.png\n",
            "test/3C950HQQ.png\n",
            "test/RSO62RDX.png\n",
            "test/C0RV0QGD.png\n",
            "test/BOXPT0LJ.png\n",
            "test/S77R6JI4.png\n",
            "test/T6TD2CI4.png\n",
            "test/F2O0ZDW7.png\n",
            "test/H2SS9ADA.png\n",
            "test/EXBEIAW7.png\n",
            "test/KXCBIRHX.png\n",
            "test/LVOE8NU8.png\n",
            "test/T6ORMZJH.png\n",
            "test/GO2X9CBW.png\n",
            "test/T6X2E7U5.png\n",
            "test/FB00YP2F.png\n",
            "test/1PEWS2FS.png\n",
            "test/I8VD0NFN.png\n",
            "test/OXUG4VZM.png\n",
            "test/EW9XPDE9.png\n",
            "test/YUTXRGQ3.png\n",
            "test/5DTSNY7K.png\n",
            "test/BEO851S1.png\n",
            "test/VPAUKWXJ.png\n",
            "test/JF2X1T44.png\n",
            "test/B0EZ86P7.png\n",
            "test/6OSLZ18S.png\n",
            "test/Q9EOBQ4J.png\n",
            "test/XW9YEAK5.png\n",
            "test/VTI51M8J.png\n",
            "test/N1QHJ92M.png\n",
            "test/NFF6I5U2.png\n",
            "test/87YP8SOQ.png\n",
            "test/Z3ENC77F.png\n",
            "test/UHU5JWPY.png\n",
            "test/PBLWRTQ5.png\n",
            "test/9FRZG29V.png\n",
            "test/MBWBEYEQ.png\n",
            "test/BZ594SKS.png\n",
            "test/CYYU6MWM.png\n",
            "test/5LFAFXCF.png\n",
            "test/MXMFGORH.png\n",
            "test/U55NX981.png\n",
            "test/1GBVG3C5.png\n",
            "test/O1FG28NW.png\n",
            "test/DZ9SEWN7.png\n",
            "test/1T2TNXWM.png\n",
            "test/I1R7SG9D.png\n",
            "test/SQE13NBM.png\n",
            "test/HULAVIC2.png\n",
            "test/QJRBBLVD.png\n",
            "test/PM3TC408.png\n",
            "test/2P0SFK9S.png\n",
            "test/LUOFT1T6.png\n",
            "test/USQ8MF3A.png\n",
            "test/NM6J45G8.png\n",
            "test/U7RJ8BJY.png\n",
            "test/LKSEVB89.png\n",
            "test/XQ09I2WP.png\n",
            "test/VBCE6463.png\n",
            "test/7658LO1P.png\n",
            "test/V1CRNSCT.png\n",
            "test/YJM5EV81.png\n",
            "test/G7AN8VTT.png\n",
            "test/GXXR6NLF.png\n",
            "test/KJ02V9CN.png\n",
            "test/6U7IQG48.png\n",
            "test/15FTPZQ5.png\n",
            "test/UBZRSUZZ.png\n",
            "test/QQQS45US.png\n",
            "test/J9A1RRD9.png\n",
            "test/ERBS6WAZ.png\n",
            "test/05K8W8IB.png\n",
            "test/2TB0RVSX.png\n",
            "test/92ZVO3K2.png\n",
            "test/DPT3Q3L4.png\n",
            "test/J6MK6HRH.png\n",
            "test/R96SDTGL.png\n",
            "test/TETFIB7M.png\n",
            "test/QSNUCKDV.png\n",
            "test/XDVSW8EE.png\n",
            "test/RVY21IR7.png\n",
            "test/GPT7WFH0.png\n",
            "test/IS52LY9T.png\n",
            "test/SL0RSMIK.png\n",
            "test/J6F3WDDQ.png\n",
            "test/KDNFRAZN.png\n",
            "test/ULK0VYI4.png\n",
            "test/7VV8RYFN.png\n",
            "test/DOHS5WYS.png\n",
            "test/NK72TJAM.png\n",
            "test/NW5V8SSM.png\n",
            "test/V8SLCECC.png\n",
            "test/MBNJ5WL1.png\n",
            "test/O148V9G5.png\n",
            "test/WKCXJC4P.png\n",
            "test/PPEUJB0L.png\n",
            "test/IVLN21PY.png\n",
            "test/5ZCHLJAP.png\n",
            "test/GOL0PAPW.png\n",
            "test/P6B8HCYF.png\n",
            "test/UQG3TSP3.png\n",
            "test/H19FWT9E.png\n",
            "test/GF4XZ9QV.png\n",
            "test/O3RFJM4D.png\n",
            "test/EPS0YN84.png\n",
            "test/MSOLTHBU.png\n",
            "test/ASAKS5OW.png\n",
            "test/ENDAKIRD.png\n",
            "test/PQSG6DO0.png\n",
            "test/ZEW7N3HE.png\n",
            "test/AQ76R4X8.png\n",
            "test/MDO8Z73G.png\n",
            "test/FSRQ174N.png\n",
            "test/IFCJ09HK.png\n",
            "test/1HDCMACC.png\n",
            "test/WWRG7ZSD.png\n",
            "test/LEUPAYLT.png\n",
            "test/XJZ8PR21.png\n",
            "test/RV6SGCV4.png\n",
            "test/DM6WVCW8.png\n",
            "test/DQL6YV9U.png\n",
            "test/LMV0Z8RB.png\n",
            "test/WTWT9UI9.png\n",
            "test/CHJA00DS.png\n",
            "test/T1S6OLLJ.png\n",
            "test/30XZEV5P.png\n",
            "test/9D28MH8E.png\n",
            "test/94JRUE4T.png\n",
            "test/ZCVGVR4B.png\n",
            "test/399Z6U1N.png\n",
            "test/VJI6EWPL.png\n",
            "test/7EW0JXVB.png\n",
            "test/VJXY72HP.png\n",
            "test/9IW9S3RB.png\n",
            "test/34VU45Z6.png\n",
            "test/EL4Q6GDS.png\n",
            "test/WYL1UUB0.png\n",
            "test/35DG6VBL.png\n",
            "test/RJVF0YTL.png\n",
            "test/FMC9YCIA.png\n",
            "test/B16T60AF.png\n",
            "test/DA8ZGO0U.png\n",
            "test/IP9RU5XO.png\n",
            "test/DLIQPJAP.png\n",
            "test/P9KFJHYQ.png\n",
            "test/6BCU9X1H.png\n",
            "test/AR288TFQ.png\n",
            "test/4WSQAHZK.png\n",
            "test/58WACMXY.png\n",
            "test/NW28XMPE.png\n",
            "test/IUNI5F1O.png\n",
            "test/OTHVI1W3.png\n",
            "test/5DWWOLAM.png\n",
            "test/GYQFYXD3.png\n",
            "test/HZOUL3RY.png\n",
            "test/VHGAMD7D.png\n",
            "test/2WX31PNJ.png\n",
            "test/U6DQ247P.png\n",
            "test/B797UNZ7.png\n",
            "test/4SNJTBML.png\n",
            "test/3NTMLH93.png\n",
            "test/QRO0ZF8T.png\n",
            "test/BTKZXGWT.png\n",
            "test/WDDGEUQ9.png\n",
            "test/1ZAUYDG7.png\n",
            "test/6K4N77E5.png\n",
            "test/FX9XSN1V.png\n",
            "test/6HDXNO1U.png\n",
            "test/QQ54RV4G.png\n",
            "test/2V3BUP0U.png\n",
            "test/1TSYX0YC.png\n",
            "test/JP7W30F2.png\n",
            "test/5Z40B65Q.png\n",
            "test/1KSS8YA9.png\n",
            "test/OITE08HN.png\n",
            "test/S42G4D05.png\n",
            "test/6N8MKKY7.png\n",
            "test/1YMJ35KT.png\n",
            "test/848HEZXZ.png\n",
            "test/19PPXP5N.png\n",
            "test/20WNZ9ND.png\n",
            "test/W8TTDLJY.png\n",
            "test/2T3BKW5C.png\n",
            "test/18D4LOGD.png\n",
            "test/BUM1A71C.png\n",
            "test/QIJ7PBAQ.png\n",
            "test/387Y81E8.png\n",
            "test/LIJZZ5IZ.png\n",
            "test/LHBPDVUI.png\n",
            "test/XAOSWHH5.png\n",
            "test/EKUBOIHL.png\n",
            "test/CP8W6MLJ.png\n",
            "test/G2K26C90.png\n",
            "test/ZZFN9V20.png\n",
            "test/4XYH8WHD.png\n",
            "test/GQXLR553.png\n",
            "test/WR5WD4JQ.png\n",
            "test/W22DK7CA.png\n",
            "test/TEMZ1LLT.png\n",
            "test/PAZGRJ0R.png\n",
            "test/VQXMY6ZN.png\n",
            "test/WSLMLA15.png\n",
            "test/29GZBZ85.png\n",
            "test/62ZX8WRB.png\n",
            "test/6ZT5R9XD.png\n",
            "test/A1I38KID.png\n",
            "test/A14E0XBX.png\n",
            "test/I7D4PLLG.png\n",
            "test/VEGKJFHP.png\n",
            "test/88DBAUGJ.png\n",
            "test/H20ESXEL.png\n",
            "test/GFK6MWR9.png\n",
            "test/6UVP28ZH.png\n",
            "test/C7V854CH.png\n",
            "test/KLOYQ30H.png\n",
            "test/ATQ4M86T.png\n",
            "test/BMVHOIWU.png\n",
            "test/MGTL21IL.png\n",
            "test/VOZWYNSC.png\n",
            "test/KO0ZJFIM.png\n",
            "test/T69SN3XG.png\n",
            "test/DSOITL3U.png\n",
            "test/A2YQ41SU.png\n",
            "test/2UYG8D6G.png\n",
            "test/UGMARKA7.png\n",
            "test/ND2XEZS5.png\n",
            "test/KMC8K6C9.png\n",
            "test/0SOQZDZ2.png\n",
            "test/8Q6MUDF8.png\n",
            "test/B9CQG19E.png\n",
            "test/SYHQE2K7.png\n",
            "test/MJX4G7B2.png\n",
            "test/EJU57CWL.png\n",
            "test/P8VHI43C.png\n",
            "test/KURIPEDA.png\n",
            "test/9LBHX7J3.png\n",
            "test/VRSIW511.png\n",
            "test/HSJHJCX6.png\n",
            "test/NDFISNTE.png\n",
            "test/QBT5BWZQ.png\n",
            "test/U4VWMRTM.png\n",
            "test/QJAYYCMR.png\n",
            "test/M6KVMVNH.png\n",
            "test/W10LHRPL.png\n",
            "test/PEG6YLDQ.png\n",
            "test/I9YHA9DR.png\n",
            "test/M0ZKM2CC.png\n",
            "test/TDZ1R4M9.png\n",
            "test/C48450MN.png\n",
            "test/5KSYYZIF.png\n",
            "test/2QN5PE5M.png\n",
            "test/ZQPNK9DD.png\n",
            "test/GNKDUCIT.png\n",
            "test/KS0VFCJR.png\n",
            "test/PT6Y6CTO.png\n",
            "test/039UOUG3.png\n",
            "test/E9OQ9E3N.png\n",
            "test/RYP9PCVJ.png\n",
            "test/O8GEX9RQ.png\n",
            "test/BL56SF2N.png\n",
            "test/J9RD56EY.png\n",
            "test/NP4QNHL3.png\n",
            "test/3VQHDHP7.png\n",
            "test/ZVNXIL3I.png\n",
            "test/SO16J27U.png\n",
            "test/V07TXRSD.png\n",
            "test/U04UFVJF.png\n",
            "test/D4SEMH1I.png\n",
            "test/L7Z6PUG0.png\n",
            "test/FRNKXLMJ.png\n",
            "test/W5VXG1SA.png\n",
            "test/3NR0EE4L.png\n",
            "test/LYQMVCKI.png\n",
            "test/I5IYT1GL.png\n",
            "test/9SUS03TD.png\n",
            "test/A241MAE1.png\n",
            "test/EZM66PPF.png\n",
            "test/LBJG89MZ.png\n",
            "test/RT4EVCEJ.png\n",
            "test/UNY2V1XJ.png\n",
            "test/EQPGBPPN.png\n",
            "test/TWRGSXGK.png\n",
            "test/P8R8PGAT.png\n",
            "test/YR992I6J.png\n",
            "test/BE6O8LNH.png\n",
            "test/J6B3LNU4.png\n",
            "test/0B1992BA.png\n",
            "test/1OGL3TK6.png\n",
            "test/T2K26QGV.png\n",
            "test/XWFRTY27.png\n",
            "test/VV8I1PFY.png\n",
            "test/FGQNEL6O.png\n",
            "test/0HDE1NJR.png\n",
            "test/5X2SH9KQ.png\n",
            "test/E4J4I3CO.png\n",
            "test/9PGF837L.png\n",
            "test/PDNDLV9D.png\n",
            "test/H1QK3M2G.png\n",
            "test/Q020G67P.png\n",
            "test/QUW63BN0.png\n",
            "test/KI8I35PO.png\n",
            "test/E40130LA.png\n",
            "test/2P1C18WJ.png\n",
            "test/23Z6OS6G.png\n",
            "test/P49VAKVH.png\n",
            "test/2NSMK1UJ.png\n",
            "test/TY8S08HD.png\n",
            "test/FPIJZLZM.png\n",
            "test/V43L5UQZ.png\n",
            "test/Z64ZEHF2.png\n",
            "test/13XACYUB.png\n",
            "test/KPDEQPJ2.png\n",
            "test/2BM4DV2M.png\n",
            "test/3T27UW5C.png\n",
            "test/SLGJX10M.png\n",
            "test/A2SO7X67.png\n",
            "test/D6BJN6EC.png\n",
            "test/CI88GBZS.png\n",
            "test/B3GBGGQM.png\n",
            "test/JGYN47RR.png\n",
            "test/GK1F9J4J.png\n",
            "test/XYI8LV3F.png\n",
            "test/K45FGT5D.png\n",
            "test/K0DZ8XV7.png\n",
            "test/0GTAC342.png\n",
            "test/NDPQGPNZ.png\n",
            "test/RN1BE01K.png\n",
            "test/JEF26VJ4.png\n",
            "test/3ZNW7BCQ.png\n",
            "test/THDVY7R0.png\n",
            "test/F4MTZ5KM.png\n",
            "test/1KVLE02O.png\n",
            "test/YQP46NRT.png\n",
            "test/9G9YITXO.png\n",
            "test/EE4QAZCG.png\n",
            "test/7UXBCGEH.png\n",
            "test/MLTM6BVF.png\n",
            "test/6QVS0KM3.png\n",
            "test/9OGV0JUP.png\n",
            "test/O9ZB0RQ5.png\n",
            "test/4IRQGXZ2.png\n",
            "test/VKQQGEFK.png\n",
            "test/NS5ZK9KL.png\n",
            "test/YSPIA80G.png\n",
            "test/2UCJQQ2K.png\n",
            "test/BXENP3JJ.png\n",
            "test/KY4K4IXB.png\n",
            "test/5SZT903J.png\n",
            "test/NTRG0WRJ.png\n",
            "test/CNFC0L9U.png\n",
            "test/I4GU23ZC.png\n",
            "test/JN56QFO0.png\n",
            "test/LVX6NSGC.png\n",
            "test/ND9CCC2Q.png\n",
            "test/P70M5XGS.png\n",
            "test/I6EH0FVL.png\n",
            "test/QNWFUM0Z.png\n",
            "test/6H0IZG2X.png\n",
            "test/7KVREB2X.png\n",
            "test/SKFW0HUI.png\n",
            "test/UZ2BUJL6.png\n",
            "test/V38J2VNN.png\n",
            "test/IXKT4JWO.png\n",
            "test/G91R2F7Z.png\n",
            "test/TOSZRQGN.png\n",
            "test/ON0AT33T.png\n",
            "test/6CD4C49C.png\n",
            "test/DCZ7LO1J.png\n",
            "test/28JRF370.png\n",
            "test/2XY9VFXJ.png\n",
            "test/GI1FSJHQ.png\n",
            "test/SU6YIS0V.png\n",
            "test/1IIG034O.png\n",
            "test/M8ZTZF2J.png\n",
            "test/NNKLEIHP.png\n",
            "test/91VCS07K.png\n",
            "test/EKZ177OV.png\n",
            "test/9Z8OSIPI.png\n",
            "test/QQHI54ZN.png\n",
            "test/PTRJPC0M.png\n",
            "test/MIDM6C0L.png\n",
            "test/KFYT2VNM.png\n",
            "test/55FI7TR0.png\n",
            "test/GDCGFU0P.png\n",
            "test/WNWUDCL9.png\n",
            "test/PX2DOLMG.png\n",
            "test/JJBJJEVE.png\n",
            "test/WA8PQQDY.png\n",
            "test/MG7MY0TC.png\n",
            "test/58UEWYYV.png\n",
            "test/AVN6JLSX.png\n",
            "test/GRIP87ML.png\n",
            "test/MY3BNWP2.png\n",
            "test/AJ3877EA.png\n",
            "test/606P6495.png\n",
            "test/FMQ9HYGP.png\n",
            "test/Z846RBNC.png\n",
            "test/I3Z0AVTY.png\n",
            "test/UENVLKYD.png\n",
            "test/GL2YJ5N8.png\n",
            "test/8BH1TKRR.png\n",
            "test/6FV6Z22A.png\n",
            "test/RSRONEBO.png\n",
            "test/T3NYTB5A.png\n",
            "test/8FYW1WFH.png\n",
            "test/VHT3E0W3.png\n",
            "test/IGGLFHB1.png\n",
            "test/0VBMV92X.png\n",
            "test/IPIRA6RF.png\n",
            "test/BKAOFDQF.png\n",
            "test/5WRC43WE.png\n",
            "test/VTGW6LTI.png\n",
            "test/ZUHDTJM4.png\n",
            "test/1NG7BMC6.png\n",
            "test/K27U0H2X.png\n",
            "test/DIISBBCY.png\n",
            "test/MXZR4D6R.png\n",
            "test/CS9I8F6L.png\n",
            "test/W8SDB9RH.png\n",
            "test/60A4CWB2.png\n",
            "test/C5A01YWP.png\n",
            "test/DZMN1GTC.png\n",
            "test/PN5OC753.png\n",
            "test/3AL0MOUC.png\n",
            "test/SOVCW8H7.png\n",
            "test/731DX2JM.png\n",
            "test/ERV21ODF.png\n",
            "test/WVVDGKGF.png\n",
            "test/Z8ZIGDAC.png\n",
            "test/GQWF2ZGK.png\n",
            "test/APEX6R2V.png\n",
            "test/R3ET8PAQ.png\n",
            "test/00BMIGHK.png\n",
            "test/GWNR1I2G.png\n",
            "test/VHJZMXDF.png\n",
            "test/ZCYUMFHQ.png\n",
            "test/6OAWGQXM.png\n",
            "test/IJMQHUOE.png\n",
            "test/71A4K4AE.png\n",
            "test/HEZWU8RJ.png\n",
            "test/YETH9XC9.png\n",
            "test/RPTRLXJL.png\n",
            "test/91LKCZ3V.png\n",
            "test/C83MU05C.png\n",
            "test/26Y6FLKZ.png\n",
            "test/G58KFLDN.png\n",
            "test/EILJG8TP.png\n",
            "test/WRC5YJLN.png\n",
            "test/M0SDYV47.png\n",
            "test/CXI511V5.png\n",
            "test/1C4UEHD1.png\n",
            "test/GCE8N9EO.png\n",
            "test/K6JJJEBV.png\n",
            "test/VJTLBPN8.png\n",
            "test/9LT8PCU5.png\n",
            "test/4JHGSTJA.png\n",
            "test/7Z8TKJRD.png\n",
            "test/P6DWAQ0T.png\n",
            "test/UQR75O40.png\n",
            "test/KYOTCOHN.png\n",
            "test/EUW1JSX2.png\n",
            "test/KADN3V91.png\n",
            "test/J7RE8M8N.png\n",
            "test/HM4LR09O.png\n",
            "test/TNML65IQ.png\n",
            "test/ZTYQURRD.png\n",
            "test/APWDOWI9.png\n",
            "test/RMMSGHH9.png\n",
            "test/DR8AHOJS.png\n",
            "test/J0EUVWY0.png\n",
            "test/SIAKJE9S.png\n",
            "test/ESMEDWUU.png\n",
            "test/B5M119X5.png\n",
            "test/M2JLUANS.png\n",
            "test/RM126N3U.png\n",
            "test/I393ESOM.png\n",
            "test/GVMX5OKB.png\n",
            "test/D6MP3Y90.png\n",
            "test/NL5NSGSJ.png\n",
            "test/INOJDJRT.png\n",
            "test/K9Z67H3J.png\n",
            "test/4COPSQ2F.png\n",
            "test/RKS35E9L.png\n",
            "test/7772OVD9.png\n",
            "test/RCUVWUSV.png\n",
            "test/THCHUKX0.png\n",
            "test/L3VVOD0B.png\n",
            "test/XA41XKWZ.png\n",
            "test/XAGOLH34.png\n",
            "test/G4TA2MLQ.png\n",
            "test/QAORNR8W.png\n",
            "test/1A9JIOGT.png\n",
            "test/211DKQ2V.png\n",
            "test/VSV6X4FZ.png\n",
            "test/DCY2V1J8.png\n",
            "test/PUG5ZXT3.png\n",
            "test/SGHUMGW9.png\n",
            "test/JDKH79XA.png\n",
            "test/P0F8DE50.png\n",
            "test/LW0V9BH8.png\n",
            "test/HPP2YO0U.png\n",
            "test/JYFLIITL.png\n",
            "test/Q8H2J8LC.png\n",
            "test/CRF96EZ4.png\n",
            "test/SVBJR1KM.png\n",
            "test/9CMTYONT.png\n",
            "test/EEIURO2S.png\n",
            "test/5AFWAII1.png\n",
            "test/4TCO2CR6.png\n",
            "test/UOEI7A9L.png\n",
            "test/RVEW1TNV.png\n",
            "test/1FULLLFW.png\n",
            "test/SZGLAVT4.png\n",
            "test/SC6Z1KXJ.png\n",
            "test/ILSHBTWX.png\n",
            "test/KKP5ABH8.png\n",
            "test/MGXYX96J.png\n",
            "test/US59P7G0.png\n",
            "test/O9RZSXAX.png\n",
            "test/141RYRWD.png\n",
            "test/3TAJ3QEZ.png\n",
            "test/ZRZ13Q3X.png\n",
            "test/CJ0W3YE7.png\n",
            "test/09VIVQDZ.png\n",
            "test/IRAR8ZDY.png\n",
            "test/B8XMHR3V.png\n",
            "test/TJVRH53S.png\n",
            "test/49KHFMJB.png\n",
            "test/P2SJ8M42.png\n",
            "test/PGEX94A9.png\n",
            "test/WZB3L02Y.png\n",
            "test/2WG2ENYP.png\n",
            "test/7P95UAWZ.png\n",
            "test/LS5J257T.png\n",
            "test/89ST2C7C.png\n",
            "test/SFT3DT3A.png\n",
            "test/YXLIG3BX.png\n",
            "test/HPZWUCKM.png\n",
            "test/AE02VIJW.png\n",
            "test/J5E85F8D.png\n",
            "test/KA95OJIK.png\n",
            "test/JX2G0Z5S.png\n",
            "test/XQCUPGAZ.png\n",
            "test/3M9ILKO4.png\n",
            "test/QSZTSJ19.png\n",
            "test/FE9IJMIA.png\n",
            "test/T41WEYVP.png\n",
            "test/R74210CW.png\n",
            "test/EZTMHWVF.png\n",
            "test/MNBBRWDE.png\n",
            "test/EM7RFP82.png\n",
            "test/WO5XMU3P.png\n",
            "test/X0BURJDR.png\n",
            "test/J5T6JQXO.png\n",
            "test/LB3FQLCT.png\n",
            "test/Z65WKIWA.png\n",
            "test/BTLJ6ALU.png\n",
            "test/OE1S3SQW.png\n",
            "test/5J7NOGFT.png\n",
            "test/TOVJI7TS.png\n",
            "test/1UKJCHFF.png\n",
            "test/3PL445ZQ.png\n",
            "test/RL71G5SR.png\n",
            "test/DS3R0KXK.png\n",
            "test/ZW6I1CFW.png\n",
            "test/Q5JTI77L.png\n",
            "test/C3RXG2DW.png\n",
            "test/OXSOFQ4H.png\n",
            "test/2KGN4TSJ.png\n",
            "test/OF6CWEHI.png\n",
            "test/6XQOWLOK.png\n",
            "test/1A9C2W5C.png\n",
            "test/YW9XGTLG.png\n",
            "test/1BEYC6ZQ.png\n",
            "test/CZHA1K5C.png\n",
            "test/R47WFQU7.png\n",
            "test/Z6K52OJM.png\n",
            "test/WPGI7U61.png\n",
            "test/YCS3Y0HU.png\n",
            "test/X65Z4GY0.png\n",
            "test/3BX0ECQZ.png\n",
            "test/9XTXV1SV.png\n",
            "test/JZ4CE90T.png\n",
            "test/I78AF13J.png\n",
            "test/LCMEH10B.png\n",
            "test/IXRY22EE.png\n",
            "test/BW0EOLHP.png\n",
            "test/852S0RM1.png\n",
            "test/YEB88ZTR.png\n",
            "test/7ZFWLZG3.png\n",
            "test/4JL0F5V7.png\n",
            "test/XNG720RP.png\n",
            "test/U5WHHPVI.png\n",
            "test/WYEOAXHZ.png\n",
            "test/4V15YL8W.png\n",
            "test/T8RNXKI0.png\n",
            "test/7P5Q9AT7.png\n",
            "test/AYTWXFHA.png\n",
            "test/QFT1CX1J.png\n",
            "test/RBDIJGXX.png\n",
            "test/QOCPMQVQ.png\n",
            "test/X29OB8KX.png\n",
            "test/CA5ZUW1G.png\n",
            "test/UYW9QD5B.png\n",
            "test/Z12SET6R.png\n",
            "test/XJDC6S0M.png\n",
            "test/ZYDJ2JG9.png\n",
            "test/X8J0FO1J.png\n",
            "test/NAB7LDP5.png\n",
            "test/2X7HO8UZ.png\n",
            "test/KZMVR6HG.png\n",
            "test/NQMWK9SX.png\n",
            "test/YKNXPIDQ.png\n",
            "test/S09XBU66.png\n",
            "test/765CKTZ1.png\n",
            "test/WLXRZD6G.png\n",
            "test/T4BGVE7N.png\n",
            "test/7CUI800O.png\n",
            "test/TX4KXFX5.png\n",
            "test/9B50BK2X.png\n",
            "test/0SE5FNRD.png\n",
            "test/B7NTN9Q5.png\n",
            "test/8YFZOXDS.png\n",
            "test/4K39E7BI.png\n",
            "test/F3WRZWFI.png\n",
            "test/1LWJ7NWW.png\n",
            "test/8PX0QVZI.png\n",
            "test/I2DY77G3.png\n",
            "test/T3HE61XW.png\n",
            "test/D5ZGDJLO.png\n",
            "test/ZBS4LDQP.png\n",
            "test/DLXHVCTO.png\n",
            "test/X8YZ18KS.png\n",
            "test/I080RKKC.png\n",
            "test/W7XQ0HTN.png\n",
            "test/M8ZUCOSV.png\n",
            "test/YSFWPMQC.png\n",
            "test/PB7IODI8.png\n",
            "test/PFGFDND4.png\n",
            "test/R06N9S9U.png\n",
            "test/EFHDQ28H.png\n",
            "test/C1SVN01E.png\n",
            "test/85GECT4B.png\n",
            "test/D7GP6INU.png\n",
            "test/81YFWR6R.png\n",
            "test/EIQ7M6AI.png\n",
            "test/TMTD6DVS.png\n",
            "test/9VXGL282.png\n",
            "test/3T00KNQ0.png\n",
            "test/K7L6IWU3.png\n",
            "test/IJR7X18F.png\n",
            "test/6KGW8MAJ.png\n",
            "test/WLEPSHCT.png\n",
            "test/VA6M23NP.png\n",
            "test/8BUFP08Y.png\n",
            "test/KNQ8YYPM.png\n",
            "test/9XFTZIFJ.png\n",
            "test/T0UI4J3A.png\n",
            "test/167AQBRD.png\n",
            "test/IQHD8JX9.png\n",
            "test/CBVOMBZ3.png\n",
            "test/XPBAW7NU.png\n",
            "test/10T4UJRK.png\n",
            "test/HFF2XP21.png\n",
            "test/ZP5Y3LNG.png\n",
            "test/LT43G9FW.png\n",
            "test/WO30M162.png\n",
            "test/YULLZQUC.png\n",
            "test/OP65HHRG.png\n",
            "test/TIUT4UQO.png\n",
            "test/JL7J0DB7.png\n",
            "test/V2HAQ104.png\n",
            "test/78YXT11C.png\n",
            "test/LPRXX6J6.png\n",
            "test/CSJDUR61.png\n",
            "test/EBCCTL2V.png\n",
            "test/5QA56BTK.png\n",
            "test/UCQ6B8O9.png\n",
            "test/PGX6QGWS.png\n",
            "test/RIEZVRXM.png\n",
            "test/S4L9YCPN.png\n",
            "test/DXUSRR6L.png\n",
            "test/THMP624R.png\n",
            "test/AN8JT090.png\n",
            "test/HI109S03.png\n",
            "test/VNENHRP8.png\n",
            "test/8Y8JWO1M.png\n",
            "test/HSP0D90J.png\n",
            "test/9WD1YI61.png\n",
            "test/4SEKL4RC.png\n",
            "test/2Q1QIQNN.png\n",
            "test/YIBRV4JV.png\n",
            "test/CIHVVT9M.png\n",
            "test/UF3JI5L8.png\n",
            "test/W5HJOCOI.png\n",
            "test/S4V100M9.png\n",
            "test/5E0NB1QG.png\n",
            "test/E7YD5VN1.png\n",
            "test/CE5RKEW9.png\n",
            "test/FWDWFILQ.png\n",
            "test/DTRJXIKQ.png\n",
            "test/HCOO32DE.png\n",
            "test/M4QTE9CC.png\n",
            "test/XBJI266N.png\n",
            "test/KEAG0ZB5.png\n",
            "test/1JEY0WCG.png\n",
            "test/3IQ00PZV.png\n",
            "test/UCOUW47O.png\n",
            "test/BUH5GKST.png\n",
            "test/27CMKMPS.png\n",
            "test/LYD5X8KK.png\n",
            "test/WE1KXX2F.png\n",
            "test/PINU80JQ.png\n",
            "test/FQLM8G5Q.png\n",
            "test/O7I1I7ZS.png\n",
            "test/M9J6CVJ4.png\n",
            "test/37OH4XBC.png\n",
            "test/BT8GF0ME.png\n",
            "test/4LMG84TD.png\n",
            "test/TI3W6VVN.png\n",
            "test/SENVEBRL.png\n",
            "test/IQYQVZ6N.png\n",
            "test/QDOYBO1V.png\n",
            "test/86WS8U9O.png\n",
            "test/Q14LQTUM.png\n",
            "test/VGJ9QU2L.png\n",
            "test/ADV6G1UW.png\n",
            "test/NHP2YUL8.png\n",
            "test/4GXEWCIN.png\n",
            "test/3G7L3CVA.png\n",
            "test/EUB1VLPH.png\n",
            "test/9YRGA0TM.png\n",
            "test/MDWA1GOG.png\n",
            "test/A8TC49NK.png\n",
            "test/AMWT4LI6.png\n",
            "test/NMLG3EBE.png\n",
            "test/K3K9DCRW.png\n",
            "test/DDDHNJY0.png\n",
            "test/MK0UQ9LP.png\n",
            "test/9YD8D7K4.png\n",
            "test/SZB997BO.png\n",
            "test/8A2E2I1J.png\n",
            "test/CJAS0JAX.png\n",
            "test/97MS567K.png\n",
            "test/E14C78CA.png\n",
            "test/APSQRJIX.png\n",
            "test/7CP271YK.png\n",
            "test/YGOGYWLG.png\n",
            "test/81FPN29U.png\n",
            "test/HTMVZ73P.png\n",
            "test/XB9ULB7S.png\n",
            "test/YZSYXCMS.png\n",
            "test/O8V183XK.png\n",
            "test/9DOF3Y8H.png\n",
            "test/IL8GH4YK.png\n",
            "test/AA0AGOJ1.png\n",
            "test/DDI537YP.png\n",
            "test/AU5KE0DB.png\n",
            "test/ZDQ5CQ0P.png\n",
            "test/WF1CDRZG.png\n",
            "test/Y9W57GSQ.png\n",
            "test/ZUAFNDYD.png\n",
            "test/9H21JM8H.png\n",
            "test/GEVOZS2X.png\n",
            "test/S7FAJU8Q.png\n",
            "test/SHQNQS0H.png\n",
            "test/L6BMPCI0.png\n",
            "test/W893ED8G.png\n",
            "test/60DGTQ6K.png\n",
            "test/GC2WXAOT.png\n",
            "test/147QVHL1.png\n",
            "test/LEKO8I5X.png\n",
            "test/7VQBGWWR.png\n",
            "test/8VZ7O6GF.png\n",
            "test/N12927GE.png\n",
            "test/A1GMCD2R.png\n",
            "test/RT3603TH.png\n",
            "test/8GMWZUHO.png\n",
            "test/694DYCAZ.png\n",
            "test/4A0G05QB.png\n",
            "test/EVBDD38M.png\n",
            "test/SWB089I9.png\n",
            "test/9KLV9A7N.png\n",
            "test/AG5GXBG3.png\n",
            "test/1Z5W6H4O.png\n",
            "test/NXBHXMAZ.png\n",
            "test/XMPUPC7C.png\n",
            "test/NAB96K93.png\n",
            "test/E8GB1A3O.png\n",
            "test/HY2MQ8PM.png\n",
            "test/TX1DY4HY.png\n",
            "test/ZHNURZH3.png\n",
            "test/V3ZWY8VS.png\n",
            "test/1EGUJACE.png\n",
            "test/6BIZCDA7.png\n",
            "test/DVXZ8SL3.png\n",
            "test/CK3FRB3I.png\n",
            "test/ST3B4M3G.png\n",
            "test/TTSQ2N02.png\n",
            "test/TMD372QS.png\n",
            "test/25SKNSV1.png\n",
            "test/0Z9XYPVS.png\n",
            "test/VCOXL1UW.png\n",
            "test/4G5IIGQU.png\n",
            "test/TD5CMFNY.png\n",
            "test/96GKMV59.png\n",
            "test/9VHWQSEL.png\n",
            "test/PEON354L.png\n",
            "test/903NHZLZ.png\n",
            "test/V9TPVFCN.png\n",
            "test/VGMUZJ8E.png\n",
            "test/IS695UU0.png\n",
            "test/QO829PDW.png\n",
            "test/N6MGGCLY.png\n",
            "test/PKVQPLAG.png\n",
            "test/GQNNH8Q6.png\n",
            "test/2AJFLHQA.png\n",
            "test/IIX7G1Z0.png\n",
            "test/GLCCZWU5.png\n",
            "test/DULW0DKL.png\n",
            "test/5T9UU1SI.png\n",
            "test/RUNU5XC6.png\n",
            "test/XZS1FQQR.png\n",
            "test/SETG0XUR.png\n",
            "test/MC08L8JV.png\n",
            "test/P9M2E94F.png\n",
            "test/1XPYFXIO.png\n",
            "test/8KYHN5KB.png\n",
            "test/4GMZBFX8.png\n",
            "test/D5I5LE4O.png\n",
            "test/O4VZLZXX.png\n",
            "test/070IT1B3.png\n",
            "test/QI976I87.png\n",
            "test/XRQB81IG.png\n",
            "test/NJJ1V45J.png\n",
            "test/8BBJHOQM.png\n",
            "test/1P067VKX.png\n",
            "test/MBALZ91D.png\n",
            "test/YEQEN3J7.png\n",
            "test/8A9AQU56.png\n",
            "test/IHQ923KU.png\n",
            "test/BMBJG0TM.png\n",
            "test/YHY7FUN2.png\n",
            "test/IUNJWFPE.png\n",
            "test/CEULIGKQ.png\n",
            "test/YP07U0ZA.png\n",
            "test/DYS75E3S.png\n",
            "test/59IEVDSR.png\n",
            "test/FCC8TYI2.png\n",
            "test/HFTM1FJS.png\n",
            "test/9HTPIZO7.png\n",
            "test/QVI3MI1R.png\n",
            "test/9U684S1R.png\n",
            "test/3MRSM7EA.png\n",
            "test/M9P7I8AS.png\n",
            "test/AVSW36FU.png\n",
            "test/D0JYT15T.png\n",
            "test/BV36KT6A.png\n",
            "test/WT0209G6.png\n",
            "test/6R4Y590R.png\n",
            "test/2EYWVNIC.png\n",
            "test/HLW05T3T.png\n",
            "test/HXMD7GU6.png\n",
            "test/2GTCL2T1.png\n",
            "test/YDGN05LH.png\n",
            "test/KPRFMFSR.png\n",
            "test/Q6PV7O5B.png\n",
            "test/4JB2JNH8.png\n",
            "test/NIXA0QZ1.png\n",
            "test/9UF0VFWJ.png\n",
            "test/DENEGR8M.png\n",
            "test/LDCUS6OV.png\n",
            "test/IEVUXGER.png\n",
            "test/Y2D5NETZ.png\n",
            "test/6XEC7RCQ.png\n",
            "test/HG08TNR0.png\n",
            "test/FEQV1BY3.png\n",
            "test/0D1WVB94.png\n",
            "test/Y0FB04RZ.png\n",
            "test/1JHXAVSQ.png\n",
            "test/QYE3RY8P.png\n",
            "test/K8DXDN8W.png\n",
            "test/EO1ZWHDQ.png\n",
            "test/5SO9QW6A.png\n",
            "test/IUP9KD37.png\n",
            "test/X0EQSY0G.png\n",
            "test/8J7SAKDP.png\n",
            "test/K4XAOGQ6.png\n",
            "test/TSYYEM2A.png\n",
            "test/LIX0OMR0.png\n",
            "test/V5BJQDHD.png\n",
            "test/P8EG2VPB.png\n",
            "test/X5PVOZYR.png\n",
            "test/0P2TKBKZ.png\n",
            "test/2CCA833K.png\n",
            "test/S11CYTJM.png\n",
            "test/FGUE0HIG.png\n",
            "test/G00242FS.png\n",
            "test/IVC3ZZZS.png\n",
            "test/7MT4M2R2.png\n",
            "test/BNG41ETH.png\n",
            "test/YJ7431MP.png\n",
            "test/8Q4JNC15.png\n",
            "test/V8HT87H7.png\n",
            "test/FW1TMY8J.png\n",
            "test/5MFANICH.png\n",
            "test/IO4KC944.png\n",
            "test/M2SGDUH6.png\n",
            "test/T4Y9OGCO.png\n",
            "test/3CHJQ2F1.png\n",
            "test/R31SCY9R.png\n",
            "test/M8SJS3GM.png\n",
            "test/G8IDD3CH.png\n",
            "test/5GMHTOKQ.png\n",
            "test/QILTJCDD.png\n",
            "test/7VGQE8R4.png\n",
            "test/CJ5YP7CE.png\n",
            "test/FCGVEV3X.png\n",
            "test/VR0XSQST.png\n",
            "test/CAU32Y8S.png\n",
            "test/CV4LFY09.png\n",
            "test/2BDS7I66.png\n",
            "test/HUW1K6C2.png\n",
            "test/ABH0SFSF.png\n",
            "test/8BHM6WFX.png\n",
            "test/B0MBIX1N.png\n",
            "test/E82CTFRZ.png\n",
            "test/K1CF5IH4.png\n",
            "test/MO1AFOH5.png\n",
            "test/ZF1B9ESL.png\n",
            "test/ZF3U4BGM.png\n",
            "test/CMUOYHYE.png\n",
            "test/MK8ET4YQ.png\n",
            "test/T1TN3SHW.png\n",
            "test/URZBZHMN.png\n",
            "test/00Y667ZT.png\n",
            "test/3PB2RPBQ.png\n",
            "test/ZXEGFFIT.png\n",
            "test/P3WW2P7V.png\n",
            "test/XI8Q42YE.png\n",
            "test/SLZQYSW8.png\n",
            "test/IG9KRNKS.png\n",
            "test/BNZBW895.png\n",
            "test/J4W3N732.png\n",
            "test/HZB8BOP5.png\n",
            "test/VW7QDKBX.png\n",
            "test/ACTLVR6D.png\n",
            "test/GX3RS4MN.png\n",
            "test/IUCFP0F6.png\n",
            "test/8MNIJS3U.png\n",
            "test/48W7T2SF.png\n",
            "test/WCUCUCNP.png\n",
            "test/5W23V9SP.png\n",
            "test/MWWTVDOH.png\n",
            "test/YM82CI2N.png\n",
            "test/C1BYYQLX.png\n",
            "test/3ZJ79YWC.png\n",
            "test/7KAWDI9M.png\n",
            "test/249LOEU6.png\n",
            "test/2IQNTP4W.png\n",
            "test/1Y3FQ6HA.png\n",
            "test/JE9VJTFE.png\n",
            "test/8VWNI8IC.png\n",
            "test/JEXVE6N5.png\n",
            "test/1LL2Z2QD.png\n",
            "test/C1T33WB4.png\n",
            "test/ARZ4VQMA.png\n",
            "test/GQNMLBMJ.png\n",
            "test/BE0OBB69.png\n",
            "test/N55SBCP4.png\n",
            "test/WQRSI2QQ.png\n",
            "test/57IWS61V.png\n",
            "test/KRLNHJZF.png\n",
            "test/Y8Y3ZLZK.png\n",
            "test/MWIUM7E9.png\n",
            "test/IVYX4MNK.png\n",
            "test/8FAB9Z4J.png\n",
            "test/05JGQBY4.png\n",
            "test/SYR3VOB2.png\n",
            "test/51OPPN02.png\n",
            "test/VKAST9HE.png\n",
            "test/3BHT4W0O.png\n",
            "test/CCTTYJHJ.png\n",
            "test/ZDF34GC8.png\n",
            "test/E29GR0TM.png\n",
            "test/SX4VR01J.png\n",
            "test/YGTF2KZH.png\n",
            "test/CUXQVHSZ.png\n",
            "test/6YF4M6AI.png\n",
            "test/1CTBIDY0.png\n",
            "test/N1Y5FMQ6.png\n",
            "test/1QRHXY3G.png\n",
            "test/59XEC3WD.png\n",
            "test/SMBYXDJV.png\n",
            "test/535KIBVU.png\n",
            "test/8LVOSUFZ.png\n",
            "test/KGU04VSU.png\n",
            "test/KI20H86W.png\n",
            "test/GHW544YB.png\n",
            "test/H55JY8ME.png\n",
            "test/5JNAAYUX.png\n",
            "test/I828WHWO.png\n",
            "test/P7L9XS1A.png\n",
            "test/7Y56HMHT.png\n",
            "test/FIF52W9Z.png\n",
            "test/V0BMSXQQ.png\n",
            "test/5A6SLEXM.png\n",
            "test/6L0A4943.png\n",
            "test/PGMWJTEN.png\n",
            "test/X0GATY8C.png\n",
            "test/4I9LPPFK.png\n",
            "test/8WKTTN3E.png\n",
            "test/W8BB5K3W.png\n",
            "test/HR9N8P29.png\n",
            "test/CPHJJEB3.png\n",
            "test/ARYLBDFW.png\n",
            "test/7PGYG7NT.png\n",
            "test/8R767JP5.png\n",
            "test/T9C1FU3U.png\n",
            "test/5A52OGT1.png\n",
            "test/BOMVV0EL.png\n",
            "test/T1G7MN9C.png\n",
            "test/RD9HLS1Y.png\n",
            "test/NR28DSIN.png\n",
            "test/GY2J4YIH.png\n",
            "test/UXX2MWHP.png\n",
            "test/XAHMR5GQ.png\n",
            "test/PGV7WOGI.png\n",
            "test/MUMXXJ17.png\n",
            "test/MJF092GE.png\n",
            "test/EI048CE4.png\n",
            "test/UCBA52OE.png\n",
            "test/A8GHOUL2.png\n",
            "test/AVB15YA2.png\n",
            "test/FLFT6JIN.png\n",
            "test/HQC8EGI7.png\n",
            "test/JZAL8DHH.png\n",
            "test/LSSTNI04.png\n",
            "test/QJ7KQWC2.png\n",
            "test/658J7GNH.png\n",
            "test/DVWZL6AL.png\n",
            "test/7CC18NP9.png\n",
            "test/O9S9KY6D.png\n",
            "test/C2KZDE1Z.png\n",
            "test/EMOPF9GF.png\n",
            "test/I626S9LN.png\n",
            "test/Z062F6OC.png\n",
            "test/SS0P5Y79.png\n",
            "test/H2NELL6E.png\n",
            "test/Q7YF6E0K.png\n",
            "test/1X5SF05Z.png\n",
            "test/UVKJ8YB8.png\n",
            "test/O7B7PXG0.png\n",
            "test/PFCXP6K5.png\n",
            "test/SP1I6FGG.png\n",
            "test/DMU8Y14S.png\n",
            "test/LDEKNT4M.png\n",
            "test/OB7E05KR.png\n",
            "test/RN20KCQE.png\n",
            "test/5S136H5G.png\n",
            "test/FDT8C188.png\n",
            "test/XBYVR2H7.png\n",
            "test/O2VINN4U.png\n",
            "test/H66VHC1L.png\n",
            "test/6AII1NI4.png\n",
            "test/1TUPCLFN.png\n",
            "test/053YUCZK.png\n",
            "test/33SNQVYF.png\n",
            "test/1WG1X0VY.png\n",
            "test/U2Z77GYI.png\n",
            "test/AW8812EX.png\n",
            "test/OK29KD5U.png\n",
            "test/TE6PLDCF.png\n",
            "test/6RVPRALB.png\n",
            "test/8DH7AMR3.png\n",
            "test/BP83UJUY.png\n",
            "test/EH29JFBP.png\n",
            "test/3GYC5GUM.png\n",
            "test/VOONINYK.png\n",
            "test/XYELE4ND.png\n",
            "test/SP5FAWWK.png\n",
            "test/JWD0DGNK.png\n",
            "test/CEQMF6V3.png\n",
            "test/H85G4U2Q.png\n",
            "test/48MAFA3G.png\n",
            "test/FVX4AEFV.png\n",
            "test/GAFBN6F9.png\n",
            "test/KV1FUD78.png\n",
            "test/W3W0Z91Z.png\n",
            "test/BKFY0IPI.png\n",
            "test/LWI9HNLS.png\n",
            "test/O7UFVGI2.png\n",
            "test/1IAKE870.png\n",
            "test/Y2SKQHQB.png\n",
            "test/FPORXUEV.png\n",
            "test/TPQ1458A.png\n",
            "test/E4VMNJ2Z.png\n",
            "test/NTAS3A5S.png\n",
            "test/O81UWEN5.png\n",
            "test/FKTO2M9Q.png\n",
            "test/KIPFRO5S.png\n",
            "test/5YKZ4JE1.png\n",
            "test/WQ71DYZC.png\n",
            "test/QMHYPU19.png\n",
            "test/JA9WW5KB.png\n",
            "test/MK3SX8I7.png\n",
            "test/AGQ0AAYI.png\n",
            "test/GTIEWBO4.png\n",
            "test/5KQGU6DQ.png\n",
            "test/A0NQ3YRQ.png\n",
            "test/OCW77DK4.png\n",
            "test/L21AEHDV.png\n",
            "test/EFM1IYKY.png\n",
            "test/M0E1XSSU.png\n",
            "test/P60S2JME.png\n",
            "test/J3XOL0RX.png\n",
            "test/6DEIF0GY.png\n",
            "test/2A90PUUQ.png\n",
            "test/1E3XZG05.png\n",
            "test/U4WX0TBW.png\n",
            "test/XF9358EZ.png\n",
            "test/GL4HN78G.png\n",
            "test/2Y99WN6H.png\n",
            "test/Y1N6DRZR.png\n",
            "test/QBWRZHA3.png\n",
            "test/YT71FN9O.png\n",
            "test/2NERUY2R.png\n",
            "test/62S8MK18.png\n",
            "test/F7PLS622.png\n",
            "test/8UZRX4X1.png\n",
            "test/8HH6WT8O.png\n",
            "test/GCX23I2A.png\n",
            "test/VEKFE8C1.png\n",
            "test/9GB1LE56.png\n",
            "test/VMF8PRHF.png\n",
            "test/GJLDZHKT.png\n",
            "test/EU7FOKNZ.png\n",
            "test/0XEIHSSM.png\n",
            "test/Y0WH0KZL.png\n",
            "test/KZEQ1H77.png\n",
            "test/Y5UY6NQF.png\n",
            "test/1BWR6EB1.png\n",
            "test/LKLB9DIX.png\n",
            "test/L3WJ3TW0.png\n",
            "test/TIOAUIT2.png\n",
            "test/5ZZ683JI.png\n",
            "test/MY31UI7Q.png\n",
            "test/73Y9QJS6.png\n",
            "test/L1P9M611.png\n",
            "test/7STMP1YO.png\n",
            "test/69J25MUX.png\n",
            "test/Y38XPSZ0.png\n",
            "test/8S3H6OHJ.png\n",
            "test/I7OCFOXI.png\n",
            "test/OGF5KKOQ.png\n",
            "test/33QESVZ0.png\n",
            "test/PYAT6JT1.png\n",
            "test/1NYE277I.png\n",
            "test/NHEIR3EY.png\n",
            "test/0L3OCAHF.png\n",
            "test/GZ9ZU0YD.png\n",
            "test/Q9KEQHEX.png\n",
            "test/IAPW72NY.png\n",
            "test/1RAXAYE8.png\n",
            "test/A59SGY7G.png\n",
            "test/2FLXR0VW.png\n",
            "test/GW4H9EKE.png\n",
            "test/F6RB86GC.png\n",
            "test/BMONDX8Y.png\n",
            "test/4EL3ARRX.png\n",
            "test/3MQNM1XW.png\n",
            "test/DJDG2QSC.png\n",
            "test/WYTBDLM7.png\n",
            "test/MV1MD6BH.png\n",
            "test/MGNE7A9B.png\n",
            "test/4TDTCH37.png\n",
            "test/KR13PKV5.png\n",
            "test/IZHQZ4WF.png\n",
            "test/9MLOMD9O.png\n",
            "test/M01PPL9C.png\n",
            "test/VDYBOSY8.png\n",
            "test/2XMEXL5Q.png\n",
            "test/G0UUI7ZZ.png\n",
            "test/CZNLSUK1.png\n",
            "test/Z83XGWIQ.png\n",
            "test/3A62F5U0.png\n",
            "test/1DIJY31B.png\n",
            "test/PXWQXEW3.png\n",
            "test/K93QCGJR.png\n",
            "test/SB4H26OM.png\n",
            "test/PQ727WEC.png\n",
            "test/5TUHSOLH.png\n",
            "test/SHJ7XS2D.png\n",
            "test/JJ6QEVTQ.png\n",
            "test/8HMH20Y9.png\n",
            "test/ZUA03HOT.png\n",
            "test/B462TAMS.png\n",
            "test/SYD9D01D.png\n",
            "test/ER0M7HF6.png\n",
            "test/7BICJV5Z.png\n",
            "test/8DPEQMZN.png\n",
            "test/O8W6HTYQ.png\n",
            "test/AZDTHMWM.png\n",
            "test/OK4Q289P.png\n",
            "test/QHF2AQ5U.png\n",
            "test/PD3NK2YN.png\n",
            "test/2QZRTSQB.png\n",
            "test/BM0EFLTI.png\n",
            "test/GFG2375Y.png\n",
            "test/CDHAE02W.png\n",
            "test/8DRUL0SL.png\n",
            "test/Q6KAJACJ.png\n",
            "test/92V95JZ8.png\n",
            "test/IG8ORE5X.png\n",
            "test/ATZF1C1D.png\n",
            "test/PAYOMNWI.png\n",
            "test/4UXSVJIY.png\n",
            "test/M8P79ZK7.png\n",
            "test/QYF1KQFE.png\n",
            "test/XHNF27DQ.png\n",
            "test/JY0FULLT.png\n",
            "test/5M9VF0VH.png\n",
            "test/HHC8M5LE.png\n",
            "test/4OHNOBR0.png\n",
            "test/3NFRU8C7.png\n",
            "test/TKJHUWOH.png\n",
            "test/NKTGWAFM.png\n",
            "test/2YXPX5PB.png\n",
            "test/358XC6M3.png\n",
            "test/RLITR8FQ.png\n",
            "test/40WYT8U4.png\n",
            "test/S6AHU0K2.png\n",
            "test/BN6KBJRM.png\n",
            "test/CYKR54DK.png\n",
            "test/2JP61UU9.png\n",
            "test/6BCSBNDJ.png\n",
            "test/XX0ZNA6H.png\n",
            "test/J4ASW2BJ.png\n",
            "test/RLE79D0B.png\n",
            "test/5FZ08G7V.png\n",
            "test/X8DT4IG7.png\n",
            "test/QYZCPQT5.png\n",
            "test/IY3C0D4D.png\n",
            "test/MKL7M6TK.png\n",
            "test/ZQGQKGZN.png\n",
            "test/JE79001K.png\n",
            "test/QRCNA1F7.png\n",
            "test/OM0Z0VQ5.png\n",
            "test/3AY8WGBT.png\n",
            "test/GHFVSUIV.png\n",
            "test/P9AI4F02.png\n",
            "test/H7VLGABT.png\n",
            "test/H72U3MKW.png\n",
            "test/DTUKSONV.png\n",
            "test/P7DT1LIL.png\n",
            "test/VNP7NWJ2.png\n",
            "test/526M704Y.png\n",
            "test/G3GP6WBB.png\n",
            "test/Z1ABZY9Q.png\n",
            "test/NZQWW05C.png\n",
            "test/XI8Q5U5U.png\n",
            "test/COF43UQV.png\n",
            "test/6CC1C1A2.png\n",
            "test/6GM7BJFD.png\n",
            "test/PL067TPW.png\n",
            "test/QVG2GI7L.png\n",
            "test/OOQOD7BH.png\n",
            "test/RSEZBF5T.png\n",
            "test/2NVMP0AN.png\n",
            "test/PK5XH3Q3.png\n",
            "test/ZGGCAIN2.png\n",
            "test/0KBTCEJ8.png\n",
            "test/T5DZT0OI.png\n",
            "test/6SSFYY02.png\n",
            "test/D3HT1K3A.png\n",
            "test/R96JPO2X.png\n",
            "test/FJFG9SQZ.png\n",
            "test/XLIVLW31.png\n",
            "test/YKHQ9R0S.png\n",
            "test/6T2PTSYW.png\n",
            "test/GXV6MAFN.png\n",
            "test/5627CEH0.png\n",
            "test/NRNNZ1VK.png\n",
            "test/F2TOHDUY.png\n",
            "test/TIBRTC2Q.png\n",
            "test/PPSY5TXK.png\n",
            "test/DSVXP08Z.png\n",
            "test/IN65LUVQ.png\n",
            "test/X6QTPS5S.png\n",
            "test/BHRA6D2T.png\n",
            "test/S2ZHAKAV.png\n",
            "test/08PJKDUD.png\n",
            "test/JOTFTJDU.png\n",
            "test/9IGND9JV.png\n",
            "test/ERSGT8ML.png\n",
            "test/Z0175HET.png\n",
            "test/2F7Z0Z4Q.png\n",
            "test/E1XVPO9U.png\n",
            "test/HISYJ8VI.png\n",
            "test/S1R6QO3A.png\n",
            "test/I5XN9QCD.png\n",
            "test/DQQY6F28.png\n",
            "test/6VMLDO2E.png\n",
            "test/3Q7POQHQ.png\n",
            "test/Q2M4STSE.png\n",
            "test/0URKALRN.png\n",
            "test/HLSRPSUP.png\n",
            "test/VGU9VCNZ.png\n",
            "test/76MKV8KX.png\n",
            "test/LNL5KSV3.png\n",
            "test/3VW526VY.png\n",
            "test/KQC6MX2E.png\n",
            "test/4SRA7N5I.png\n",
            "test/PHBHUDM3.png\n",
            "test/2KYUN749.png\n",
            "test/QDMP8K2F.png\n",
            "test/2M881MW7.png\n",
            "test/R18L8SFI.png\n",
            "test/VOEU2ZYT.png\n",
            "test/F0CFU5ZU.png\n",
            "test/BN48COQ4.png\n",
            "test/RNXNHAI4.png\n",
            "test/ZX7PV5BH.png\n",
            "test/EAB97M27.png\n",
            "test/6XSWL3NT.png\n",
            "test/VK67HA7E.png\n",
            "test/83ZQI2CO.png\n",
            "test/CLXGTH3U.png\n",
            "test/DYJDXB5Z.png\n",
            "test/I7P5N4LR.png\n",
            "test/NT755EH9.png\n",
            "test/JXK7NOG2.png\n",
            "test/6FDR2EX3.png\n",
            "test/LUDQJMJ3.png\n",
            "test/CJZ2BCQK.png\n",
            "test/K1N6BINY.png\n",
            "test/08F4B5WZ.png\n",
            "test/88E2SY5X.png\n",
            "test/DK43JTNN.png\n",
            "test/GA2PIUKX.png\n",
            "test/GWYTW15G.png\n",
            "test/3ULPC5VS.png\n",
            "test/HVVRRUSG.png\n",
            "test/GY9HIQQ9.png\n",
            "test/XJKYBPAL.png\n",
            "test/HQBNCEGS.png\n",
            "test/N538OYQ6.png\n",
            "test/CG21XQT5.png\n",
            "test/1NLCNZYM.png\n",
            "test/6NNJEV49.png\n",
            "test/V3EDDWM2.png\n",
            "test/GNQTXAVY.png\n",
            "test/Y6CW0WLE.png\n",
            "test/LZOS8QWR.png\n",
            "test/UXCWH7GN.png\n",
            "test/T2AK3AAV.png\n",
            "test/1H9Z54UC.png\n",
            "test/6UVQ1XHG.png\n",
            "test/6F91CUAU.png\n",
            "test/B2P9VKLM.png\n",
            "test/ZDJNTX97.png\n",
            "test/AITFWKES.png\n",
            "test/JXFCTB3Z.png\n",
            "test/SW6GSMNF.png\n",
            "test/UPHSKA2F.png\n",
            "test/PPCDUR16.png\n",
            "test/KZLSPZPS.png\n",
            "test/K8Y8W4BJ.png\n",
            "test/HD1I18SL.png\n",
            "test/G3ZTM85F.png\n",
            "test/G5FC0XSN.png\n",
            "test/WURQ99ZE.png\n",
            "test/QORTPHUS.png\n",
            "test/3AO4T5Q3.png\n",
            "test/9F92KLR2.png\n",
            "test/GE292PIN.png\n",
            "test/OIXNIN8M.png\n",
            "test/Y9NTGZCG.png\n",
            "test/SSFEFJ4X.png\n",
            "test/0AX1QPG9.png\n",
            "test/H971LH18.png\n",
            "test/QLB8F1XF.png\n",
            "test/9WUFC6FE.png\n",
            "test/4AQ77QGS.png\n",
            "test/HEOQ5M0X.png\n",
            "test/Q7QDWZQT.png\n",
            "test/FY6VUEEC.png\n",
            "test/6HXH5HDA.png\n",
            "test/KN5TM9HD.png\n",
            "test/54M3SM1U.png\n",
            "test/XSCK1BHE.png\n",
            "test/H78W1PV8.png\n",
            "test/WYQ92TS9.png\n",
            "test/SB7KMADP.png\n",
            "test/XXCQXL04.png\n",
            "test/52SDK3QC.png\n",
            "test/XMPLVA3T.png\n",
            "test/1CYD0J6M.png\n",
            "test/11P74VZV.png\n",
            "test/GVV8OXMX.png\n",
            "test/AOCSGA0N.png\n",
            "test/Q0DD3W17.png\n",
            "test/YROKP4SR.png\n",
            "test/DQR81THL.png\n",
            "test/BGQV3DZZ.png\n",
            "test/VAFT7PPJ.png\n",
            "test/C8TJHA64.png\n",
            "test/XS3VS8FW.png\n",
            "test/38DVYMUP.png\n",
            "test/VA495YRZ.png\n",
            "test/PX5BG9GG.png\n",
            "test/075FQBQ2.png\n",
            "test/DE41ETBN.png\n",
            "test/UM92OG6T.png\n",
            "test/YJAX7AE8.png\n",
            "test/685NO91O.png\n",
            "test/B5QZFREM.png\n",
            "test/XSISQOPS.png\n",
            "test/WMUQ8U7N.png\n",
            "test/8DZ5Z6MI.png\n",
            "test/HM19CNIG.png\n",
            "test/ZST4UHAU.png\n",
            "test/OGBG2FLC.png\n",
            "test/AOEDT01M.png\n",
            "test/C88VSSKD.png\n",
            "test/0O0GEVG3.png\n",
            "test/M26WPHPE.png\n",
            "test/CPPQCBSM.png\n",
            "test/5VOZK5RG.png\n",
            "test/2NW0GM1L.png\n",
            "test/FY6VAO0U.png\n",
            "test/Q7C6WGD4.png\n",
            "test/2F7XJ52Y.png\n",
            "test/XIKNCVZR.png\n",
            "test/AR9XOL89.png\n",
            "test/73F07JKT.png\n",
            "test/167WBHTT.png\n",
            "test/KTAYKGO4.png\n",
            "test/XP8ZPIVJ.png\n",
            "test/JGPJ5PMO.png\n",
            "test/WOL830IN.png\n",
            "test/0CUKEXUM.png\n",
            "test/66EG3XO5.png\n",
            "test/4FVZQAAJ.png\n",
            "test/NH4FGJI0.png\n",
            "test/ICAYUWUX.png\n",
            "test/T1U0X8TE.png\n",
            "test/FE5SH6FT.png\n",
            "test/3ONMXYQR.png\n",
            "test/O895PLWW.png\n",
            "test/U9LUQOAA.png\n",
            "test/I7TK1ZM6.png\n",
            "test/4FN71HPN.png\n",
            "test/OV0E1RIV.png\n",
            "test/4WBZM047.png\n",
            "test/JLET7A2L.png\n",
            "test/KCKLEW5V.png\n",
            "test/0004TGCC.png\n",
            "test/NZJUZLSI.png\n",
            "test/8MVQ6Z3C.png\n",
            "test/4YM8T5QA.png\n",
            "test/VPZPGIQE.png\n",
            "test/9XV3OVFJ.png\n",
            "test/K7WE5ILO.png\n",
            "test/O34M1IAQ.png\n",
            "test/HLMIV557.png\n",
            "test/GUSKOTQ9.png\n",
            "test/8CQ0FWJF.png\n",
            "test/VGF39I62.png\n",
            "test/T3HEFYTZ.png\n",
            "test/BSIOXI82.png\n",
            "test/UAGNQ8AM.png\n",
            "test/BFXVPQZ4.png\n",
            "test/GHGUQ143.png\n",
            "test/X9O4WIXA.png\n",
            "test/1Z71S9EQ.png\n",
            "test/TP89OPBQ.png\n",
            "test/8KK7PRHD.png\n",
            "test/QHQFWQJN.png\n",
            "test/X42W1O9H.png\n",
            "test/PZ4EO62D.png\n",
            "test/5LGODR1K.png\n",
            "test/K7N619BX.png\n",
            "test/0IBUZ1ZN.png\n",
            "test/9NQJQP1A.png\n",
            "test/ILCI39MK.png\n",
            "test/TQ7SRZAI.png\n",
            "test/U859GOW8.png\n",
            "test/O7YKLKW1.png\n",
            "test/RSWES4E2.png\n",
            "test/0WCUFAV4.png\n",
            "test/9BO7E13U.png\n",
            "test/NX0GJ5AS.png\n",
            "test/EUVE233C.png\n",
            "test/57I3EBWA.png\n",
            "test/WUSGZ5H4.png\n",
            "test/E44A61EX.png\n",
            "test/D1ZNRAWA.png\n",
            "test/B0NK8ZPS.png\n",
            "test/QLVSMHIM.png\n",
            "test/A83T6JML.png\n",
            "test/ZM6NU34T.png\n",
            "test/EMUPBDW4.png\n",
            "test/2MOIYZSH.png\n",
            "test/5BPG9DZ7.png\n",
            "test/WFJA6VRB.png\n",
            "test/Q7M5XW9Z.png\n",
            "test/98XEHJ9P.png\n",
            "test/9WMM4CPJ.png\n",
            "test/KOW0CR8P.png\n",
            "test/NAEA17AR.png\n",
            "test/SKJEIOEV.png\n",
            "test/8YELZGA8.png\n",
            "test/K4R7V5L2.png\n",
            "test/NF7VWT9I.png\n",
            "test/704HNIK7.png\n",
            "test/2NRBTI8A.png\n",
            "test/VPPADO79.png\n",
            "test/OUAE9CTG.png\n",
            "test/P3IAY3HR.png\n",
            "test/2A5MIRFE.png\n",
            "test/DGQPQ4I4.png\n",
            "test/DCBGYY8P.png\n",
            "test/PVCKAIW4.png\n",
            "test/ASE9I31F.png\n",
            "test/XYQGY6XY.png\n",
            "test/V85OZKIC.png\n",
            "test/K05BYQEE.png\n",
            "test/ISFAI54B.png\n",
            "test/RVID6870.png\n",
            "test/U3WST0O4.png\n",
            "test/3DKDRQ5U.png\n",
            "test/H3H1BU9T.png\n",
            "test/HYK0BO54.png\n",
            "test/7NB187HZ.png\n",
            "test/Y2MVJNZL.png\n",
            "test/CQ00FG35.png\n",
            "test/UH1TI7TM.png\n",
            "test/PX0SFKH9.png\n",
            "test/TRU2TX9N.png\n",
            "test/26T2FGPQ.png\n",
            "test/CLRYJ8YV.png\n",
            "test/EQ3B8UWJ.png\n",
            "test/4DUH3KWP.png\n",
            "test/VJ2A5610.png\n",
            "test/1NCNVQGC.png\n",
            "test/69AZF7M9.png\n",
            "test/XFZ9NCG2.png\n",
            "test/EJ1N1Z9T.png\n",
            "test/2JGYFUO2.png\n",
            "test/NLMVTALO.png\n",
            "test/PYGTOWQU.png\n",
            "test/T36CPUIA.png\n",
            "test/XWK73SSN.png\n",
            "test/GIN0SZDQ.png\n",
            "test/HPGY4NN4.png\n",
            "test/IS96UN66.png\n",
            "test/ZR9K3N3D.png\n",
            "test/0XFN38ZE.png\n",
            "test/93OZP6GP.png\n",
            "test/TWKY07T9.png\n",
            "test/MLDO6X6B.png\n",
            "test/T0WJTRQH.png\n",
            "test/KY6RVQ2I.png\n",
            "test/SXTZIHQC.png\n",
            "test/5LTDJWYX.png\n",
            "test/YSASLFNF.png\n",
            "test/U7XQIFDA.png\n",
            "test/L4DSF0Z5.png\n",
            "test/W1PZXIGW.png\n",
            "test/WMLPNTPB.png\n",
            "test/ETW2Y2HB.png\n",
            "test/1NCCHGG3.png\n",
            "test/YKSNIZ7B.png\n",
            "test/WN2BU7YR.png\n",
            "test/NPA57XHY.png\n",
            "test/HKD7ZJPR.png\n",
            "test/OKND1CSN.png\n",
            "test/I2L4EJV5.png\n",
            "test/VCI61H3D.png\n",
            "test/K2D3972U.png\n",
            "test/RB9Y8Y5W.png\n",
            "test/ZIK55751.png\n",
            "test/EOE5YZFS.png\n",
            "test/PIRQCETT.png\n",
            "test/UZXYKBUT.png\n",
            "test/5V05U3EH.png\n",
            "test/P90KD7X4.png\n",
            "test/N5JEAVJZ.png\n",
            "test/K0WGDESN.png\n",
            "test/LM2UU690.png\n",
            "test/D8GW7TRQ.png\n",
            "test/2T1B8VPF.png\n",
            "test/6CRALVM3.png\n",
            "test/IV787HN6.png\n",
            "test/75QK2K6P.png\n",
            "test/SNFB1BFU.png\n",
            "test/4Q3SES76.png\n",
            "test/F4KCL0Y8.png\n",
            "test/BN60Z591.png\n",
            "test/593LZVV8.png\n",
            "test/D0SITLJW.png\n",
            "test/3L7H2A3S.png\n",
            "test/CGI5P5PO.png\n",
            "test/S45F61LX.png\n",
            "test/N26DZFQL.png\n",
            "test/50EL0DQV.png\n",
            "test/ADBSXJ7M.png\n",
            "test/5BDUZAUJ.png\n",
            "test/18BO29W0.png\n",
            "test/GQEXHR8L.png\n",
            "test/4I5BTYDU.png\n",
            "test/AR3B9FMD.png\n",
            "test/HFJ3DUXH.png\n",
            "test/RWSJGO10.png\n",
            "test/XZXWAUCJ.png\n",
            "test/1W26Y5QY.png\n",
            "test/7OLNZVKG.png\n",
            "test/W03K9BAT.png\n",
            "test/GAY1EEAK.png\n",
            "test/NX440T34.png\n",
            "test/ZLOOTSRS.png\n",
            "test/1I2FSEFZ.png\n",
            "test/V1TLWYGW.png\n",
            "test/15KLRMZP.png\n",
            "test/FCQBIVBS.png\n",
            "test/AFKIK0CP.png\n",
            "test/67WH2T7G.png\n",
            "test/AY4YJBJ0.png\n",
            "test/6UC9ODVJ.png\n",
            "test/20AJM1BF.png\n",
            "test/IN2GX462.png\n",
            "test/B21GNF5P.png\n",
            "test/MK507L7T.png\n",
            "test/0EZSRU6M.png\n",
            "test/HHGJ8X4F.png\n",
            "test/M230FKST.png\n",
            "test/K8XUOKAB.png\n",
            "test/GRYERW9O.png\n",
            "test/JGY0O013.png\n",
            "test/9VOZPJRQ.png\n",
            "test/FZOJNA1J.png\n",
            "test/K7GS6URM.png\n",
            "test/M46MS4ZU.png\n",
            "test/XFLW7L9V.png\n",
            "test/0Y9BOQOT.png\n",
            "test/B3Y6ZD8N.png\n",
            "test/IIAD7ZR4.png\n",
            "test/74Z0LUGP.png\n",
            "test/8XBJG7AE.png\n",
            "test/R74B56IQ.png\n",
            "test/S7M123S9.png\n",
            "test/I5HPVALF.png\n",
            "test/5GID3ITJ.png\n",
            "test/RHVOGFJL.png\n",
            "test/CDQMSKAP.png\n",
            "test/LBDLWACS.png\n",
            "test/V7I3ZCHQ.png\n",
            "test/I6DQS3LL.png\n",
            "test/MFMG1FDX.png\n",
            "test/OROJMVP4.png\n",
            "test/KZCZ6G3O.png\n",
            "test/RFHN3G1R.png\n",
            "test/8OOR8MLK.png\n",
            "test/GHAGFONB.png\n",
            "test/ZV8D1P4A.png\n",
            "test/CN2PB45M.png\n",
            "test/5T4TME3M.png\n",
            "test/F955SWBV.png\n",
            "test/8K4SHS43.png\n",
            "test/EG2ROSZ5.png\n",
            "test/1OFZN3CU.png\n",
            "test/TKBJ3VP5.png\n",
            "test/J3BF4ZXY.png\n",
            "test/E08HNKRJ.png\n",
            "test/QFR7STYM.png\n",
            "test/XR00I2U7.png\n",
            "test/0VAWP3L8.png\n",
            "test/NEFRUU30.png\n",
            "test/7AERGO9A.png\n",
            "test/TEFGICLN.png\n",
            "test/H9Y17XYG.png\n",
            "test/T34I6GLI.png\n",
            "test/UP3V9PG5.png\n",
            "test/SQBOAFOK.png\n",
            "test/F860E9AT.png\n",
            "test/KEPUXV2M.png\n",
            "test/QE17W70K.png\n",
            "test/9T662RRM.png\n",
            "test/TEWAUAAY.png\n",
            "test/W40JHTOY.png\n",
            "test/TWD99QXR.png\n",
            "test/EPY31OBP.png\n",
            "test/0C96Z772.png\n",
            "test/WJQ8LYXF.png\n",
            "test/6MH4EX5A.png\n",
            "test/FPHNKCQD.png\n",
            "test/ZKA9FB8E.png\n",
            "test/9GCSNH9A.png\n",
            "test/Y1E9VG57.png\n",
            "test/R3ZH5AGS.png\n",
            "test/8GXGT4ZF.png\n",
            "test/MSW79LZH.png\n",
            "test/6R840PJQ.png\n",
            "test/HJCXB4PB.png\n",
            "test/V9J3X5G7.png\n",
            "test/QDYBCM5P.png\n",
            "test/O226AHUG.png\n",
            "test/KFMPHW5B.png\n",
            "test/FM5I1TN3.png\n",
            "test/3P18YUE9.png\n",
            "test/5ZVZNBSE.png\n",
            "test/7WQUPJPJ.png\n",
            "test/XMX5XKO3.png\n",
            "test/XB1XYPRU.png\n",
            "test/QF2D2ZEA.png\n",
            "test/TMMGL2YC.png\n",
            "test/PLVNF158.png\n",
            "test/QQ4YLZDN.png\n",
            "test/S1P3BI71.png\n",
            "test/1FDP4SV4.png\n",
            "test/H5WJDFL0.png\n",
            "test/LH1HULYL.png\n",
            "test/FQFWO9MY.png\n",
            "test/PGK6AWQ9.png\n",
            "test/4QM42XYW.png\n",
            "test/7LD7RY8T.png\n",
            "test/PUABA3BV.png\n",
            "test/H3H4OT5P.png\n",
            "test/9V3TPKMU.png\n",
            "test/THE68GVT.png\n",
            "test/4WGFQ34M.png\n",
            "test/63ICDZK2.png\n",
            "test/NIZYIKON.png\n",
            "test/19GXPZ49.png\n",
            "test/HA76TRN6.png\n",
            "test/ROTQ4YJ9.png\n",
            "test/1RYS9J5G.png\n",
            "test/CWCMKI05.png\n",
            "test/5V56QING.png\n",
            "test/LJPD35IG.png\n",
            "test/1O0MRWDH.png\n",
            "test/KW7WPHXG.png\n",
            "test/6A78ERE7.png\n",
            "test/BB98FJT4.png\n",
            "test/22SDX8DS.png\n",
            "test/WRMBGV1N.png\n",
            "test/M2NWWLY4.png\n",
            "test/PGVA0N7J.png\n",
            "test/TV93JIKA.png\n",
            "test/F6ZGTUCM.png\n",
            "test/EHW7OK57.png\n",
            "test/GAD3710Z.png\n",
            "test/MYNHAVDS.png\n",
            "test/PVWYD7TO.png\n",
            "test/RSR32A4B.png\n",
            "test/I337CE8O.png\n",
            "test/GHR6IYGK.png\n",
            "test/9J9QYTHQ.png\n",
            "test/ZWTZWPGL.png\n",
            "test/FX5JXIUF.png\n",
            "test/YW9CGI1L.png\n",
            "test/E7SZX4PX.png\n",
            "test/F66NZ6Y5.png\n",
            "test/FE5QFT8K.png\n",
            "test/CRNDZXXN.png\n",
            "test/MWB66D79.png\n",
            "test/AMFO1IQX.png\n",
            "test/XS8ZE17V.png\n",
            "test/Y1OFLTID.png\n",
            "test/Z05NFTIQ.png\n",
            "test/GQJM916R.png\n",
            "test/5HJYMQFN.png\n",
            "test/VXY66GBD.png\n",
            "test/Y6YL86GE.png\n",
            "test/GN58KQ19.png\n",
            "test/XJ8TD9SH.png\n",
            "test/KOUF5B66.png\n",
            "test/W15GZJOD.png\n",
            "test/ZXSZ1U7V.png\n",
            "test/ERGQVBV4.png\n",
            "test/AH6GJCDI.png\n",
            "test/8SU3XOLU.png\n",
            "test/N7F3M8AB.png\n",
            "test/GN47COBJ.png\n",
            "test/ZM0ECR30.png\n",
            "test/ONCPUEU6.png\n",
            "test/GS09BVZJ.png\n",
            "test/VNCA2SIF.png\n",
            "test/RFH9RJSI.png\n",
            "test/5N2BGV1A.png\n",
            "test/CV96IO2S.png\n",
            "test/OXGHY3QI.png\n",
            "test/HLDFLLAL.png\n",
            "test/LBVLWYCS.png\n",
            "test/9LU6YFWY.png\n",
            "test/S4VR0V0Q.png\n",
            "test/Y4O0AFN4.png\n",
            "test/ZDQC4362.png\n",
            "test/A5XOMJJI.png\n",
            "test/TZV7NDZF.png\n",
            "test/Z66L8LZJ.png\n",
            "test/9WXO2IFZ.png\n",
            "test/NDPJF7S4.png\n",
            "test/ZR7KOOVN.png\n",
            "test/27FY042Q.png\n",
            "test/A67PEAM0.png\n",
            "test/KEWVDFIF.png\n",
            "test/F941GAQ2.png\n",
            "test/0B1Q99FL.png\n",
            "test/E0GC43AX.png\n",
            "test/YDX7GJLG.png\n",
            "test/SFD35PN7.png\n",
            "test/YCHB5XWC.png\n",
            "test/GVF58QGO.png\n",
            "test/E4IOC0UZ.png\n",
            "test/1OQ3L09F.png\n",
            "test/CKW8Q2MF.png\n",
            "test/9J10EQV2.png\n",
            "test/ZS1P7V8T.png\n",
            "test/SKHCR08Z.png\n",
            "test/HTMZE9JV.png\n",
            "test/NKPBD3O5.png\n",
            "test/VWWUUHJB.png\n",
            "test/XHEI62OX.png\n",
            "test/AK0QCAJA.png\n",
            "test/B2DS88VC.png\n",
            "test/ZB2MUBUU.png\n",
            "test/GRGH1SAP.png\n",
            "test/4GYIE8MK.png\n",
            "test/D0JHS5Z2.png\n",
            "test/TGTFJQZK.png\n",
            "test/ZGVPMEFV.png\n",
            "test/UNZ9UKCD.png\n",
            "test/ZG8OC3G3.png\n",
            "test/G06P1VIL.png\n",
            "test/XSNXT2DY.png\n",
            "test/5LAUJVQI.png\n",
            "test/U9V4ZQFZ.png\n",
            "test/0SOJO99Q.png\n",
            "test/GOCOJKUV.png\n",
            "test/ULDJ3J2J.png\n",
            "test/Y6CGYA6M.png\n",
            "test/6Z0NSGH8.png\n",
            "test/FTSZ0MAO.png\n",
            "test/0IQ9KP95.png\n",
            "test/PFVAF8FE.png\n",
            "test/FJMN5BJX.png\n",
            "test/O8794KIC.png\n",
            "test/LOG9BDS2.png\n",
            "test/MSZOHW8D.png\n",
            "test/4X45ABMU.png\n",
            "test/KCZ8N5AG.png\n",
            "test/2BHVHBIE.png\n",
            "test/REJBC8V3.png\n",
            "test/1JCFNMPR.png\n",
            "test/NYTT3G2I.png\n",
            "test/CSA5BER2.png\n",
            "test/RC9YCHDP.png\n",
            "test/F02OWVDM.png\n",
            "test/19Y2ML4S.png\n",
            "test/3U06ZM96.png\n",
            "test/SJQUTCO6.png\n",
            "test/6QGOPL5P.png\n",
            "test/1JSEZCTN.png\n",
            "test/IJCIO1ZI.png\n",
            "test/45YEB1RM.png\n",
            "test/HQUXLOXJ.png\n",
            "test/SAJXAQUX.png\n",
            "test/4HZ5UXIJ.png\n",
            "test/MLFBN6OS.png\n",
            "test/A7SZU9N3.png\n",
            "test/GR3IUJ76.png\n",
            "test/MKY8AJY2.png\n",
            "test/HLA9KVNX.png\n",
            "test/TYOM8H0X.png\n",
            "test/Y2HKOBMJ.png\n",
            "test/1EYMJX9K.png\n",
            "test/RGKACZAA.png\n",
            "test/5VGV7KFR.png\n",
            "test/WT1SLEUN.png\n",
            "test/609833GW.png\n",
            "test/R6ZWKG41.png\n",
            "test/YNXO1SUA.png\n",
            "test/WVS4IQ9B.png\n",
            "test/4JAB7OX3.png\n",
            "test/SV4CXGYK.png\n",
            "test/ZK4ZMN29.png\n",
            "test/6SUIU2U3.png\n",
            "test/XF5PEW7P.png\n",
            "test/3TV8CXU2.png\n",
            "test/GJF6V2R7.png\n",
            "test/EC3OXFN9.png\n",
            "test/XSTRHHVP.png\n",
            "test/7XFXHXLP.png\n",
            "test/HS9W8QPT.png\n",
            "test/NU9LB8XS.png\n",
            "test/JOXK8EC2.png\n",
            "test/TYBFPIZ6.png\n",
            "test/Y8YCSDUT.png\n",
            "test/ZFPMY00L.png\n",
            "test/XNH4Z2CE.png\n",
            "test/B4H2WTPZ.png\n",
            "test/UPEV7EZZ.png\n",
            "test/31QI1WI0.png\n",
            "test/0K7TZ5JJ.png\n",
            "test/88QBFWGB.png\n",
            "test/RJ8TVHSC.png\n",
            "test/7W21SNIL.png\n",
            "test/1AZEVUCU.png\n",
            "test/SQQ4A592.png\n",
            "test/W5SRI74A.png\n",
            "test/4X4KI0II.png\n",
            "test/5MGURYOP.png\n",
            "test/42JDF4SJ.png\n",
            "test/UHBSA4U7.png\n",
            "test/PKSHSP9T.png\n",
            "test/4EG5Y6L3.png\n",
            "test/CWZ55JJ7.png\n",
            "test/P9OI7I37.png\n",
            "test/CGHMZYVC.png\n",
            "test/UFJ4RX9K.png\n",
            "test/AU50LL04.png\n",
            "test/RZ2R56H1.png\n",
            "test/0KZLNP0E.png\n",
            "test/6603VS8Y.png\n",
            "test/D2FT9VK1.png\n",
            "test/V1FBFP43.png\n",
            "test/7VYQUIYM.png\n",
            "test/DZMNJ7DH.png\n",
            "test/SH0M5Y7V.png\n",
            "test/2UO7X8PA.png\n",
            "test/LRFQT247.png\n",
            "test/HKUMDA5D.png\n",
            "test/3APF6Y2Y.png\n",
            "test/KJNVK5MQ.png\n",
            "test/3XM66XAY.png\n",
            "test/Q1PJHS2K.png\n",
            "test/HIEC03CW.png\n",
            "test/KDN1M6Q2.png\n",
            "test/7RIQG294.png\n",
            "test/TK3B6DVJ.png\n",
            "test/JC4FR0WT.png\n",
            "test/1GCY49BL.png\n",
            "test/5PV1RDUJ.png\n",
            "test/9HBEQ17Z.png\n",
            "test/2HA9SBJZ.png\n",
            "test/TXFZTSSW.png\n",
            "test/KW5WTE13.png\n",
            "test/P3IE3L1E.png\n",
            "test/0AFN5ZV5.png\n",
            "test/H43BJ8VE.png\n",
            "test/ATBA9TXT.png\n",
            "test/4ITVIR86.png\n",
            "test/C6LYK3CM.png\n",
            "test/WDRRDE5T.png\n",
            "test/NM568AJ0.png\n",
            "test/KAW466ZY.png\n",
            "test/L1NO9WZG.png\n",
            "test/65E9EMY0.png\n",
            "test/53IHQU8W.png\n",
            "test/AIQEJBF3.png\n",
            "test/KS03MB42.png\n",
            "test/EOKWQ1Y8.png\n",
            "test/K82KSBRZ.png\n",
            "test/ENLJC5PE.png\n",
            "test/2JNWPCQO.png\n",
            "test/BLLZIC1B.png\n",
            "test/RSX5C5F0.png\n",
            "test/5XXKP9FK.png\n",
            "test/REB4N7B0.png\n",
            "test/WT3KFMVX.png\n",
            "test/RQFAMQ7Q.png\n",
            "test/YNVU31RW.png\n",
            "test/G4LQ1XXJ.png\n",
            "test/I8CO2DTW.png\n",
            "test/4EYU1R9A.png\n",
            "test/ROHO7OSA.png\n",
            "test/DQE6WY68.png\n",
            "test/50GAN0R5.png\n",
            "test/FXN3MN5H.png\n",
            "test/J6AWQATJ.png\n",
            "test/XT6OG6W2.png\n",
            "test/DIHAQQ3P.png\n",
            "test/7CRKIILE.png\n",
            "test/VNL6NS9G.png\n",
            "test/EW0NMC7T.png\n",
            "test/38D6VLAW.png\n",
            "test/6XLMAGHI.png\n",
            "test/71IGLLIK.png\n",
            "test/LR84VNIE.png\n",
            "test/UZPXK5GE.png\n",
            "test/WTFL38GO.png\n",
            "test/ERFNM34V.png\n",
            "test/ZBFTUNTE.png\n",
            "test/78KIRLRJ.png\n",
            "test/0VM6GNNF.png\n",
            "test/EF40Y2BK.png\n",
            "test/KSQATTPW.png\n",
            "test/EUXQU81S.png\n",
            "test/6ERZL4SJ.png\n",
            "test/E2T7N6N5.png\n",
            "test/GAOI200V.png\n",
            "test/PD88YXOA.png\n",
            "test/NFL07FDH.png\n",
            "test/N86G1HZK.png\n",
            "test/AEX25DQR.png\n",
            "test/MEEWETAA.png\n",
            "test/APANI9NM.png\n",
            "test/0SSD08XC.png\n",
            "test/NK8BV1T6.png\n",
            "test/WATR0XYE.png\n",
            "test/SHUI96QS.png\n",
            "test/LU13UFSX.png\n",
            "test/W98ABM1I.png\n",
            "test/DTEBI8CP.png\n",
            "test/LEMSL7S0.png\n",
            "test/W6JMXIE2.png\n",
            "test/4QNU4SSY.png\n",
            "test/NM2YPP3S.png\n",
            "test/0GNGXM28.png\n",
            "test/FEUJHDUD.png\n",
            "test/C0Y01ZA7.png\n",
            "test/6KRHPY8H.png\n",
            "test/VG6ZHYYB.png\n",
            "test/T0VXWY5G.png\n",
            "test/NGK78SQE.png\n",
            "test/YHN5RCED.png\n",
            "test/WBPIU4OF.png\n",
            "test/R0K2BEVA.png\n",
            "test/8O5TYPRR.png\n",
            "test/X3YHE8G9.png\n",
            "test/CXBFP0A3.png\n",
            "test/7YUSF7WR.png\n",
            "test/RDLZAK51.png\n",
            "test/Y8XKVCHS.png\n",
            "test/KQRVK73I.png\n",
            "test/EQIT3IWY.png\n",
            "test/XMVCR5FX.png\n",
            "test/XE8HIX8C.png\n",
            "test/5CQKGJ1X.png\n",
            "test/QJK2O8S9.png\n",
            "test/SY2OWL4B.png\n",
            "test/JHDQ64SC.png\n",
            "test/CVSO4IWM.png\n",
            "test/ERUX82GT.png\n",
            "test/Y496C6FA.png\n",
            "test/W7IZMJ57.png\n",
            "test/IY7MEVBB.png\n",
            "test/3V6KF13B.png\n",
            "test/4OLSX1ZB.png\n",
            "test/8V5BN8AS.png\n",
            "test/PYHGXNJV.png\n",
            "test/DXNTKYER.png\n",
            "test/344V6F43.png\n",
            "test/IG5S4D6G.png\n",
            "test/LRI5SLHA.png\n",
            "test/WM4IDMDN.png\n",
            "test/YIVPWSW3.png\n",
            "test/6EIGARX9.png\n",
            "test/3HV3MYGM.png\n",
            "test/NFYJ3HJZ.png\n",
            "test/N0U2ZY9D.png\n",
            "test/REODPPH6.png\n",
            "test/5DNZJILM.png\n",
            "test/RAJI4HEY.png\n",
            "test/PML7ZJ5A.png\n",
            "test/HWWV2X5J.png\n",
            "test/YK21X94O.png\n",
            "test/MBFT15I0.png\n",
            "test/UWGVR9NY.png\n",
            "test/IAVUEKYA.png\n",
            "test/V5LZ6LVU.png\n",
            "test/0R61112H.png\n",
            "test/YJLUKMWO.png\n",
            "test/F7SD4MKH.png\n",
            "test/DDD4SLYD.png\n",
            "test/0UENFM0T.png\n",
            "test/LKOJ11IK.png\n",
            "test/LWQE018D.png\n",
            "test/NE8EI8L2.png\n",
            "test/OEVV19T9.png\n",
            "test/MVHLDA08.png\n",
            "test/4AFELH16.png\n",
            "test/K7XGSQ7V.png\n",
            "test/JRA2GZ4Q.png\n",
            "test/WD6IR21V.png\n",
            "test/2ARJM4V0.png\n",
            "test/417M4POV.png\n",
            "test/UJ4BCZ6R.png\n",
            "test/PODUJU9Z.png\n",
            "test/FJ1RZ3U4.png\n",
            "test/7Q9I3Z1X.png\n",
            "test/PB1KXNCM.png\n",
            "test/7ABYKUP0.png\n",
            "test/8PA1625S.png\n",
            "test/BKKMVLS5.png\n",
            "test/XMF3MAX0.png\n",
            "test/WX5N0MIT.png\n",
            "test/DTVZDD0O.png\n",
            "test/VXYNWVML.png\n",
            "test/75TI7G3F.png\n",
            "test/HALK8555.png\n",
            "test/E4RQ0C9J.png\n",
            "test/VIUSDELS.png\n",
            "test/6PXYETZ9.png\n",
            "test/1QSTYDT0.png\n",
            "test/U5R4P8NV.png\n",
            "test/KMOQLOR3.png\n",
            "test/WQFMKWFI.png\n",
            "test/VDPN3KVS.png\n",
            "test/41QVMCLG.png\n",
            "test/USZGIPW4.png\n",
            "test/TZ3XTX5Y.png\n",
            "test/113TM2OZ.png\n",
            "test/LSOLLT7G.png\n",
            "test/SHSUE8V8.png\n",
            "test/G57REWAX.png\n",
            "test/Z57S3OUS.png\n",
            "test/A1I29ITS.png\n",
            "test/3UTVZDRE.png\n",
            "test/RN8AKRKR.png\n",
            "test/3ZEEIUGO.png\n",
            "test/4UDFN2Q0.png\n",
            "test/I1CMXNT4.png\n",
            "test/GBLZPEY4.png\n",
            "test/FPF8VVYI.png\n",
            "test/QQKZAY8C.png\n",
            "test/T1KMSU18.png\n",
            "test/CCK6CRH5.png\n",
            "test/EZEPMIQQ.png\n",
            "test/E51GNSWH.png\n",
            "test/LOBE7HFP.png\n",
            "test/S8KC5APO.png\n",
            "test/ZRZULSW0.png\n",
            "test/KPQNVLH1.png\n",
            "test/X8V1MG4O.png\n",
            "test/BJ0OHQWT.png\n",
            "test/VXIM5WK0.png\n",
            "test/15ME2CT2.png\n",
            "test/U1A7I89R.png\n",
            "test/D890BYIO.png\n",
            "test/4XZKICS2.png\n",
            "test/KCIU2B2F.png\n",
            "test/95H02EXA.png\n",
            "test/NEA1PYH9.png\n",
            "test/V5U86JBI.png\n",
            "test/IATQDF0F.png\n",
            "test/5FAXBM0N.png\n",
            "test/9GGO466W.png\n",
            "test/PP4PGH4S.png\n",
            "test/UHHUMUOD.png\n",
            "test/UTTIKFDM.png\n",
            "test/MGFQXGK9.png\n",
            "test/BYOA5E3Y.png\n",
            "test/PSURR8GU.png\n",
            "test/SQMS9QJU.png\n",
            "test/1S7Y0Y66.png\n",
            "test/R5W18BW7.png\n",
            "test/BLVVYECY.png\n",
            "test/HK3EWDYD.png\n",
            "test/USC37IPN.png\n",
            "test/FQPF5GPT.png\n",
            "test/180ORPRB.png\n",
            "test/BPVD78KF.png\n",
            "test/1JSNI8RR.png\n",
            "test/X876D6HQ.png\n",
            "test/YB13QK71.png\n",
            "test/1PN9WZH0.png\n",
            "test/HSRFM6CG.png\n",
            "test/W7R3HFUK.png\n",
            "test/1EDIKOCH.png\n",
            "test/MERBFCWS.png\n",
            "test/RMA0XX6Z.png\n",
            "test/O6GNYV41.png\n",
            "test/5QR9TTEB.png\n",
            "test/DMPZKG16.png\n",
            "test/8KCH2BQJ.png\n",
            "test/1PSL9N9J.png\n",
            "test/NJRLE80Y.png\n",
            "test/VYZ8N8AM.png\n",
            "test/O9BU4QDR.png\n",
            "test/HOYXY4XE.png\n",
            "test/B2NTHQOV.png\n",
            "test/ALYTK9DJ.png\n",
            "test/Z2WN47VT.png\n",
            "test/5IFWAMJD.png\n",
            "test/F4BCIISH.png\n",
            "test/UUOKO7ZH.png\n",
            "test/D0706IDR.png\n",
            "test/XPM3J7QG.png\n",
            "test/3EX8HXKY.png\n",
            "test/X1OM3S0K.png\n",
            "test/9T6QIAZ2.png\n",
            "test/SDZ4B4LA.png\n",
            "test/7Y5MY1IM.png\n",
            "test/SSSW8JIA.png\n",
            "test/9OQO8DCU.png\n",
            "test/P7M7D7P5.png\n",
            "test/CFMH0ECC.png\n",
            "test/GFIK12GI.png\n",
            "test/W2ZJGJ9T.png\n",
            "test/0FDJUUT3.png\n",
            "test/EUGXNYPR.png\n",
            "test/VNPGWW9E.png\n",
            "test/QJPQIXPS.png\n",
            "test/CYGADT6F.png\n",
            "test/GUA1XK4U.png\n",
            "test/319AY5T7.png\n",
            "test/3JK0LAL6.png\n",
            "test/STB76XPJ.png\n",
            "test/ZOTHWY3V.png\n",
            "test/NRYSKLKU.png\n",
            "test/JEL62H3S.png\n",
            "test/6QJ9X8Z0.png\n",
            "test/2G194BII.png\n",
            "test/YCG5YAVQ.png\n",
            "test/PJXUYOV2.png\n",
            "test/Y044OCVH.png\n",
            "test/0J735KWI.png\n",
            "test/TW6DYZ3Y.png\n",
            "test/LW6P1FNV.png\n",
            "test/7RGA3R3B.png\n",
            "test/0PR1HR1N.png\n",
            "test/QAAYJ6OO.png\n",
            "test/6D0BYOLD.png\n",
            "test/PVTP59XA.png\n",
            "test/JZMZ6P7N.png\n",
            "test/YYU842LX.png\n",
            "test/20X76HIT.png\n",
            "test/D9TU7JBX.png\n",
            "test/BURKZYCO.png\n",
            "test/3Z1ODXID.png\n",
            "test/OXEH9HBP.png\n",
            "test/M7ET09KZ.png\n",
            "test/LSRTZ6AE.png\n",
            "test/EPT2UOAH.png\n",
            "test/67YIE0IX.png\n",
            "test/O1G8OCFL.png\n",
            "test/XVC1MAME.png\n",
            "test/UQ6VM68R.png\n",
            "test/HDFSMETI.png\n",
            "test/R0JG017M.png\n",
            "test/1XBH4L4I.png\n",
            "test/AQJV1ZLL.png\n",
            "test/HMOR3M4Y.png\n",
            "test/N3HTU3WU.png\n",
            "test/AN3TPH8D.png\n",
            "test/DTDSNWX6.png\n",
            "test/YCKXLKKH.png\n",
            "test/CRCEK26H.png\n",
            "test/30IHK1QR.png\n",
            "test/TGMN2AWR.png\n",
            "test/9RLGMPP6.png\n",
            "test/KA3SJRAL.png\n",
            "test/MSDZN9A2.png\n",
            "test/ACFZL14Z.png\n",
            "test/YP8K6EMN.png\n",
            "test/JHO7VBKK.png\n",
            "test/VQ0O1MHS.png\n",
            "test/48UW8KXP.png\n",
            "test/65Y08YZE.png\n",
            "test/W24VW01B.png\n",
            "test/9PF51RF2.png\n",
            "test/KQ0D0ER4.png\n",
            "test/SQEPZUAE.png\n",
            "test/OKOQCMZH.png\n",
            "test/1VXY73QX.png\n",
            "test/NWV01D66.png\n",
            "test/7FGCV4HN.png\n",
            "test/TI5UW382.png\n",
            "test/DWBGE2CK.png\n",
            "test/8SQRJ5RE.png\n",
            "test/4AGXH0ZY.png\n",
            "test/X7QXAFAV.png\n",
            "test/9B1HEG6Y.png\n",
            "test/KODTWP9B.png\n",
            "test/R3KH9I4M.png\n",
            "test/BYMPJOBL.png\n",
            "test/C58ZR6A0.png\n",
            "test/3ZQRU0H6.png\n",
            "test/52HTN5LS.png\n",
            "test/4MG4OAF2.png\n",
            "test/T318YY54.png\n",
            "test/1GKT5C6X.png\n",
            "test/PKYJLANT.png\n",
            "test/JKF0CCIQ.png\n",
            "test/MCYLT2IE.png\n",
            "test/E65888NI.png\n",
            "test/263HRY3W.png\n",
            "test/2FXAP61V.png\n",
            "test/00J6CTJ6.png\n",
            "test/DRUICDXR.png\n",
            "test/O78K3U0E.png\n",
            "test/82P5KA4S.png\n",
            "test/RNOAILT9.png\n",
            "test/DH2C21YL.png\n",
            "test/Y6MYW9KG.png\n",
            "test/FAOKO60F.png\n",
            "test/98AN6KWP.png\n",
            "test/5WFWCK5M.png\n",
            "test/GLLS6MHN.png\n",
            "test/1LU8FA17.png\n",
            "test/KV8YIMRY.png\n",
            "test/37G8V3C5.png\n",
            "test/RPIE60D4.png\n",
            "test/CA657NI5.png\n",
            "test/ABA3ZZIO.png\n",
            "test/BQIAL618.png\n",
            "test/NLRX3RGA.png\n",
            "test/ACCNR8ZJ.png\n",
            "test/WY0NCI5P.png\n",
            "test/D1T42S7O.png\n",
            "test/B07DVZQJ.png\n",
            "test/QOOXNPAU.png\n",
            "test/1J30PP4W.png\n",
            "test/4GH6EQEI.png\n",
            "test/X8MRPD1I.png\n",
            "test/9DYSJG3I.png\n",
            "test/BH0GURP4.png\n",
            "test/UIQ4S4DK.png\n",
            "test/OX2E1FO8.png\n",
            "test/TKGVTGGR.png\n",
            "test/BDL4VW9B.png\n",
            "test/B70LTF6W.png\n",
            "test/SOTIMYQO.png\n",
            "test/VMWYTCKD.png\n",
            "test/CEVG6H9D.png\n",
            "test/TABM60YK.png\n",
            "test/3PHF6QAP.png\n",
            "test/X45AMEJN.png\n",
            "test/3NWVMJWH.png\n",
            "test/KBLPO551.png\n",
            "test/IEEO30F0.png\n",
            "test/HUC64LWV.png\n",
            "test/Q9ZF8KS0.png\n",
            "test/NRFSKZP0.png\n",
            "test/VWEXE6QU.png\n",
            "test/0543S2ZJ.png\n",
            "test/QIYMSAHS.png\n",
            "test/RVPSVM5G.png\n",
            "test/ERSIBA9Y.png\n",
            "test/WBJVF4OS.png\n",
            "test/383GJBEX.png\n",
            "test/X39HPQLZ.png\n",
            "test/LW3TX1LK.png\n",
            "test/AINE637Z.png\n",
            "test/B9G10AX8.png\n",
            "test/LFBKT38C.png\n",
            "test/TW6VFL5D.png\n",
            "test/840WPGN4.png\n",
            "test/RKNMB5T7.png\n",
            "test/W4EPUZA8.png\n",
            "test/XIRFXGFX.png\n",
            "test/GP9UYZS2.png\n",
            "test/TPYRWZVV.png\n",
            "test/FZI8QLSJ.png\n",
            "test/RHNU5HZ3.png\n",
            "test/GS2OT7MQ.png\n",
            "test/8VOIC035.png\n",
            "test/IN1BOAHK.png\n",
            "test/HAD2QVZG.png\n",
            "test/WIX1P7GK.png\n",
            "test/8K54BXU5.png\n",
            "test/93NVOVUD.png\n",
            "test/8HDL1FW7.png\n",
            "test/SHAVMJEC.png\n",
            "test/L00M06BJ.png\n",
            "test/GF040LMM.png\n",
            "test/T8AKXUTG.png\n",
            "test/P38ZIJ4Q.png\n",
            "test/V4GLVKI5.png\n",
            "test/FXWJCZ30.png\n",
            "test/LZNKV02O.png\n",
            "test/0YGLIDPW.png\n",
            "test/DMQA9QYU.png\n",
            "test/U7881UE4.png\n",
            "test/SJNKTR61.png\n",
            "test/NTSVVNAW.png\n",
            "test/GV0YW8A1.png\n",
            "test/AI7ZA9Z7.png\n",
            "test/Q1IU319V.png\n",
            "test/VOTVV2VY.png\n",
            "test/JZ1QH7AR.png\n",
            "test/VYNKZAN2.png\n",
            "test/JHIR8KLE.png\n",
            "test/Y8PB6TNT.png\n",
            "test/2IFCQCOP.png\n",
            "test/OPWEMERA.png\n",
            "test/V59NWVL3.png\n",
            "test/FWTRYKH3.png\n",
            "test/GERTUHCA.png\n",
            "test/GY2FI2WE.png\n",
            "test/FQOM6C6E.png\n",
            "test/KP8UD0C2.png\n",
            "test/ISVKAC5V.png\n",
            "test/CSD6ALIF.png\n",
            "test/F7W1937E.png\n",
            "test/RW9IOQ3O.png\n",
            "test/8PEODYQL.png\n",
            "test/AJTM8ASP.png\n",
            "test/LTRBIBJR.png\n",
            "test/TQSABVHN.png\n",
            "test/57ROSBIQ.png\n",
            "test/QU1C2USD.png\n",
            "test/ICEGZLQU.png\n",
            "test/DP7MVFDJ.png\n",
            "test/TPZ3EP8M.png\n",
            "test/NW6PH4P2.png\n",
            "test/9P0NXMLS.png\n",
            "test/4IOWQQVN.png\n",
            "test/MLNB3GRD.png\n",
            "test/MA5OUBUG.png\n",
            "test/UC03UNPB.png\n",
            "test/7C51K599.png\n",
            "test/RMVKJ2O4.png\n",
            "test/0KKW56DP.png\n",
            "test/YYLSOS94.png\n",
            "test/V3HUNAUS.png\n",
            "test/I3Z1W5ZU.png\n",
            "test/537RI5LV.png\n",
            "test/P1EF6UFB.png\n",
            "test/GZ0JI6IN.png\n",
            "test/UC6KMZE9.png\n",
            "test/0ZDGAQ66.png\n",
            "test/CID5H9F1.png\n",
            "test/EIONOY4J.png\n",
            "test/7MTGZ33F.png\n",
            "test/2SUQIF9F.png\n",
            "test/XT1L8C8U.png\n",
            "test/4QWLQDTV.png\n",
            "test/PHI5VEGF.png\n",
            "test/E75R304A.png\n",
            "test/4TB0SD67.png\n",
            "test/4B24VTIS.png\n",
            "test/17VAWD6D.png\n",
            "test/JZG2DEIV.png\n",
            "test/J1LJWVZ8.png\n",
            "test/4CLMFB49.png\n",
            "test/6BGEUXQR.png\n",
            "test/205OPHJL.png\n",
            "test/EYTWSN2L.png\n",
            "test/V6NX1MTQ.png\n",
            "test/IKEL2Q6Q.png\n",
            "test/KZWBVVRB.png\n",
            "test/03KA7ID9.png\n",
            "test/W0MGZENZ.png\n",
            "test/8QT4EH91.png\n",
            "test/ASHQOTPT.png\n",
            "test/TZZC8N2T.png\n",
            "test/ALBMB8ER.png\n",
            "test/2490C0EH.png\n",
            "test/VIAZYXPB.png\n",
            "test/X030ER5B.png\n",
            "test/3HMTWEZH.png\n",
            "test/M7EXNJID.png\n",
            "test/FDKMUYSP.png\n",
            "test/VPT4TLKN.png\n",
            "test/7FHKBTSY.png\n",
            "test/SPR25482.png\n",
            "test/YAQPKB3P.png\n",
            "test/8W3M5082.png\n",
            "test/L16SZHYC.png\n",
            "test/RXEYS8RV.png\n",
            "test/N1MXCJR5.png\n",
            "test/R6PZ6VVO.png\n",
            "test/SOQVOSXP.png\n",
            "test/9O0IKO62.png\n",
            "test/4EHL5QKL.png\n",
            "test/8B7MKXUZ.png\n",
            "test/MUQWPXAK.png\n",
            "test/1CB3S6SE.png\n",
            "test/5M23VXW5.png\n",
            "test/62SQNJTO.png\n",
            "test/GUT1Z0E6.png\n",
            "test/F604ZPSC.png\n",
            "test/QS03Z6UU.png\n",
            "test/KGERABZH.png\n",
            "test/IGQ9LHD4.png\n",
            "test/4WLIWOWT.png\n",
            "test/1UTHR6BB.png\n",
            "test/RHD6UT3K.png\n",
            "test/1D40ML8F.png\n",
            "test/2JQV939I.png\n",
            "test/18JN5LLC.png\n",
            "test/OSHFOR5K.png\n",
            "test/SNM1S386.png\n",
            "test/LNQPU9FI.png\n",
            "test/UXFK6IQL.png\n",
            "test/ALVC9C52.png\n",
            "test/XWF6KIQU.png\n",
            "test/ZC5ECIN7.png\n",
            "test/FN8OP16Q.png\n",
            "test/ZGC3OLAS.png\n",
            "test/2SI197S6.png\n",
            "test/TJ2IAI73.png\n",
            "test/HINM2IRP.png\n",
            "test/4NXCDUS0.png\n",
            "test/HRYVZHOB.png\n",
            "test/C569CEJS.png\n",
            "test/10V61SLT.png\n",
            "test/1CSPCQ4M.png\n",
            "test/5LFW8HJC.png\n",
            "test/3KLH7HVX.png\n",
            "test/IWH9ZKSU.png\n",
            "test/VXN21UR9.png\n",
            "test/09VCYD6C.png\n",
            "test/PHLUVYBJ.png\n",
            "test/GWH06L1J.png\n",
            "test/RMEHUA7I.png\n",
            "test/O0GRASV5.png\n",
            "test/IAKPLIWR.png\n",
            "test/XTUHEZQN.png\n",
            "test/KXNFOAAE.png\n",
            "test/M1Z172TO.png\n",
            "test/KHKH82I4.png\n",
            "test/7KAVW5TN.png\n",
            "test/K1HN3U8Q.png\n",
            "test/L2T2R1BC.png\n",
            "test/WDSBMLTB.png\n",
            "test/1GB1P26C.png\n",
            "test/TK293IKA.png\n",
            "test/233Y1OLM.png\n",
            "test/6HYO4K3S.png\n",
            "test/GLJEJDV5.png\n",
            "test/6VYYL18V.png\n",
            "test/V8LU2SGV.png\n",
            "test/3R031Y5H.png\n",
            "test/9LH8ECSA.png\n",
            "test/ORVMY0LW.png\n",
            "test/JDDUODZ1.png\n",
            "test/TJG791IG.png\n",
            "test/R60F6GMK.png\n",
            "test/DPT2XHE4.png\n",
            "test/ZCQHRVOK.png\n",
            "test/OBDAGTLB.png\n",
            "test/YAYXCAWI.png\n",
            "test/BQVMKQWE.png\n",
            "test/9FMZ04RT.png\n",
            "test/KN9IPBR1.png\n",
            "test/DKJGX0AN.png\n",
            "test/EG058IYL.png\n",
            "test/8Y5DQIG7.png\n",
            "test/AQ84LNAQ.png\n",
            "test/HMIG9O5L.png\n",
            "test/DOATGE9T.png\n",
            "test/CJDVSMNO.png\n",
            "test/CDAH0OI7.png\n",
            "test/ZO322R4Q.png\n",
            "test/U3ATFJGI.png\n",
            "test/IU3LCAQG.png\n",
            "test/IT9OVRVT.png\n",
            "test/9VUJWVI0.png\n",
            "test/WKRN2EEY.png\n",
            "test/5XSQ5MJP.png\n",
            "test/AKF99O4Q.png\n",
            "test/WXTJP8EW.png\n",
            "test/HPU406YH.png\n",
            "test/XVU5FNTV.png\n",
            "test/E3GDH7V5.png\n",
            "test/5DJZAHOE.png\n",
            "test/KYCQGUEF.png\n",
            "test/61H23JWF.png\n",
            "test/Q7W6H5QE.png\n",
            "test/HIIZIARW.png\n",
            "test/7TXE7KS4.png\n",
            "test/TT3TXS6K.png\n",
            "test/4WZYMBTC.png\n",
            "test/IYFU8OWI.png\n",
            "test/Y57IZH6M.png\n",
            "test/UUUZKEHR.png\n",
            "test/29UX8GMZ.png\n",
            "test/RF3IHK2L.png\n",
            "test/OBYHB00C.png\n",
            "test/SROH7UNA.png\n",
            "test/VJQZKFD1.png\n",
            "test/Q58CDQTW.png\n",
            "test/YSMJLK18.png\n",
            "test/D51VDMB8.png\n",
            "test/P8SJPKXK.png\n",
            "test/DMY1BEN0.png\n",
            "test/1IZPXPN9.png\n",
            "test/0LPNHTSB.png\n",
            "test/I3RF4P12.png\n",
            "test/BNVBKTI8.png\n",
            "test/75M4NPQX.png\n",
            "test/368XHYZU.png\n",
            "test/XM445G6H.png\n",
            "test/UONOTLGZ.png\n",
            "test/8HMKNUDF.png\n",
            "test/XMHE25ME.png\n",
            "test/2236XNNK.png\n",
            "test/9YDW0HZJ.png\n",
            "test/NEVJAVKH.png\n",
            "test/Y24KUQCQ.png\n",
            "test/VZ90CIFO.png\n",
            "test/ISYKPQGU.png\n",
            "test/X3PQOFHE.png\n",
            "test/HJZ9J511.png\n",
            "test/0QFJJX9Y.png\n",
            "test/LU37KQZL.png\n",
            "test/TMFXGYSA.png\n",
            "test/WFQ1074P.png\n",
            "test/MU0S5OQJ.png\n",
            "test/WOZJ3FFV.png\n",
            "test/2R26FNMH.png\n",
            "test/UFKB255I.png\n",
            "test/7UKQRGT6.png\n",
            "test/6QP6YQBT.png\n",
            "test/JZP2Z8HY.png\n",
            "test/KQBICNWA.png\n",
            "test/J3WXCDPI.png\n",
            "test/0F8JN3RW.png\n",
            "test/GUMOJ8A8.png\n",
            "test/53TJDY8L.png\n",
            "test/A8X0TQUI.png\n",
            "test/FQQOTW1I.png\n",
            "test/AEOQ2743.png\n",
            "test/59P9P77R.png\n",
            "test/U906AFHF.png\n",
            "test/9IE28XLP.png\n",
            "test/UOC4V9HZ.png\n",
            "test/4TA4LY2A.png\n",
            "test/QWVXPG8E.png\n",
            "test/0EBV5UDU.png\n",
            "test/534O9IND.png\n",
            "test/LX21PCJJ.png\n",
            "test/C0228R73.png\n",
            "test/TTVJZYQ6.png\n",
            "test/DVESOV0C.png\n",
            "test/LP24EVV5.png\n",
            "test/X72GB7P7.png\n",
            "test/O942NVA3.png\n",
            "test/YS5WKWPY.png\n",
            "test/WIWG4QCT.png\n",
            "test/U2G44JKC.png\n",
            "test/GZGSORQH.png\n",
            "test/QJAMK4ZC.png\n",
            "test/KYTLWXMJ.png\n",
            "test/1MFZTPJ5.png\n",
            "test/6HWMKHV1.png\n",
            "test/J9WZT6SF.png\n",
            "test/I6QA7ACE.png\n",
            "test/X7JDLVMZ.png\n",
            "test/QNESUFVZ.png\n",
            "test/QME0Q7ND.png\n",
            "test/0YFFUI4H.png\n",
            "test/5WNSTGV9.png\n",
            "test/NJC5EOXO.png\n",
            "test/Y4LV9WZ0.png\n",
            "test/YVTIL8QG.png\n",
            "test/O5W5A5RY.png\n",
            "test/5GIHV655.png\n",
            "test/64WNSRC0.png\n",
            "test/2BU5I6MN.png\n",
            "test/ZZJ1YE0X.png\n",
            "test/KP2C8A03.png\n",
            "test/UV8KLKXO.png\n",
            "test/1KBXVX6T.png\n",
            "test/CCEP375J.png\n",
            "test/R25BQBEW.png\n",
            "test/EJTUBH4E.png\n",
            "test/1EPSLBGK.png\n",
            "test/0ELVTTLJ.png\n",
            "test/CYOI40ZD.png\n",
            "test/47K84DEM.png\n",
            "test/BXUBZKC4.png\n",
            "test/Q4SSGWU2.png\n",
            "test/ZZYISCEF.png\n",
            "test/WDUX4NYQ.png\n",
            "test/A8WMCM6F.png\n",
            "test/9RUKU5JA.png\n",
            "test/1GKIRSWF.png\n",
            "test/FDSE84SU.png\n",
            "test/Q9ECQBJK.png\n",
            "test/JLZV6LQK.png\n",
            "test/7PII4YXO.png\n",
            "test/XYLNEBTN.png\n",
            "test/SL2J03L9.png\n",
            "test/QTHJSB05.png\n",
            "test/A58V5E40.png\n",
            "test/YDX0X3NN.png\n",
            "test/KQE1E7BR.png\n",
            "test/85Q9TR0F.png\n",
            "test/2N81NQRX.png\n",
            "test/DH443ZLP.png\n",
            "test/GUKMINAJ.png\n",
            "test/QSE5BNAM.png\n",
            "test/952MI5UT.png\n",
            "test/AEFP9ETB.png\n",
            "test/UEFC32SF.png\n",
            "test/6MMGJRK1.png\n",
            "test/5LDLRY3F.png\n",
            "test/IHAOKR9C.png\n",
            "test/Y6P4NHGX.png\n",
            "test/RL54XM68.png\n",
            "test/WU0U8HES.png\n",
            "test/RPAUKBTZ.png\n",
            "test/EIR6SLX2.png\n",
            "test/BSMBMC5R.png\n",
            "test/0TWYKW1Z.png\n",
            "test/6IKJ2C43.png\n",
            "test/V3BVTI37.png\n",
            "test/NLF0UL8U.png\n",
            "test/A67J7UGV.png\n",
            "test/2QZDM0R3.png\n",
            "test/VBF4BZT5.png\n",
            "test/66BZO2BJ.png\n",
            "test/JGHMI5MS.png\n",
            "test/CLJV4YUY.png\n",
            "test/XGPU40WR.png\n",
            "test/BRAVW3RW.png\n",
            "test/NENN1Q06.png\n",
            "test/WYSL7V1E.png\n",
            "test/QZENM89M.png\n",
            "test/YPFMXYSP.png\n",
            "test/O5KJ485U.png\n",
            "test/B11QV5VU.png\n",
            "test/MWQORBLH.png\n",
            "test/7UKRF42F.png\n",
            "test/B3ZF00IL.png\n",
            "test/YE6W3F1Y.png\n",
            "test/BG8M16VU.png\n",
            "test/7CGKHG7C.png\n",
            "test/NCB0HTLW.png\n",
            "test/I5UVOSFS.png\n",
            "test/1BS292V2.png\n",
            "test/B2TUO7Q7.png\n",
            "test/ADQWLMGB.png\n",
            "test/MMINKMWI.png\n",
            "test/3VMB9PO3.png\n",
            "test/P8J4XRKG.png\n",
            "test/0NF9V7B1.png\n",
            "test/4QO26MW3.png\n",
            "test/QQ6AFU36.png\n",
            "test/QNP4BSZY.png\n",
            "test/YNYP8TJM.png\n",
            "test/AVJU1G9D.png\n",
            "test/LQ5UDWX9.png\n",
            "test/836UPAGY.png\n",
            "test/TSQ3L0YA.png\n",
            "test/E4I8ZBZH.png\n",
            "test/ZDZK6VWM.png\n",
            "test/L4YNFVUQ.png\n",
            "test/NBSUX0BA.png\n",
            "test/7DVA018L.png\n",
            "test/XE73UTGK.png\n",
            "test/KZ1M9B5W.png\n",
            "test/24U7U3AO.png\n",
            "test/WRLJHSAV.png\n",
            "test/1ML58ZRM.png\n",
            "test/T168EAMQ.png\n",
            "test/PAB1G86O.png\n",
            "test/EI6HDRH1.png\n",
            "test/886I7HE5.png\n",
            "test/933Z0KWB.png\n",
            "test/9MBSBBL7.png\n",
            "test/YG7RKP9Z.png\n",
            "test/07A36LI8.png\n",
            "test/Q4WGPJSA.png\n",
            "test/07G0C5EE.png\n",
            "test/WYDPWSN6.png\n",
            "test/NVY6ZZB0.png\n",
            "test/3XQGK83C.png\n",
            "test/BH4FLV4C.png\n",
            "test/YDTFU474.png\n",
            "test/UMMM4W0M.png\n",
            "test/752UW0OO.png\n",
            "test/ST08WZTQ.png\n",
            "test/X73PRPB0.png\n",
            "test/R7V0CIGV.png\n",
            "test/ZBFZXGWR.png\n",
            "test/PCNL43C4.png\n",
            "test/TG7EOXZ6.png\n",
            "test/4KB5FGHL.png\n",
            "test/AMVPE6CW.png\n",
            "test/OXN5BAJC.png\n",
            "test/HL0Q3VYT.png\n",
            "test/MWZ942O1.png\n",
            "test/YXRN9ZKU.png\n",
            "test/BC8J1XXF.png\n",
            "test/I5S56I9Y.png\n",
            "test/1ZPADL94.png\n",
            "test/F10Y3235.png\n",
            "test/GQRQJLE5.png\n",
            "test/X486I4TM.png\n",
            "test/CTRNZCKG.png\n",
            "test/BND13K4J.png\n",
            "test/VCGOPJ9A.png\n",
            "test/0J8ZY0VK.png\n",
            "test/DPJ88RBB.png\n",
            "test/4VV1WJ5Y.png\n",
            "test/KCSEE4PQ.png\n",
            "test/9CIFRS0C.png\n",
            "test/K0H73V6O.png\n",
            "test/4GE0EKNS.png\n",
            "test/458CSAXW.png\n",
            "test/B1PPKDXH.png\n",
            "test/8BXQSBDH.png\n",
            "test/PCL62IVK.png\n",
            "test/P9CAQJZC.png\n",
            "test/68CL6HL3.png\n",
            "test/VPHRZKZ9.png\n",
            "test/M6H9QW2G.png\n",
            "test/B5YA2PPX.png\n",
            "test/OVHU816L.png\n",
            "test/OWNURSUI.png\n",
            "test/JZYG9X4V.png\n",
            "test/LJRMD67L.png\n",
            "test/NJL7Q1TA.png\n",
            "test/NTBLLSJG.png\n",
            "test/WY9RB2NR.png\n",
            "test/A8D9O5YY.png\n",
            "test/AORZ85L6.png\n",
            "test/K8GW7AK9.png\n",
            "test/4BI3IR7P.png\n",
            "test/Y6L8KPK1.png\n",
            "test/CQ3WRHP3.png\n",
            "test/2PPS0TAN.png\n",
            "test/29YYMXSQ.png\n",
            "test/3QQ355RD.png\n",
            "test/APE19N8G.png\n",
            "test/0YINV6H8.png\n",
            "test/H02R0PQZ.png\n",
            "test/8PUEAXGB.png\n",
            "test/58Q78TH3.png\n",
            "test/AKFS3BE1.png\n",
            "test/HEBI15FU.png\n",
            "test/65N45CFU.png\n",
            "test/V6581PZY.png\n",
            "test/NS6DHFKK.png\n",
            "test/H4PEN6X4.png\n",
            "test/1SETICJQ.png\n",
            "test/IBD14DO2.png\n",
            "test/WWZ0JCKI.png\n",
            "test/F0WLQX7T.png\n",
            "test/4ARYOLP3.png\n",
            "test/AMWERXDC.png\n",
            "test/2XL4WUXD.png\n",
            "test/LMCWT5NS.png\n",
            "test/9DHREV93.png\n",
            "test/Y9459LY4.png\n",
            "test/OOLIQN93.png\n",
            "test/57K812D6.png\n",
            "test/EPN9BZAB.png\n",
            "test/F59YSIMI.png\n",
            "test/CIVR75WY.png\n",
            "test/HPENCR6I.png\n",
            "test/45NKT80Q.png\n",
            "test/601DDMCU.png\n",
            "test/0GFDLVW5.png\n",
            "test/E0BPJQTJ.png\n",
            "test/LXIE0YG8.png\n",
            "test/OJDL0QIU.png\n",
            "test/0NTCGGKJ.png\n",
            "test/4MR4RL8N.png\n",
            "test/E4KFXBBY.png\n",
            "test/YG8ZKI4P.png\n",
            "test/NVSRQ2VW.png\n",
            "test/M92A6JEY.png\n",
            "test/BQXRB93Z.png\n",
            "test/3JN12XQ5.png\n",
            "test/XSK7JX67.png\n",
            "test/IYZ43U6Z.png\n",
            "test/5501UZ8O.png\n",
            "test/JERKE5ML.png\n",
            "test/3QHLJXDD.png\n",
            "test/RHICBZGL.png\n",
            "test/S0C2GYLT.png\n",
            "test/BAPUIPN5.png\n",
            "test/3ZGM4JZ7.png\n",
            "test/39HZ4F4Q.png\n",
            "test/87X3C7YK.png\n",
            "test/MNHOK4A9.png\n",
            "test/TQJNBB5O.png\n",
            "test/XIKIGGI0.png\n",
            "test/YCCT3W7C.png\n",
            "test/F10SZ1M6.png\n",
            "test/0M5LL865.png\n",
            "test/JA5TQO63.png\n",
            "test/FZT6ULUO.png\n",
            "test/VC1LVL03.png\n",
            "test/CXEUKB25.png\n",
            "test/EP3U0NM7.png\n",
            "test/M82KA9EO.png\n",
            "test/V5FEWSNY.png\n",
            "test/VCCMXJOX.png\n",
            "test/8APZZCOC.png\n",
            "test/FDEJWJUI.png\n",
            "test/WJ7TVIPF.png\n",
            "test/ZPATN7V5.png\n",
            "test/MQGD6CJE.png\n",
            "test/7DQ5F4HP.png\n",
            "test/YCCZQJBW.png\n",
            "test/VRVWYVMM.png\n",
            "test/W4KGY34G.png\n",
            "test/D9NMRV8R.png\n",
            "test/65WQO4FO.png\n",
            "test/HIYPJNCQ.png\n",
            "test/E29WMU8G.png\n",
            "test/VGGVEU6T.png\n",
            "test/DQNOIEJI.png\n",
            "test/KN4S44B8.png\n",
            "test/HQPMTF4D.png\n",
            "test/D3JBNN7Y.png\n",
            "test/089YV089.png\n",
            "test/CZSFOUDC.png\n",
            "test/36818YMA.png\n",
            "test/T34OX8R6.png\n",
            "test/F5O3KT80.png\n",
            "test/2ZH8N5VX.png\n",
            "test/2KMJIN79.png\n",
            "test/FZOTUIWQ.png\n",
            "test/93CFOW5F.png\n",
            "test/DCQE5FBE.png\n",
            "test/RNNHIDM2.png\n",
            "test/7L1ULCCN.png\n",
            "test/DDD9SS0J.png\n",
            "test/1JTB9XEW.png\n",
            "test/AQXXK9MB.png\n",
            "test/PRBXGITI.png\n",
            "test/D1HY6WWJ.png\n",
            "test/EE59W5LL.png\n",
            "test/6SQIQMYM.png\n",
            "test/EWE5HK8K.png\n",
            "test/GMDIW4W4.png\n",
            "test/XP9X1BF2.png\n",
            "test/6SNSWQQK.png\n",
            "test/U1LJWF6B.png\n",
            "test/BRZYUZD1.png\n",
            "test/XA9Z1RTU.png\n",
            "test/71Y018PM.png\n",
            "test/VEMMWI8Z.png\n",
            "test/7LEKAS3Z.png\n",
            "test/HE1ZLE34.png\n",
            "test/QDG3AJAN.png\n",
            "test/CBGIVDK3.png\n",
            "test/KLUTTBOP.png\n",
            "test/63PEHCBW.png\n",
            "test/Y8JY1P0D.png\n",
            "test/WU4TRJ0C.png\n",
            "test/BITHZR4X.png\n",
            "test/KVWVZAWR.png\n",
            "test/W4P8N2FE.png\n",
            "test/DCZ48NDT.png\n",
            "test/3ZY3WI84.png\n",
            "test/1OHSZW0P.png\n",
            "test/2URRET13.png\n",
            "test/BBQB3LHL.png\n",
            "test/9XI8GX6T.png\n",
            "test/7B9FLZ8F.png\n",
            "test/0G511ZTP.png\n",
            "test/BORRPSV6.png\n",
            "test/IN8NSBBY.png\n",
            "test/KDEP3HSW.png\n",
            "test/G5RDB18S.png\n",
            "test/Y4WZEVGI.png\n",
            "test/9R1Z2VPD.png\n",
            "test/H1UVNVGY.png\n",
            "test/S534BHHP.png\n",
            "test/D5RR99R2.png\n",
            "test/28AJXKGN.png\n",
            "test/X2ZDS1RR.png\n",
            "test/NJF7OX8D.png\n",
            "test/SV05QS1J.png\n",
            "test/UX2TYCBH.png\n",
            "test/21S6KAR8.png\n",
            "test/EGX6PI7U.png\n",
            "test/Y0CER1PQ.png\n",
            "test/8E20RQD5.png\n",
            "test/XEDL34IY.png\n",
            "test/PXYO03RX.png\n",
            "test/9XH3LYYI.png\n",
            "test/DIPRX2H3.png\n",
            "test/O5HGY8IJ.png\n",
            "test/9O7XN1XG.png\n",
            "test/4II1P3R9.png\n",
            "test/MFFN81AC.png\n",
            "test/9R3S4JL7.png\n",
            "test/AFOMBHWM.png\n",
            "test/W1FD8UCR.png\n",
            "test/80O79ZOX.png\n",
            "test/5R5LG9YY.png\n",
            "test/EZKMCAW7.png\n",
            "test/THLFSV13.png\n",
            "test/LSJT4J07.png\n",
            "test/WVDRBOA9.png\n",
            "test/JLRVMCHF.png\n",
            "test/A3K4K9G3.png\n",
            "test/OEZ27R6R.png\n",
            "test/J87J7X5B.png\n",
            "test/3SC79C7H.png\n",
            "test/IGTU9CTD.png\n",
            "test/H2VYZVRG.png\n",
            "test/G6KM9YFV.png\n",
            "test/03JU8VX8.png\n",
            "test/LRCMR0AS.png\n",
            "test/FRRPRC1A.png\n",
            "test/57XWLXWC.png\n",
            "test/NNQEJ815.png\n",
            "test/B4003R7S.png\n",
            "test/509SPO5T.png\n",
            "test/IY7PPE69.png\n",
            "test/E6I2NPKC.png\n",
            "test/TX3AH4QA.png\n",
            "test/IYO1FNTL.png\n",
            "test/EVMNO2JT.png\n",
            "test/DWSWZK57.png\n",
            "test/5QEOPTGN.png\n",
            "test/U1MJ9EZN.png\n",
            "test/F3385KY4.png\n",
            "test/Z4JFH7L2.png\n",
            "test/UCZTBBJX.png\n",
            "test/ZE8JQW6E.png\n",
            "test/7NC9NK9K.png\n",
            "test/HAC5SBJN.png\n",
            "test/2L2L4NPE.png\n",
            "test/Y2CSJ51F.png\n",
            "test/IGPCOIBN.png\n",
            "test/DIDKS5CD.png\n",
            "test/B7EL9HO9.png\n",
            "test/QC9NP4BT.png\n",
            "test/MD3XLVUZ.png\n",
            "test/ETUV16F1.png\n",
            "test/PNE35B65.png\n",
            "test/L3N1YEDX.png\n",
            "test/AF8L6RSM.png\n",
            "test/CV8OY21H.png\n",
            "test/ZRMC1T0M.png\n",
            "test/868C9BLV.png\n",
            "test/V73URR7M.png\n",
            "test/J7F42Z6I.png\n",
            "test/SXZQ8HZT.png\n",
            "test/XLOIZLN5.png\n",
            "test/HQANPYW9.png\n",
            "test/ETETMS2P.png\n",
            "test/CL1TFH3B.png\n",
            "test/3XRY48ZP.png\n",
            "test/3W7D8WT3.png\n",
            "test/1OTNM2T2.png\n",
            "test/RJDXCBOI.png\n",
            "test/FML5BVP0.png\n",
            "test/MKDSXQ4S.png\n",
            "test/J2KZ402V.png\n",
            "test/E1H5MQ3Y.png\n",
            "test/5WGRJ9DA.png\n",
            "test/SC99BAH6.png\n",
            "test/8CJ86H68.png\n",
            "test/7CQNNCM3.png\n",
            "test/E5I5U62R.png\n",
            "test/9ZAL22BF.png\n",
            "test/2MDSUYAR.png\n",
            "test/L1SAF6F5.png\n",
            "test/SO4Y0RPP.png\n",
            "test/TO5O5O0W.png\n",
            "test/X24KVWTJ.png\n",
            "test/2QLIKHLE.png\n",
            "test/LKJHUJQ2.png\n",
            "test/2PHF3RCN.png\n",
            "test/NY4YU4OX.png\n",
            "test/CTGXON8M.png\n",
            "test/CFOK2AGV.png\n",
            "test/P7HYPC44.png\n",
            "test/1I745RPP.png\n",
            "test/D11XBFB7.png\n",
            "test/A45MIJL8.png\n",
            "test/4DVAE833.png\n",
            "test/RYAHC39W.png\n",
            "test/GAK56N6S.png\n",
            "test/XDYZMG9N.png\n",
            "test/15DG55LO.png\n",
            "test/JCN7Z3DL.png\n",
            "test/40C38Z08.png\n",
            "test/VQHVFX4K.png\n",
            "test/3HFUK3MH.png\n",
            "test/4YAJ2ZR6.png\n",
            "test/2P5478RR.png\n",
            "test/P5UJSRNM.png\n",
            "test/08Y94B5H.png\n",
            "test/1DLERTMO.png\n",
            "test/MQ18N7Z7.png\n",
            "test/LWMDU9GA.png\n",
            "test/FDNILULW.png\n",
            "test/KZKKWU4I.png\n",
            "test/LJNEK6OB.png\n",
            "test/8A8N2H5E.png\n",
            "test/D1QZ6D42.png\n",
            "test/J22BR4ZK.png\n",
            "test/WE8WK6F1.png\n",
            "test/AL8MOSRW.png\n",
            "test/4AF02WV6.png\n",
            "test/Y88FHTID.png\n",
            "test/KBYXIV8E.png\n",
            "test/L86MPPOG.png\n",
            "test/J6W8KDL4.png\n",
            "test/KTCPN24Y.png\n",
            "test/UA6QQUF9.png\n",
            "test/G8OGQC3Y.png\n",
            "test/MX23FZ3X.png\n",
            "test/HBB8YTJV.png\n",
            "test/A6DKGFAL.png\n",
            "test/CL22HUJP.png\n",
            "test/PK2WGCU4.png\n",
            "test/U6PDSW8B.png\n",
            "test/CLYY4MF8.png\n",
            "test/SCXCNZND.png\n",
            "test/PNCKRTHK.png\n",
            "test/88EJFJT7.png\n",
            "test/9R236ORJ.png\n",
            "test/ZD7VGQ2Q.png\n",
            "test/QT0DS3H8.png\n",
            "test/NO80UB4F.png\n",
            "test/6FFI935K.png\n",
            "test/6R2Y5ZVN.png\n",
            "test/BFTS7O8C.png\n",
            "test/OLW6LGMR.png\n",
            "test/CH11R9MM.png\n",
            "test/5IQEWA8F.png\n",
            "test/YJ83RVD5.png\n",
            "test/L3DSR0C5.png\n",
            "test/8RS9M021.png\n",
            "test/ZG74CYGA.png\n",
            "test/I5QU7R8C.png\n",
            "test/OBEZ1EWZ.png\n",
            "test/C7X5LERQ.png\n",
            "test/KUWAOYH7.png\n",
            "test/4KPUFM8L.png\n",
            "test/IXWF2M16.png\n",
            "test/05Z2GRV3.png\n",
            "test/C9XJE6OI.png\n",
            "test/MHUJKFLF.png\n",
            "test/IPPB2AU8.png\n",
            "test/NNF8PHH4.png\n",
            "test/YIISF6K0.png\n",
            "test/OCXTLM4N.png\n",
            "test/9X5KVMBU.png\n",
            "test/XC093J56.png\n",
            "test/CVNJLF43.png\n",
            "test/HQ0210JF.png\n",
            "test/FKKDRYYE.png\n",
            "test/QGUY6N6U.png\n",
            "test/4603HXUY.png\n",
            "test/77HHNM5G.png\n",
            "test/HXUO307J.png\n",
            "test/65YFM5RC.png\n",
            "test/9OODMRSO.png\n",
            "test/7FB4GPBW.png\n",
            "test/J4N384JK.png\n",
            "test/1X73L1Y6.png\n",
            "test/IIG12E3H.png\n",
            "test/GHPD39GG.png\n",
            "test/8PJYCN81.png\n",
            "test/K8J4V7AG.png\n",
            "test/HC2F4AH8.png\n",
            "test/ML2RO4TZ.png\n",
            "test/C5SOMALF.png\n",
            "test/YM18KQ8Q.png\n",
            "test/4IL6J3Y8.png\n",
            "test/QIEK1JSG.png\n",
            "test/UY2XWCRZ.png\n",
            "test/FVCP3NDL.png\n",
            "test/J3017Z87.png\n",
            "test/Q3OGB19K.png\n",
            "test/KR0DMJJX.png\n",
            "test/36RDLPMU.png\n",
            "test/F4CKJ5TA.png\n",
            "test/2A97I9D7.png\n",
            "test/R20SXK9A.png\n",
            "test/RQ0F2HWQ.png\n",
            "test/J8ZTVCNY.png\n",
            "test/36SHQV9H.png\n",
            "test/LTFB0D3D.png\n",
            "test/6P4R7FZQ.png\n",
            "test/82F3PESD.png\n",
            "test/DL5I3HYK.png\n",
            "test/ELMOG2HU.png\n",
            "test/IQ33O6QO.png\n",
            "test/CRHY5LQ0.png\n",
            "test/JIS2HF8C.png\n",
            "test/X301GFNH.png\n",
            "test/NL7OCL3Q.png\n",
            "test/PS1NP7FQ.png\n",
            "test/5RWYM60M.png\n",
            "test/Y9JXYWFD.png\n",
            "test/B5TE7R4N.png\n",
            "test/FUVE870U.png\n",
            "test/801AMRUS.png\n",
            "test/7UT1NXIW.png\n",
            "test/SDYEYUYQ.png\n",
            "test/VKT1WIPH.png\n",
            "test/O65XAJBQ.png\n",
            "test/ZO5U4JBV.png\n",
            "test/2T4L3YMM.png\n",
            "test/YV7IO2IZ.png\n",
            "test/4OBNZA9S.png\n",
            "test/8EZADR2Z.png\n",
            "test/CS5QAL5O.png\n",
            "test/KAH45NEF.png\n",
            "test/6VWLXR1U.png\n",
            "test/S9G9XMFP.png\n",
            "test/04VF78BE.png\n",
            "test/8PSV54XV.png\n",
            "test/0HNRB77O.png\n",
            "test/0RXDDZFE.png\n",
            "test/UAXAQGL0.png\n",
            "test/TVAQ86ZW.png\n",
            "test/37ZSRXXA.png\n",
            "test/2G4LNW2C.png\n",
            "test/FV79MRBP.png\n",
            "test/YVHVOOWH.png\n",
            "test/ZD7NPJ85.png\n",
            "test/NVZI880K.png\n",
            "test/K2BJUUBW.png\n",
            "test/HK155WS4.png\n",
            "test/KACAY2JQ.png\n",
            "test/VPSI0CEV.png\n",
            "test/MOODSHO2.png\n",
            "test/9TZ2FRU0.png\n",
            "test/7BJ59S25.png\n",
            "test/4FURVPU4.png\n",
            "test/PL6DDLV8.png\n",
            "test/4FUUM0LW.png\n",
            "test/BD1XIOLY.png\n",
            "test/BBCFR7V9.png\n",
            "test/9PXS3A85.png\n",
            "test/IL81RILT.png\n",
            "test/O2ADBK2B.png\n",
            "test/1UC19KBT.png\n",
            "test/5TBIMN6F.png\n",
            "test/2PJ5C3GJ.png\n",
            "test/4VIYXVLW.png\n",
            "test/SRTFTFEQ.png\n",
            "test/0MBHGC19.png\n",
            "test/04CK8NU2.png\n",
            "test/20HGK0Y8.png\n",
            "test/SV82JM0C.png\n",
            "test/G80KRTB6.png\n",
            "test/PEXXTS5J.png\n",
            "test/RJ610JW0.png\n",
            "test/PIX9UJ7A.png\n",
            "test/VZH4IWHA.png\n",
            "test/Q0ANB8DV.png\n",
            "test/2KQ756OU.png\n",
            "test/C00448OP.png\n",
            "test/CLRR0IDB.png\n",
            "test/RSYXEA47.png\n",
            "test/ORKYBGW5.png\n",
            "test/U4E37NVC.png\n",
            "test/JQJNRK8Q.png\n",
            "test/6OA6PFAR.png\n",
            "test/AR8YBKEB.png\n",
            "test/JH6H00NC.png\n",
            "test/IHHUUNUM.png\n",
            "test/6ARZFZO1.png\n",
            "test/0FS97PDP.png\n",
            "test/108KYSON.png\n",
            "test/DWQ8W745.png\n",
            "test/PGH0478C.png\n",
            "test/C5BJ8Z6H.png\n",
            "test/JK9JAVU6.png\n",
            "test/IB9OGVBS.png\n",
            "test/HURTIUCO.png\n",
            "test/CVUOI0JN.png\n",
            "test/KWOFU4QZ.png\n",
            "test/ZPARDC2G.png\n",
            "test/SBSPZQIQ.png\n",
            "test/WAR02Q4Z.png\n",
            "test/VA6XF9WO.png\n",
            "test/35TYD4B5.png\n",
            "test/7BMU3CBP.png\n",
            "test/K5J4Y8LW.png\n",
            "test/LPY6OYGG.png\n",
            "test/1UHO7LTS.png\n",
            "test/B95TGRP3.png\n",
            "test/T9PH1L1V.png\n",
            "test/XSIWJIHQ.png\n",
            "test/TK0G5BR8.png\n",
            "test/WDV65LJQ.png\n",
            "test/KVUBT1N0.png\n",
            "test/NZW1KWPA.png\n",
            "test/G3TG7CEV.png\n",
            "test/5AFVI99L.png\n",
            "test/BIE9Z8AT.png\n",
            "test/ZJ0JGOR2.png\n",
            "test/N88U6JWC.png\n",
            "test/7HF8ZMBE.png\n",
            "test/KSY5W4LP.png\n",
            "test/YMP26N64.png\n",
            "test/DZO37B59.png\n",
            "test/EH9A7WC2.png\n",
            "test/K3GIZHPG.png\n",
            "test/XDWXPC03.png\n",
            "test/H8JM4FGU.png\n",
            "test/SGQHH463.png\n",
            "test/OLZ5932J.png\n",
            "test/274MLIPD.png\n",
            "test/GYVEL9US.png\n",
            "test/X4KD09RH.png\n",
            "test/73HL9GP7.png\n",
            "test/HKVCCK0K.png\n",
            "test/LLUCVUA1.png\n",
            "test/ULWYN12J.png\n",
            "test/B8L3RY5A.png\n",
            "test/04H80B5R.png\n",
            "test/JHLTD4JP.png\n",
            "test/85POI7GP.png\n",
            "test/EHW26CRS.png\n",
            "test/RJ9MZWOC.png\n",
            "test/Q8KQVRN6.png\n",
            "test/G0ZFMHFS.png\n",
            "test/X1SIP9PP.png\n",
            "test/0JKI08G9.png\n",
            "test/CDZP1TZO.png\n",
            "test/57KMQK62.png\n",
            "test/O4C5G4ZT.png\n",
            "test/J7QNP43U.png\n",
            "test/8TEXV5ZI.png\n",
            "test/V2GR1DWU.png\n",
            "test/MNXBGYQY.png\n",
            "test/5SZ42V73.png\n",
            "test/0UVXSNXN.png\n",
            "test/JBXL00KX.png\n",
            "test/265T6MQO.png\n",
            "test/PX4NM1K2.png\n",
            "test/RYJLP38F.png\n",
            "test/1IY034NS.png\n",
            "test/L1YWZSMT.png\n",
            "test/8THOKP1J.png\n",
            "test/4OG0WAXB.png\n",
            "test/DS1LZ8SI.png\n",
            "test/F1L29LHQ.png\n",
            "test/4AZFRACH.png\n",
            "test/ZKOT5165.png\n",
            "test/1IEGTFVQ.png\n",
            "test/797TJPH8.png\n",
            "test/4803KWM6.png\n",
            "test/6UH5CVOH.png\n",
            "test/99PODU4N.png\n",
            "test/T2FADGFZ.png\n",
            "test/1OS47YB0.png\n",
            "test/RS61J9LQ.png\n",
            "test/ZIM12AQ8.png\n",
            "test/OLE3HU1B.png\n",
            "test/CREWCYCG.png\n",
            "test/4PCGEWN1.png\n",
            "test/DJK61MYA.png\n",
            "test/HWTRS1S3.png\n",
            "test/LIDKVFNR.png\n",
            "test/C98V8J5S.png\n",
            "test/VIJYSBVU.png\n",
            "test/U6SVL20G.png\n",
            "test/UX4BW1PA.png\n",
            "test/RLHGGQ0O.png\n",
            "test/IDFXGXQJ.png\n",
            "test/2Y20CQHQ.png\n",
            "test/23QCNBLX.png\n",
            "test/O4D1U2VK.png\n",
            "test/TZFZODC4.png\n",
            "test/LEF7CIO1.png\n",
            "test/1HMM5COF.png\n",
            "test/GR0XEF1K.png\n",
            "test/3VXG8GQX.png\n",
            "test/HJDMXZF7.png\n",
            "test/TB8PFENJ.png\n",
            "test/CO708R16.png\n",
            "test/AH84KHQG.png\n",
            "test/SVJ51WTT.png\n",
            "test/M8KXZ3N2.png\n",
            "test/ZW28O9D4.png\n",
            "test/A4YD5GLF.png\n",
            "test/J76GA8B7.png\n",
            "test/ZXBQGY0V.png\n",
            "test/ZCVBT82E.png\n",
            "test/6RU970PJ.png\n",
            "test/QG8J31Y1.png\n",
            "test/N3RR4GCG.png\n",
            "test/5XB67VXL.png\n",
            "test/MOG8D5XW.png\n",
            "test/MEZIGAO1.png\n",
            "test/22A96GLS.png\n",
            "test/Y50RRQGS.png\n",
            "test/NHIDYWEZ.png\n",
            "test/S7ABPDKS.png\n",
            "test/H8O09RIY.png\n",
            "test/9KLLD9W6.png\n",
            "test/IIWQAAZ5.png\n",
            "test/4JLMPA8G.png\n",
            "test/UUZ86XHN.png\n",
            "test/5MB6QIWE.png\n",
            "test/KANTF11J.png\n",
            "test/YT4JTJ9S.png\n",
            "test/Z19X2Z9L.png\n",
            "test/7Q016NOY.png\n",
            "test/EV8PBUWE.png\n",
            "test/PC4XD9AH.png\n",
            "test/RBV9JM9K.png\n",
            "test/XSJO0LXZ.png\n",
            "test/P30G4B66.png\n",
            "test/9XDOEV5K.png\n",
            "test/5H76N93Y.png\n",
            "test/QWE4EJ2V.png\n",
            "test/N9BOYQZ8.png\n",
            "test/RCORE0ZJ.png\n",
            "test/8NS1PWS9.png\n",
            "test/JWXOIYP4.png\n",
            "test/3M2SSLIC.png\n",
            "test/JK44LWCI.png\n",
            "test/M5C1AV16.png\n",
            "test/RFUKDB6I.png\n",
            "test/3UAIHPSX.png\n",
            "test/QMGWRMC4.png\n",
            "test/9TNV1BI8.png\n",
            "test/DWDBMNPF.png\n",
            "test/9IO9XKAM.png\n",
            "test/MGN1HWGG.png\n",
            "test/CIFKLGF2.png\n",
            "test/R34L1N6X.png\n",
            "test/8TX903JT.png\n",
            "test/2WXIN9M5.png\n",
            "test/SHT5EQJV.png\n",
            "test/I1ZYQR3P.png\n",
            "test/G4TLTXF6.png\n",
            "test/A549PFC8.png\n",
            "test/6ROYQX1H.png\n",
            "test/6C6Q7424.png\n",
            "test/SP5X5VXF.png\n",
            "test/0XJFRHHC.png\n",
            "test/RFUFC5BM.png\n",
            "test/EPVMRLHY.png\n",
            "test/KGTX95LT.png\n",
            "test/FAYU6LWK.png\n",
            "test/GI7EEL7I.png\n",
            "test/BGR9ON0T.png\n",
            "test/8JESZMME.png\n",
            "test/9L2EI1ZC.png\n",
            "test/XVRL7OP5.png\n",
            "test/V5DN81XB.png\n",
            "test/PEZCTUCX.png\n",
            "test/U1VZUVJJ.png\n",
            "test/GW590DDR.png\n",
            "test/MTSJFXL6.png\n",
            "test/IL3TC4ZC.png\n",
            "test/4T9I1D20.png\n",
            "test/262N1CP0.png\n",
            "test/PIT8D6YL.png\n",
            "test/CDX0UN9L.png\n",
            "test/LJAT95JN.png\n",
            "test/LX317H0M.png\n",
            "test/T24TAVVT.png\n",
            "test/3KNZMFPC.png\n",
            "test/NVJPAODR.png\n",
            "test/L6ZIIFFN.png\n",
            "test/NQJ0W6MW.png\n",
            "test/P3ITW21N.png\n",
            "test/CEXHYFQW.png\n",
            "test/4IYC4DB3.png\n",
            "test/OPAAU3IV.png\n",
            "test/R2XZ79NH.png\n",
            "test/XZVK8J1B.png\n",
            "test/5KP72RR4.png\n",
            "test/X6293793.png\n",
            "test/6SHIWMVP.png\n",
            "test/1GRXMXXS.png\n",
            "test/8IHZFDSF.png\n",
            "test/D38TG83U.png\n",
            "test/83CBF9G9.png\n",
            "test/MYT0Z6EV.png\n",
            "test/T2WRH9PS.png\n",
            "test/QC8HTM4N.png\n",
            "test/KBG38NGK.png\n",
            "test/XLSDG0UT.png\n",
            "test/UX8RC4K7.png\n",
            "test/L0ATPUNN.png\n",
            "test/BAVZ6NMZ.png\n",
            "test/181QFED0.png\n",
            "test/62JOO1D9.png\n",
            "test/H65UND7G.png\n",
            "test/ZKM63Q1W.png\n",
            "test/EJV6AT6B.png\n",
            "test/2DDJO6WC.png\n",
            "test/QPSJWBJQ.png\n",
            "test/PN5JY0UQ.png\n",
            "test/630BSWFW.png\n",
            "test/GH8OE0KB.png\n",
            "test/A17UP4EQ.png\n",
            "test/2I9IV8QK.png\n",
            "test/LISKAUL2.png\n",
            "test/JAN47JSG.png\n",
            "test/2F84XLDQ.png\n",
            "test/VF1E1CDG.png\n",
            "test/28AF667G.png\n",
            "test/XEK7OZWO.png\n",
            "test/3J1H0HBK.png\n",
            "test/K2HN65XJ.png\n",
            "test/C7X9LTKD.png\n",
            "test/ZRHLSK2G.png\n",
            "test/9O9DZV3Q.png\n",
            "test/IQZW81FS.png\n",
            "test/0LS6G5M4.png\n",
            "test/YMLIXO8F.png\n",
            "test/1Q8SGWGB.png\n",
            "test/CCBUOSEE.png\n",
            "test/G7EYJFS2.png\n",
            "test/QBIBD2SN.png\n",
            "test/4ESW1DPN.png\n",
            "test/05LDA231.png\n",
            "test/BQIGL101.png\n",
            "test/7Y53UO4F.png\n",
            "test/PHUY7P55.png\n",
            "test/QTJI04UK.png\n",
            "test/0ED4NOU8.png\n",
            "test/47KA3VUR.png\n",
            "test/72D6RH56.png\n",
            "test/CDZLO8O4.png\n",
            "test/0BSHCC3U.png\n",
            "test/XRYW2M1C.png\n",
            "test/BEXR4Q09.png\n",
            "test/BVIIV3KN.png\n",
            "test/M0F1RF7U.png\n",
            "test/GAYFYY5L.png\n",
            "test/R65P9WQX.png\n",
            "test/SKPOSHO9.png\n",
            "test/CS0YMDY1.png\n",
            "test/YHLWZ2KC.png\n",
            "test/GT17Y1F3.png\n",
            "test/TNBJQLWX.png\n",
            "test/UMI7U0RH.png\n",
            "test/AP2JT9BN.png\n",
            "test/LYOENZ8P.png\n",
            "test/MNPKSF4Q.png\n",
            "test/190WJPF9.png\n",
            "test/3RPTDT8M.png\n",
            "test/KOV901SG.png\n",
            "test/1BAQO59H.png\n",
            "test/2OS9BMDC.png\n",
            "test/3Y320QWC.png\n",
            "test/2N7U86PI.png\n",
            "test/3UKKDHF8.png\n",
            "test/JFCYYM0R.png\n",
            "test/JSKIW3F1.png\n",
            "test/79G9HK2P.png\n",
            "test/5SAAHXH4.png\n",
            "test/BOL1DNIH.png\n",
            "test/HI3Z4KUN.png\n",
            "test/YI1NTNOL.png\n",
            "test/2UA4NYWZ.png\n",
            "test/EIJRZFDO.png\n",
            "test/1D8ZJU5R.png\n",
            "test/IA3GD9TF.png\n",
            "test/3SK5K7H3.png\n",
            "test/4L0R452D.png\n",
            "test/D8UBQK3O.png\n",
            "test/046GQHF0.png\n",
            "test/TOUERW47.png\n",
            "test/GA68GN9P.png\n",
            "test/1B4G64TX.png\n",
            "test/K3ZUXB55.png\n",
            "test/1KCINENG.png\n",
            "test/P2ROAN97.png\n",
            "test/RELY4UM0.png\n",
            "test/8ZFRBAQP.png\n",
            "test/EPJ1S5R8.png\n",
            "test/IY6ENPEN.png\n",
            "test/HSWEZV1K.png\n",
            "test/WLLRM6DH.png\n",
            "test/8BNN9LIO.png\n",
            "test/3744PMEY.png\n",
            "test/BSTZTT8K.png\n",
            "test/AY0NGPGO.png\n",
            "test/HK2ZQCT0.png\n",
            "test/D299HXJG.png\n",
            "test/NM8B2KTS.png\n",
            "test/LZZTF01S.png\n",
            "test/5SERDD21.png\n",
            "test/ACASM8JW.png\n",
            "test/FAPIADPC.png\n",
            "test/90WHUNQT.png\n",
            "test/ALVBQ714.png\n",
            "test/X2CS1L8H.png\n",
            "test/FIRABHP0.png\n",
            "test/E75XBPZY.png\n",
            "test/D62N984Q.png\n",
            "test/HQPORHY1.png\n",
            "test/36XOJQ05.png\n",
            "test/LWLHO06D.png\n",
            "test/GSEJQ669.png\n",
            "test/MUIHCMWE.png\n",
            "test/6R1GCBVF.png\n",
            "test/7SIZQ2R9.png\n",
            "test/XSNU5892.png\n",
            "test/DZHAGPDG.png\n",
            "test/9AUSX9ZT.png\n",
            "test/LRFAUY3N.png\n",
            "test/UIA1WIYV.png\n",
            "test/TADHAM2D.png\n",
            "test/ISJK1N8A.png\n",
            "test/VPHZDG24.png\n",
            "test/TP5UKH6I.png\n",
            "test/GBA754KQ.png\n",
            "test/MMTJIWTS.png\n",
            "test/367DFL9C.png\n",
            "test/L1XYI68X.png\n",
            "test/2NTSMMHD.png\n",
            "test/AU4YGTRR.png\n",
            "test/NB4L6OL1.png\n",
            "test/WQ7XL747.png\n",
            "test/Q5RZRTI0.png\n",
            "test/DICHS8EI.png\n",
            "test/9K3QS1Q3.png\n",
            "test/UV1S8OV5.png\n",
            "test/KGJ6ZDF1.png\n",
            "test/WS17GXT3.png\n",
            "test/PFHXWI9R.png\n",
            "test/PZQP701T.png\n",
            "test/2STFIKUA.png\n",
            "test/69E5AAFU.png\n",
            "test/NTWE6NUQ.png\n",
            "test/M66HDKJE.png\n",
            "test/QTNJQY9K.png\n",
            "test/PFXE9J76.png\n",
            "test/0M7G2FIG.png\n",
            "test/O7M6KKQV.png\n",
            "test/S0HHDD4B.png\n",
            "test/2H1IBN9Z.png\n",
            "test/3U2PO520.png\n",
            "test/BDLTTT0W.png\n",
            "test/Z2MJJUJ8.png\n",
            "test/HPS3VP5K.png\n",
            "test/N20W918E.png\n",
            "test/IT3JH9YK.png\n",
            "test/TE1G1FLG.png\n",
            "test/KL2C0PRV.png\n",
            "test/I2G7ZF43.png\n",
            "test/DXI8SA51.png\n",
            "test/C754M808.png\n",
            "test/J2JMNNAL.png\n",
            "test/QAJVAF1I.png\n",
            "test/9GM7SJGX.png\n",
            "test/MF8F0K7E.png\n",
            "test/TAZ9UNWV.png\n",
            "test/75NPWERI.png\n",
            "test/61ME7SZ4.png\n",
            "test/6JXXH549.png\n",
            "test/NMWLL758.png\n",
            "test/MBBJI2F7.png\n",
            "test/VO9CJBRJ.png\n",
            "test/MLMFE9BY.png\n",
            "test/ET7VHJGF.png\n",
            "test/SKCQGKQ8.png\n",
            "test/JGSEJRMS.png\n",
            "test/UOK8HYF1.png\n",
            "test/ZUB6WG9L.png\n",
            "test/M3EX3ACI.png\n",
            "test/72P2GVMY.png\n",
            "test/5382TKRI.png\n",
            "test/7NYR632H.png\n",
            "test/P6916W6A.png\n",
            "test/KKEV55U5.png\n",
            "test/OOLWTA6H.png\n",
            "test/A99JNGPL.png\n",
            "test/Q07HDZ9V.png\n",
            "test/BHOC9RUW.png\n",
            "test/PGSTYMEC.png\n",
            "test/3RAYJLG2.png\n",
            "test/Z41QI014.png\n",
            "test/DTL3P37C.png\n",
            "test/UK9OZ3K8.png\n",
            "test/1PFEBVT8.png\n",
            "test/1PKCOGRQ.png\n",
            "test/RUP0GO14.png\n",
            "test/S8ZI0M0K.png\n",
            "test/BFAN8NYS.png\n",
            "test/LP9W7IKG.png\n",
            "test/T7SATVAK.png\n",
            "test/7SQUCTYE.png\n",
            "test/4T3BSQSA.png\n",
            "test/PEYRN5DH.png\n",
            "test/FDL9S9K8.png\n",
            "test/9V5QI16G.png\n",
            "test/TY3F4560.png\n",
            "test/WHCV49I0.png\n",
            "test/9X78GPT9.png\n",
            "test/6HFKBJJ6.png\n",
            "test/B36AX8E9.png\n",
            "test/U73KN277.png\n",
            "test/JACLTSWC.png\n",
            "test/M621D5LZ.png\n",
            "test/8ZPPBTQ3.png\n",
            "test/1JW9DUGP.png\n",
            "test/I16NAK57.png\n",
            "test/IP4TK20G.png\n",
            "test/MW4HFW0V.png\n",
            "test/K566DFE8.png\n",
            "test/STO8PBQD.png\n",
            "test/9B1L4ZP5.png\n",
            "test/ZJ53TH76.png\n",
            "test/AYZBPB38.png\n",
            "test/9DCVH0PQ.png\n",
            "test/3LAT2HVS.png\n",
            "test/MU0ELXA0.png\n",
            "test/SLGVHFIY.png\n",
            "test/7XMGAA43.png\n",
            "test/3180ZXGV.png\n",
            "test/A4E53339.png\n",
            "test/HFFX7P3R.png\n",
            "test/QQBATLUY.png\n",
            "test/JWI72T5I.png\n",
            "test/3M2M8UJ2.png\n",
            "test/4HSIT85V.png\n",
            "test/9HBT1GQ3.png\n",
            "test/ZQ2FP1Y6.png\n",
            "test/XC71T3AS.png\n",
            "test/1DYL0BU4.png\n",
            "test/5Y5B5YDH.png\n",
            "test/QPOF0OVK.png\n",
            "test/WZZURMDM.png\n",
            "test/0JCYPE2A.png\n",
            "test/M6MU4SLN.png\n",
            "test/T98MD23V.png\n",
            "test/VXMUABH0.png\n",
            "test/8JD7U2RJ.png\n",
            "test/WFHL71P0.png\n",
            "test/KLG09OBD.png\n",
            "test/X21CAB1F.png\n",
            "test/5VXRV93E.png\n",
            "test/829MTHTD.png\n",
            "test/A6CRVR7P.png\n",
            "test/B5BT6V40.png\n",
            "test/0HJWCYFL.png\n",
            "test/8AY5MHT3.png\n",
            "test/90WC7M40.png\n",
            "test/5ALRK8D0.png\n",
            "test/ONT1WZBI.png\n",
            "test/IQQFE8I0.png\n",
            "test/0DEH982K.png\n",
            "test/XGWIP340.png\n",
            "test/K6ZV0HJI.png\n",
            "test/KGC1BVC1.png\n",
            "test/QA2DXV3L.png\n",
            "test/D3P6NFL3.png\n",
            "test/T0XLN6DK.png\n",
            "test/8AA2TJG0.png\n",
            "test/H3V16R0O.png\n",
            "test/2EB38R75.png\n",
            "test/1N7VXU5E.png\n",
            "test/MC4FO6UQ.png\n",
            "test/UFPNTD97.png\n",
            "test/WYSWGZ61.png\n",
            "test/0338EIMA.png\n",
            "test/NO37PEWS.png\n",
            "test/R9BB40M3.png\n",
            "test/ITRG04WC.png\n",
            "test/58HDM43Z.png\n",
            "test/G9QLHK6F.png\n",
            "test/VWN45FXU.png\n",
            "test/QB2QIE36.png\n",
            "test/OOYI0ADW.png\n",
            "test/MVIAH5ES.png\n",
            "test/WVEOO55X.png\n",
            "test/Y521UFJ6.png\n",
            "test/O4C33K99.png\n",
            "test/VBKTPB0N.png\n",
            "test/3OYTAUYN.png\n",
            "test/H7H0YD1S.png\n",
            "test/YR539QYR.png\n",
            "test/5OBO2PI5.png\n",
            "test/S71W0VPJ.png\n",
            "test/7FS157J8.png\n",
            "test/PAX40532.png\n",
            "test/89M1YDQP.png\n",
            "test/50N924Q0.png\n",
            "test/Z75GKOLE.png\n",
            "test/AOBH5E3M.png\n",
            "test/VZILOPD0.png\n",
            "test/0T64ZT9O.png\n",
            "test/I7YIB88F.png\n",
            "test/3YGHI6T3.png\n",
            "test/WMQ05UXU.png\n",
            "test/YWR39X4Z.png\n",
            "test/ZIXT8VO0.png\n",
            "test/TH6JNHO5.png\n",
            "test/NEW8F0XV.png\n",
            "test/AV8WKMEK.png\n",
            "test/PV29RWQ5.png\n",
            "test/8R38CC13.png\n",
            "test/HU49AKK2.png\n",
            "test/318NJ1L2.png\n",
            "test/64FL18W2.png\n",
            "test/AP4WBZCK.png\n",
            "test/D4MTVZAC.png\n",
            "test/5RK2JEIS.png\n",
            "test/KOIRKEHG.png\n",
            "test/02N9OSO4.png\n",
            "test/8WDWL8C7.png\n",
            "test/M486BON7.png\n",
            "test/A6B2HVIU.png\n",
            "test/RCDI60MD.png\n",
            "test/53SP1DVM.png\n",
            "test/UKIHRXXF.png\n",
            "test/21HA7L0R.png\n",
            "test/W9XYWTDD.png\n",
            "test/7H0SKIBZ.png\n",
            "test/KG7ZK5C1.png\n",
            "test/UROVWQTB.png\n",
            "test/LID7QWMV.png\n",
            "test/M40ZIZQK.png\n",
            "test/07U7U8YY.png\n",
            "test/GV0TF9GF.png\n",
            "test/W3L2GGCQ.png\n",
            "test/IYNCLG0F.png\n",
            "test/PH6G8N6H.png\n",
            "test/UJPMT15H.png\n",
            "test/3QTE5S8O.png\n",
            "test/H0H2YEYR.png\n",
            "test/A3GZT8N1.png\n",
            "test/NIIJI9CN.png\n",
            "test/0BZ6729J.png\n",
            "test/ID8PZBO6.png\n",
            "test/RXJ6R7LL.png\n",
            "test/PGWIYVJA.png\n",
            "test/8IX8F1XX.png\n",
            "test/SZ3Y04CD.png\n",
            "test/8AKZVI7Y.png\n",
            "test/JOW9RHPP.png\n",
            "test/C5M5FMFC.png\n",
            "test/7SQX0FYL.png\n",
            "test/2WGE5FN8.png\n",
            "test/N980UGVU.png\n",
            "test/4VFD8DME.png\n",
            "test/3RTN0I8Z.png\n",
            "test/P1RGVOA8.png\n",
            "test/CDL2TFNI.png\n",
            "test/2JFSUYUO.png\n",
            "test/P0ZU5S9L.png\n",
            "test/EFOGXFON.png\n",
            "test/FQCGC2N9.png\n",
            "test/1BLK4MF7.png\n",
            "test/H0WJAPWC.png\n",
            "test/BKSFPFSY.png\n",
            "test/17FTZ0WT.png\n",
            "test/7DE4BR7X.png\n",
            "test/XM2O5E68.png\n",
            "test/CJG80X9T.png\n",
            "test/TUOANA3T.png\n",
            "test/A61M8ZFL.png\n",
            "test/BR4NDGZ2.png\n",
            "test/UCTRD4YQ.png\n",
            "test/8LXJHMXT.png\n",
            "test/1EY2WH36.png\n",
            "test/0PD9IOLY.png\n",
            "test/MTZH7DMV.png\n",
            "test/LELZOXAF.png\n",
            "test/V56X8HU4.png\n",
            "test/H0B1T502.png\n",
            "test/3IGWPSR6.png\n",
            "test/LNWF40ZQ.png\n",
            "test/2J2TPPOZ.png\n",
            "test/V7OWJ9JX.png\n",
            "test/Q1P1JIZH.png\n",
            "test/0HZNQS64.png\n",
            "test/HN67EBRD.png\n",
            "test/932NY1ME.png\n",
            "test/DI1RMG5R.png\n",
            "test/9373286P.png\n",
            "test/GRPZOGU8.png\n",
            "test/2K0VV3DS.png\n",
            "test/BQKXHC0C.png\n",
            "test/RKV6K0KJ.png\n",
            "test/JI3DJ1JO.png\n",
            "test/9C0ZFOGE.png\n",
            "test/SF8ED6XA.png\n",
            "test/N05RUWYF.png\n",
            "test/P05N02N5.png\n",
            "test/47AU2MR8.png\n",
            "test/ASXSOWRF.png\n",
            "test/CYUWAZGD.png\n",
            "test/6UWH5L6Z.png\n",
            "test/4XAM4AN6.png\n",
            "test/B563E91X.png\n",
            "test/GSCUQDR1.png\n",
            "test/PL3O75MV.png\n",
            "test/6H9SMOJV.png\n",
            "test/E73J87WV.png\n",
            "test/0VD112D3.png\n",
            "test/NDO0XNTG.png\n",
            "test/NESCQOB9.png\n",
            "test/11HN25LK.png\n",
            "test/CZRWC93E.png\n",
            "test/ER0L9373.png\n",
            "test/93V5PP6F.png\n",
            "test/VC5C95UJ.png\n",
            "test/9RKPXS00.png\n",
            "test/SHBTQQ8K.png\n",
            "test/WU93NTK2.png\n",
            "test/WDX44QGF.png\n",
            "test/XCHJ37WB.png\n",
            "test/B3ZMMCR2.png\n",
            "test/UEQ8XPTF.png\n",
            "test/RECTSHSN.png\n",
            "test/UL9VR6OM.png\n",
            "test/NSE5BCV4.png\n",
            "test/D9B9MLV1.png\n",
            "test/3L3UVSHD.png\n",
            "test/J5CFS5IA.png\n",
            "test/04KNVQVO.png\n",
            "test/N9DESEOU.png\n",
            "test/39KW40TP.png\n",
            "test/NADYW0ZB.png\n",
            "test/LP6EQKO8.png\n",
            "test/WGI2OPS3.png\n",
            "test/J1J0HHEW.png\n",
            "test/9BLW270Q.png\n",
            "test/XHGIUCOV.png\n",
            "test/HDFMJNN2.png\n",
            "test/B61VF6Y6.png\n",
            "test/ZT5W1GYW.png\n",
            "test/259KT2AM.png\n",
            "test/ACKU6NRN.png\n",
            "test/NBC3YE5K.png\n",
            "test/T9N89IEN.png\n",
            "test/DV3389R6.png\n",
            "test/HIYNXG3J.png\n",
            "test/8FMU6IBH.png\n",
            "test/YCKI8Q2L.png\n",
            "test/MS55E0O7.png\n",
            "test/U072A9EE.png\n",
            "test/YSXSWHE6.png\n",
            "test/R9G4F4FT.png\n",
            "test/CB84QINA.png\n",
            "test/4XAYNUL2.png\n",
            "test/4GNXC0PH.png\n",
            "test/60U5JQDK.png\n",
            "test/UUNF00DI.png\n",
            "test/9QYTCEU5.png\n",
            "test/EIRT4B7J.png\n",
            "test/WLIJXOB1.png\n",
            "test/4Q6MEDT2.png\n",
            "test/BCXF1QHL.png\n",
            "test/AJ1FV2HJ.png\n",
            "test/0PKODKN9.png\n",
            "test/KDA5ZI2X.png\n",
            "test/AB5FRJ38.png\n",
            "test/YLQ1KYQH.png\n",
            "test/CUQ5K1PW.png\n",
            "test/53ZFOE0I.png\n",
            "test/2IRFN11T.png\n",
            "test/DECQCS9H.png\n",
            "test/WMJA23CH.png\n",
            "test/R1G5NHPV.png\n",
            "test/B9H33NGR.png\n",
            "test/CWIRBH5U.png\n",
            "test/33VXNBQB.png\n",
            "test/4744ALER.png\n",
            "test/9EIZ0T0W.png\n",
            "test/YHHH5UGE.png\n",
            "test/05TIF50O.png\n",
            "test/MUNG125X.png\n",
            "test/BXFU5BPS.png\n",
            "test/MX418RRN.png\n",
            "test/BQOV0D4O.png\n",
            "test/QQJLB3PW.png\n",
            "test/3541X8HV.png\n",
            "test/NBHTW1YK.png\n",
            "test/KI8D29JJ.png\n",
            "test/JQAJOZL7.png\n",
            "test/8GJJKPC2.png\n",
            "test/JO3W6W9K.png\n",
            "test/H7TZ0JCX.png\n",
            "test/6SF1A9RO.png\n",
            "test/EMGMNST2.png\n",
            "test/AQWEKLCI.png\n",
            "test/UUSW5KTX.png\n",
            "test/0Z23G9ML.png\n",
            "test/18C49MP2.png\n",
            "test/GBD1W398.png\n",
            "test/WFY9IQFM.png\n",
            "test/BE2S171S.png\n",
            "test/3BQDJONZ.png\n",
            "test/98HDN74H.png\n",
            "test/V7MU5DZ6.png\n",
            "test/B0KE4Z0L.png\n",
            "test/HDEXPV5Z.png\n",
            "test/BU7N502H.png\n",
            "test/77HDDPJU.png\n",
            "test/N43F4BUL.png\n",
            "test/UBVHDQOI.png\n",
            "test/HPJN0S95.png\n",
            "test/B3YW7EYB.png\n",
            "test/0HKXQEWL.png\n",
            "test/0SMDKYML.png\n",
            "test/AM0P0ZP0.png\n",
            "test/21MVXC0J.png\n",
            "test/JUW0Y2P6.png\n",
            "test/H39B850G.png\n",
            "test/57BNYAG7.png\n",
            "test/4B86F1MH.png\n",
            "test/P6BHQJF6.png\n",
            "test/QD7LOCWX.png\n",
            "test/LHC15D1A.png\n",
            "test/QISZAGJK.png\n",
            "test/SLVRGUXG.png\n",
            "test/TPO9EFZV.png\n",
            "test/JH1P8C94.png\n",
            "test/2U3QNY1C.png\n",
            "test/H1TU24OW.png\n",
            "test/9WNJQMP9.png\n",
            "test/YPPPKEJC.png\n",
            "test/PPXAQHBX.png\n",
            "test/6T44GBL7.png\n",
            "test/X17NJGDG.png\n",
            "test/7N4VNUD1.png\n",
            "test/M8VLU0HW.png\n",
            "test/UZSYDP3Z.png\n",
            "test/UJ5HM65F.png\n",
            "test/J5OXDEEV.png\n",
            "test/99JH0TIY.png\n",
            "test/B73DFIG4.png\n",
            "test/8430JVT9.png\n",
            "test/P66RA457.png\n",
            "test/5DIZGXIG.png\n",
            "test/XLJM2FX3.png\n",
            "test/SOXXQXNV.png\n",
            "test/0GOUCJJW.png\n",
            "test/8R9OYG4U.png\n",
            "test/8NYLEFAD.png\n",
            "test/QAE4TPTJ.png\n",
            "test/181XR0J3.png\n",
            "test/CI1QHA8O.png\n",
            "test/TOOI6PH2.png\n",
            "test/H44JI3UL.png\n",
            "test/617YNNOS.png\n",
            "test/TJQNEKD8.png\n",
            "test/B20X4YPV.png\n",
            "test/LB47APXL.png\n",
            "test/JTI4K3YW.png\n",
            "test/1UFGWGAQ.png\n",
            "test/YST5KVEF.png\n",
            "test/NRPJSBJJ.png\n",
            "test/HLZS9IV9.png\n",
            "test/AFWCE15Y.png\n",
            "test/1WUYY772.png\n",
            "test/99ARZ3KJ.png\n",
            "test/TN8QK8AX.png\n",
            "test/0A14DNF4.png\n",
            "test/EOYZHXZX.png\n",
            "test/IG8JYF49.png\n",
            "test/MISYIFH2.png\n",
            "test/PFCCV2VE.png\n",
            "test/TMIPJVDQ.png\n",
            "test/9BW3SQF5.png\n",
            "test/J0T67HNP.png\n",
            "test/XGB83OKA.png\n",
            "test/ACLY397F.png\n",
            "test/EOLWUWQ0.png\n",
            "test/DJ0THRE2.png\n",
            "test/41EHKQCA.png\n",
            "test/7ZDZJCCZ.png\n",
            "test/Q9W29QLD.png\n",
            "test/5I39Z8AB.png\n",
            "test/ZXM37LB5.png\n",
            "test/S2MFOBBV.png\n",
            "test/ZTVRXBHP.png\n",
            "test/VIWMEYJ5.png\n",
            "test/9HMUI3IQ.png\n",
            "test/AP63FAC3.png\n",
            "test/5QLN6NRV.png\n",
            "test/SCFCDMKS.png\n",
            "test/1CYRQ7X1.png\n",
            "test/K62UCMS8.png\n",
            "test/PPBANBN7.png\n",
            "test/MAFXHSMA.png\n",
            "test/UYCJWGWU.png\n",
            "test/HHFTS960.png\n",
            "test/DZ544Z1M.png\n",
            "test/9Y6JQ30I.png\n",
            "test/GFQ9NSB8.png\n",
            "test/N32KS8FZ.png\n",
            "test/72UPL7L3.png\n",
            "test/IWUORMO8.png\n",
            "test/HOXVPEYI.png\n",
            "test/CF5K7AG7.png\n",
            "test/LTQ4N0NZ.png\n",
            "test/U3JELOIK.png\n",
            "test/XZGC3OAB.png\n",
            "test/O6Z7LQTK.png\n",
            "test/F5N3MES3.png\n",
            "test/4ISY6T95.png\n",
            "test/9JC02TRT.png\n",
            "test/HHNY2SSB.png\n",
            "test/5DBHTKZL.png\n",
            "test/0KJAJ6FB.png\n",
            "test/C93P57YL.png\n",
            "test/FPYRDLZY.png\n",
            "test/9Q2BV89D.png\n",
            "test/HLICYD2Z.png\n",
            "test/OVVADBMA.png\n",
            "test/TEEOD9O0.png\n",
            "test/CVK1UZEW.png\n",
            "test/QS98KD2V.png\n",
            "test/ID5NZFTN.png\n",
            "test/CG9LBEWY.png\n",
            "test/I9WKS2R9.png\n",
            "test/5HHDCALK.png\n",
            "test/NWNRAJ7C.png\n",
            "test/HHH9D731.png\n",
            "test/ATKYW3UF.png\n",
            "test/COH8X7RR.png\n",
            "test/EB5PWS17.png\n",
            "test/CQRAEH1P.png\n",
            "test/P5QQU0VI.png\n",
            "test/WOQ131CF.png\n",
            "test/ITPGTADV.png\n",
            "test/P5F4A7T9.png\n",
            "test/YZRJIHJM.png\n",
            "test/Y59ZVHK8.png\n",
            "test/ANEVET95.png\n",
            "test/4JNXLR7Y.png\n",
            "test/5CV99TG9.png\n",
            "test/3LV5623U.png\n",
            "test/4U821W2N.png\n",
            "test/PJHBR2T9.png\n",
            "test/YO2K8UT6.png\n",
            "test/9CRMZHIA.png\n",
            "test/0MD50KCO.png\n",
            "test/O3BO8IEH.png\n",
            "test/R871LTEZ.png\n",
            "test/JTLOS8YE.png\n",
            "test/4TVJ73DA.png\n",
            "test/C2VPQZH6.png\n",
            "test/HZQ8306W.png\n",
            "test/PD9CLGSG.png\n",
            "test/IO42QS6C.png\n",
            "test/WJ06QQ9B.png\n",
            "test/GDMAJ0CM.png\n",
            "test/7KNHWA6Z.png\n",
            "test/X7A0621A.png\n",
            "test/K56Y3FBR.png\n",
            "test/GUJ8D08B.png\n",
            "test/86QCDWBQ.png\n",
            "test/YSL6TARI.png\n",
            "test/BQDN7B6U.png\n",
            "test/OJ5FG585.png\n",
            "test/FYHNH4TW.png\n",
            "test/P9WC92XZ.png\n",
            "test/D09HZLXA.png\n",
            "test/51HIK398.png\n",
            "test/XSPN55ZC.png\n",
            "test/M2BHUX51.png\n",
            "test/UWTNKT9Q.png\n",
            "test/I5USRVU3.png\n",
            "test/FAZO29QU.png\n",
            "test/J0EXBJJN.png\n",
            "test/77LTK6NW.png\n",
            "test/ZMMCE0SH.png\n",
            "test/L4V5CCEB.png\n",
            "test/4HDMUPCW.png\n",
            "test/AB3YOGL4.png\n",
            "test/1OIIMTTC.png\n",
            "test/O5ROJ9ZZ.png\n",
            "test/G8UA29QU.png\n",
            "test/BIYAH5IN.png\n",
            "test/ZGXAWHHV.png\n",
            "test/65XK5IGN.png\n",
            "test/5X8IIPPC.png\n",
            "test/9VS88VDJ.png\n",
            "test/POM6IPD0.png\n",
            "test/YX3FQDU4.png\n",
            "test/4S3KHM8U.png\n",
            "test/B80LKNKL.png\n",
            "test/EILJLL4J.png\n",
            "test/2ENY9QY4.png\n",
            "test/XJN6O7BC.png\n",
            "test/J19MP43H.png\n",
            "test/T97SKKP6.png\n",
            "test/UE3V7QR3.png\n",
            "test/LC3MIGLQ.png\n",
            "test/M2ZH584D.png\n",
            "test/QV20B2C9.png\n",
            "test/V2FH1SH2.png\n",
            "test/G8HZPJAR.png\n",
            "test/5H0TTP8K.png\n",
            "test/VP65KI19.png\n",
            "test/I9LVURL0.png\n",
            "test/G1LZ3K8P.png\n",
            "test/8ZCEWSNI.png\n",
            "test/SXJ0NE9L.png\n",
            "test/W7W12LD4.png\n",
            "test/0UROIVAU.png\n",
            "test/J51F5KGX.png\n",
            "test/5VDYAFL9.png\n",
            "test/PMEE0D0K.png\n",
            "test/OGZYB9RS.png\n",
            "test/EJ29ZQ25.png\n",
            "test/UHIE4B2Z.png\n",
            "test/707CUKPM.png\n",
            "test/26IES3BB.png\n",
            "test/3ZDRU593.png\n",
            "test/JBYW0RNI.png\n",
            "test/3OQEK7MK.png\n",
            "test/7JV7QSD1.png\n",
            "test/ULBFIY77.png\n",
            "test/BUD2LCBW.png\n",
            "test/3F528MB6.png\n",
            "test/6E6RBRWM.png\n",
            "test/RDJRPYRL.png\n",
            "test/R1MKAA89.png\n",
            "test/04T573I6.png\n",
            "test/WRHMOJ3T.png\n",
            "test/62IVMAQQ.png\n",
            "test/HIH86BUW.png\n",
            "test/EFG7C3AM.png\n",
            "test/CQ101P9B.png\n",
            "test/SO1WFMF9.png\n",
            "test/2AGVZNGA.png\n",
            "test/1BLYNSXO.png\n",
            "test/DC15M4AQ.png\n",
            "test/G2L5EU16.png\n",
            "test/CRLRKAQB.png\n",
            "test/IKGNMWST.png\n",
            "test/W7464KQE.png\n",
            "test/EK2EA7F8.png\n",
            "test/24QBGPAK.png\n",
            "test/9WPPOXFE.png\n",
            "test/N5498HQ2.png\n",
            "test/Y6J5B0LA.png\n",
            "test/ZJ4EFW55.png\n",
            "test/ASTX9AQC.png\n",
            "test/ALCIA11C.png\n",
            "test/1YFBQX69.png\n",
            "test/BF3IIDFM.png\n",
            "test/FLHGZCDF.png\n",
            "test/KNKUZ52P.png\n",
            "test/IFUGEI8L.png\n",
            "test/CS81Y7QR.png\n",
            "test/KE2LDZ84.png\n",
            "test/IP8EYUUY.png\n",
            "test/DT3WM74C.png\n",
            "test/4DFSKJG7.png\n",
            "test/2KRSWMAF.png\n",
            "test/3DOAI74Y.png\n",
            "test/BJHFXMMH.png\n",
            "test/FJUGULMP.png\n",
            "test/UWTIWSKU.png\n",
            "test/SV3YOITG.png\n",
            "test/56NUSXG8.png\n",
            "test/Y03D7I2S.png\n",
            "test/BWOFX8QE.png\n",
            "test/5FR3UU6J.png\n",
            "test/GBY8B600.png\n",
            "test/Q1KH1IVK.png\n",
            "test/NKH2Z9HO.png\n",
            "test/QTWL2RK9.png\n",
            "test/OC8N0WXY.png\n",
            "test/2KOY0SL0.png\n",
            "test/4L5XO8PX.png\n",
            "test/8AUPKJ9X.png\n",
            "test/Z8EUYXE9.png\n",
            "test/TVEAV1ZA.png\n",
            "test/KJFPZ0ZE.png\n",
            "test/0WV63XUZ.png\n",
            "test/ERFZ1GUD.png\n",
            "test/C0190GSA.png\n",
            "test/7FY6ANKG.png\n",
            "test/DAGEJU3W.png\n",
            "test/AL8IORAX.png\n",
            "test/ACEKD8KJ.png\n",
            "test/U55XWZM7.png\n",
            "test/VGWLD5UL.png\n",
            "test/VVOP116J.png\n",
            "test/OM3XKTW3.png\n",
            "test/WBKPU608.png\n",
            "test/CR3DHGQK.png\n",
            "test/GOTIU98O.png\n",
            "test/L6YXR5HD.png\n",
            "test/HWF6HTUH.png\n",
            "test/MCJ66XU0.png\n",
            "test/NCI0CPW6.png\n",
            "test/NBFTLPLI.png\n",
            "test/WEM7503T.png\n",
            "test/EJRB0PF8.png\n",
            "test/LK890U3J.png\n",
            "test/5PAYCBAS.png\n",
            "test/8FWPXHBY.png\n",
            "test/Q72M66SC.png\n",
            "test/9YXH3AWR.png\n",
            "test/AINB57W5.png\n",
            "test/NC2W39TJ.png\n",
            "test/S95QT70M.png\n",
            "test/7D3G6IGF.png\n",
            "test/C265AM9L.png\n",
            "test/II48DSXO.png\n",
            "test/1L236OSK.png\n",
            "test/FT6GTF9G.png\n",
            "test/M7E1S64V.png\n",
            "test/93PJDLDF.png\n",
            "test/I6XIOIWS.png\n",
            "test/BWS6CVPL.png\n",
            "test/89KFCYEX.png\n",
            "test/X9KYGGX1.png\n",
            "test/S46LJCN6.png\n",
            "test/THFMYSLT.png\n",
            "test/YEAO0P8W.png\n",
            "test/MIZ123U9.png\n",
            "test/7Q7FPTE3.png\n",
            "test/4X56BM7P.png\n",
            "test/7YV01TBM.png\n",
            "test/VFLA4LIE.png\n",
            "test/TMNJSOZ4.png\n",
            "test/NOA5NMDN.png\n",
            "test/V875YCFS.png\n",
            "test/C4844EBE.png\n",
            "test/3Q6U29RF.png\n",
            "test/64M9C9PY.png\n",
            "test/LKJF0RBS.png\n",
            "test/MMDMJMSK.png\n",
            "test/CQUHBSBV.png\n",
            "test/9GXHI40T.png\n",
            "test/S593WFRU.png\n",
            "test/Y2CGN2R7.png\n",
            "test/YG61LK3O.png\n",
            "test/N2BLY5GG.png\n",
            "test/D0R2YZ29.png\n",
            "test/DWBZUKGC.png\n",
            "test/ICWPANTB.png\n",
            "test/7DCUZW4H.png\n",
            "test/HYGAYCHW.png\n",
            "test/0TRZ7YAL.png\n",
            "test/R0ZBGOQL.png\n",
            "test/L69UEU8Q.png\n",
            "test/YCE7KOV7.png\n",
            "test/IBTDCMQ6.png\n",
            "test/WB8YLRQN.png\n",
            "test/0R71JUA9.png\n",
            "test/DQ7J5CXA.png\n",
            "test/15IL35D5.png\n",
            "test/WO0ZCVWH.png\n",
            "test/XBBJHOY5.png\n",
            "test/6IRFZEKQ.png\n",
            "test/5SXY8B1D.png\n",
            "test/ISBJBN9R.png\n",
            "test/9ED0EFCB.png\n",
            "test/VB8BX2SD.png\n",
            "test/9V0TL14G.png\n",
            "test/0QC1K5P5.png\n",
            "test/66BTDGFO.png\n",
            "test/2VLLC8J7.png\n",
            "test/55IMA61D.png\n",
            "test/A2O6Y6JG.png\n",
            "test/RM1SA15W.png\n",
            "test/YVDSKOWW.png\n",
            "test/9I49E0Z7.png\n",
            "test/7KIBM6XP.png\n",
            "test/XJ5VO1AM.png\n",
            "test/GG67HYM4.png\n",
            "test/J3Z1ZBG4.png\n",
            "test/WJP08B6A.png\n",
            "test/B3BF356H.png\n",
            "test/SH2BQ7SZ.png\n",
            "test/3BIJS6IY.png\n",
            "test/VJB8RM0R.png\n",
            "test/ZMNZHP1P.png\n",
            "test/HCRO94U2.png\n",
            "test/0X851VVL.png\n",
            "test/M997FDXP.png\n",
            "test/VFSB30H8.png\n",
            "test/GLI1P8OS.png\n",
            "test/8J4A8NQJ.png\n",
            "test/Z7ADMPU6.png\n",
            "test/SLENF20X.png\n",
            "test/AQ08F3YD.png\n",
            "test/01RRI4YP.png\n",
            "test/8KYXXHA8.png\n",
            "test/M8EFXH1E.png\n",
            "test/MKTTSBGL.png\n",
            "test/M60T3O5U.png\n",
            "test/1U3UOVEX.png\n",
            "test/RG6BO373.png\n",
            "test/3NER1WE5.png\n",
            "test/P3BG28SW.png\n",
            "test/MYZTKBXT.png\n",
            "test/WTAK8NIK.png\n",
            "test/KV264LT3.png\n",
            "test/0AAO51JW.png\n",
            "test/7MS5LLHF.png\n",
            "test/PUD4L9HD.png\n",
            "test/HK6APH3I.png\n",
            "test/WGV8E8FM.png\n",
            "test/P6P6F9XZ.png\n",
            "test/25C2Z891.png\n",
            "test/RMX2EMH3.png\n",
            "test/3Z0P0FMZ.png\n",
            "test/ZI1YP3ZT.png\n",
            "test/YAY40OPO.png\n",
            "test/V5O4YVMZ.png\n",
            "test/OIEXGVOC.png\n",
            "test/FW64TLQD.png\n",
            "test/DHTMKLOR.png\n",
            "test/442BXF5T.png\n",
            "test/6OR8VZ9W.png\n",
            "test/FA3VXQU6.png\n",
            "test/50D4N34K.png\n",
            "test/3TFZ2AHE.png\n",
            "test/V00ERVVQ.png\n",
            "test/F2OY19ZP.png\n",
            "test/HD6B8CVK.png\n",
            "test/AAPVM5QN.png\n",
            "test/ZEZTQOED.png\n",
            "test/BD7QV2EK.png\n",
            "test/VPXLZLMN.png\n",
            "test/2VEROKJG.png\n",
            "test/RVMA42DS.png\n",
            "test/3UNU65L5.png\n",
            "test/6DA70FGW.png\n",
            "test/R6JKN43N.png\n",
            "test/4LQRX0ER.png\n",
            "test/UKLJSDRG.png\n",
            "test/51Q0R4IS.png\n",
            "test/ULM2USHF.png\n",
            "test/YEQBEJEL.png\n",
            "test/WNU31HUG.png\n",
            "test/UL2FP3PC.png\n",
            "test/XIDUEQV5.png\n",
            "test/7FEQ0C19.png\n",
            "test/8M5CPDPT.png\n",
            "test/BPJ7XGBO.png\n",
            "test/WERTWBO2.png\n",
            "test/F3U3590H.png\n",
            "test/B2HIBNSJ.png\n",
            "test/FOE99DUT.png\n",
            "test/7JD6CPC1.png\n",
            "test/41M9J9M2.png\n",
            "test/V9PNTZK9.png\n",
            "test/6YMOIM0O.png\n",
            "test/IIP3QYBH.png\n",
            "test/9IQGE99I.png\n",
            "test/5D06DPP1.png\n",
            "test/TV5BII81.png\n",
            "test/ULVFZ5YG.png\n",
            "test/SCDN30B6.png\n",
            "test/3919HB5O.png\n",
            "test/WXNJF5VU.png\n",
            "test/G256IVUF.png\n",
            "test/5AWFO1KM.png\n",
            "test/9MBB4YK8.png\n",
            "test/WZ9QVJNO.png\n",
            "test/AOQJR9IR.png\n",
            "test/F4NEJ9VN.png\n",
            "test/QSI76R8Q.png\n",
            "test/UOQBDB5B.png\n",
            "test/UC8DNXPB.png\n",
            "test/BZ28CCZO.png\n",
            "test/L5FR6WMQ.png\n",
            "test/7O574IVK.png\n",
            "test/RFQ70FRX.png\n",
            "test/2AM0DTTC.png\n",
            "test/MJQH722R.png\n",
            "test/P1MPH848.png\n",
            "test/HK6MY1RB.png\n",
            "test/EU5C8QRN.png\n",
            "test/41ORINIM.png\n",
            "test/OI5P59FI.png\n",
            "test/8BIH29Q7.png\n",
            "test/LZ0DEJG6.png\n",
            "test/22VGJ1GI.png\n",
            "test/7UHZ0I14.png\n",
            "test/EJCQG86K.png\n",
            "test/GCY0KEYQ.png\n",
            "test/M6LQFD8D.png\n",
            "test/RCEIDTLA.png\n",
            "test/HPDCAK9X.png\n",
            "test/XXHE2ZPW.png\n",
            "test/Z16SOOLY.png\n",
            "test/KVEVZI2X.png\n",
            "test/NUG6053D.png\n",
            "test/47R6B7UD.png\n",
            "test/VHBP3MZQ.png\n",
            "test/TO3Y2TKK.png\n",
            "test/QZJSV0PG.png\n",
            "test/UZDKOFL4.png\n",
            "test/D2GC19HU.png\n",
            "test/O9NOISPF.png\n",
            "test/1K3MLR5Y.png\n",
            "test/82OLH2GM.png\n",
            "test/QWMOMNYV.png\n",
            "test/E6JPI00O.png\n",
            "test/ZFSRSF7N.png\n",
            "test/0BAQXFYZ.png\n",
            "test/IJFZY2EH.png\n",
            "test/F7EVMY2P.png\n",
            "test/D9QB1O08.png\n",
            "test/A6AW7OK9.png\n",
            "test/QEZKN2Z1.png\n",
            "test/JV8EVDIN.png\n",
            "test/RCTCNZBJ.png\n",
            "test/GFCMMJLB.png\n",
            "test/PAHL2E5F.png\n",
            "test/OUJ0Q9BP.png\n",
            "test/UDP6RR36.png\n",
            "test/GGQ8U815.png\n",
            "test/5UFT8K99.png\n",
            "test/ERY3KM0R.png\n",
            "test/KHKYQOUL.png\n",
            "test/IH7K8WFQ.png\n",
            "test/42Q9BKHB.png\n",
            "test/N4H5YHSG.png\n",
            "test/DBP7BBTB.png\n",
            "test/JDNY87TQ.png\n",
            "test/564UGMP6.png\n",
            "test/TOXWMHNE.png\n",
            "test/L4GJNARU.png\n",
            "test/5UKNS8RL.png\n",
            "test/4IIQIZGA.png\n",
            "test/XHV1O4MZ.png\n",
            "test/ME1LQ31L.png\n",
            "test/D3BO2HI5.png\n",
            "test/B8QNNEPT.png\n",
            "test/HFCNETXQ.png\n",
            "test/SBHU1ZSZ.png\n",
            "test/SW20OFAS.png\n",
            "test/T3EP1XIX.png\n",
            "test/RB4XJ1L2.png\n",
            "test/JLX62G42.png\n",
            "test/B0D9MSW3.png\n",
            "test/RCM4XKU2.png\n",
            "test/F80GCGHT.png\n",
            "test/86V8Y0SC.png\n",
            "test/ILQF6A7I.png\n",
            "test/6PLVSXCN.png\n",
            "test/NKODQNP7.png\n",
            "test/KTZ7ARKZ.png\n",
            "test/HL3O3O7L.png\n",
            "test/M93IZMGA.png\n",
            "test/7ZH001Z8.png\n",
            "test/1M2ABAY4.png\n",
            "test/NOEVRE24.png\n",
            "test/GDNDUN8F.png\n",
            "test/DM7OTV01.png\n",
            "test/4VG8V2XQ.png\n",
            "test/TAENLN84.png\n",
            "test/UBINWE81.png\n",
            "test/4E9QXX5J.png\n",
            "test/93G6090G.png\n",
            "test/VBGY8DBN.png\n",
            "test/MKMLB0RF.png\n",
            "test/W6JG1ZZ7.png\n",
            "test/F4QJ6CZS.png\n",
            "test/WDLNTKTT.png\n",
            "test/IVAFIW08.png\n",
            "test/YADVRZ4F.png\n",
            "test/XQCW99LE.png\n",
            "test/LUQVMZI4.png\n",
            "test/OI8P16YQ.png\n",
            "test/UK1SIJTX.png\n",
            "test/7HZ7ZCU6.png\n",
            "test/2I90CVXF.png\n",
            "test/8Y5WXHIO.png\n",
            "test/65ARE49I.png\n",
            "test/CYHBPTVP.png\n",
            "test/ZP1G1CPT.png\n",
            "test/AUBSETEQ.png\n",
            "test/AVRFT21C.png\n",
            "test/S1929MWJ.png\n",
            "test/PUOPDIHI.png\n",
            "test/TFNXGFW6.png\n",
            "test/ZA3HTO2Y.png\n",
            "test/FXCPRA6J.png\n",
            "test/DUJ0G1WC.png\n",
            "test/BR0M35Y4.png\n",
            "test/UXXG2EA0.png\n",
            "test/6O65YUTI.png\n",
            "test/37IM46LN.png\n",
            "test/7ZE3QYL4.png\n",
            "test/DDE897P7.png\n",
            "test/LKV1XP8G.png\n",
            "test/1US0WKIM.png\n",
            "test/MOI5E2WE.png\n",
            "test/XEALHU7E.png\n",
            "test/DSOYL2J6.png\n",
            "test/OG8YATW2.png\n",
            "test/5NIBW3NF.png\n",
            "test/DOY9MBHE.png\n",
            "test/XXQ3WQR6.png\n",
            "test/3LFOVMKW.png\n",
            "test/MSZHDBUL.png\n",
            "test/K2S0ERRG.png\n",
            "test/0ZZP2HCQ.png\n",
            "test/EW0XNWON.png\n",
            "test/KMFZGFQ6.png\n",
            "test/PWJ3OFNB.png\n",
            "test/65Q1633G.png\n",
            "test/68RDRDA1.png\n",
            "test/1LFYH3PH.png\n",
            "test/M00IEYUT.png\n",
            "test/BH5Z9KCK.png\n",
            "test/PLX6TMID.png\n",
            "test/2PX5SOTH.png\n",
            "test/VNGKA55V.png\n",
            "test/W1I78GBG.png\n",
            "test/CR800I4J.png\n",
            "test/30HI3IQA.png\n",
            "test/KB88F2Q6.png\n",
            "test/57IECJ1X.png\n",
            "test/WWYKZY1R.png\n",
            "test/FTWT8BU4.png\n",
            "test/2EJJAAE4.png\n",
            "test/YPZ0M7QI.png\n",
            "test/50V0RCS3.png\n",
            "test/BSHIP1TB.png\n",
            "test/HBDPG9X3.png\n",
            "test/21HLT2TW.png\n",
            "test/EJGFFVUA.png\n",
            "test/3VCXMZM1.png\n",
            "test/R1P9CNSQ.png\n",
            "test/12DI4FDI.png\n",
            "test/P5EZCUBJ.png\n",
            "test/ADNVRAB1.png\n",
            "test/2QQU1DXS.png\n",
            "test/LC7ID8JZ.png\n",
            "test/YFFN7D62.png\n",
            "test/P4IOH96W.png\n",
            "test/6G0MJQH3.png\n",
            "test/TS0VZG9S.png\n",
            "test/73R67YEK.png\n",
            "test/H12IG8HA.png\n",
            "test/FMYDVWLM.png\n",
            "test/793YX7I9.png\n",
            "test/UHQDMZ3R.png\n",
            "test/0NQB472M.png\n",
            "test/ZIUND7KP.png\n",
            "test/VRQMV2QB.png\n",
            "test/9CXNMYER.png\n",
            "test/C84C7ACQ.png\n",
            "test/M3DV1RF6.png\n",
            "test/91THIT1U.png\n",
            "test/7UXH9R69.png\n",
            "test/FWGSX8PR.png\n",
            "test/MGTS7ZMB.png\n",
            "test/MAXQG26L.png\n",
            "test/F3HTF2PL.png\n",
            "test/JJ3HWJGD.png\n",
            "test/PRW9YTKS.png\n",
            "test/3HRYUXW1.png\n",
            "test/XYFZ1OYD.png\n",
            "test/Q8S1UQSY.png\n",
            "test/IS1JUS6R.png\n",
            "test/A6CNZBD0.png\n",
            "test/X16T4GOO.png\n",
            "test/YS9DXI5J.png\n",
            "test/DZ741U2Y.png\n",
            "test/W7RHF42I.png\n",
            "test/S88XFUVQ.png\n",
            "test/A9JF8TSP.png\n",
            "test/AT56K2SW.png\n",
            "test/P7VTO3FU.png\n",
            "test/O7LQVSR2.png\n",
            "test/8QJET3AQ.png\n",
            "test/9E5ELIQU.png\n",
            "test/U3UM4YEP.png\n",
            "test/HK4G2K0C.png\n",
            "test/NME3OY2C.png\n",
            "test/XDC0L4M4.png\n",
            "test/YVJO7KLU.png\n",
            "test/92NPVSCN.png\n",
            "test/IG88OUGN.png\n",
            "test/Q22Q7RBX.png\n",
            "test/YEMOMGMY.png\n",
            "test/GDUX9GZB.png\n",
            "test/KHBIJ3JV.png\n",
            "test/8AN3GEVF.png\n",
            "test/ZKUQRL35.png\n",
            "test/YVK17QW4.png\n",
            "test/RWRI6V69.png\n",
            "test/5EUOKC0D.png\n",
            "test/2U3US5I6.png\n",
            "test/0A821EZN.png\n",
            "test/H14IXCZZ.png\n",
            "test/NC17TWB3.png\n",
            "test/LM7250JG.png\n",
            "test/J2Q39SGB.png\n",
            "test/47PI4VMW.png\n",
            "test/I4KSXSKW.png\n",
            "test/TI3ITFWR.png\n",
            "test/9L76H1VE.png\n",
            "test/OSZU3MO1.png\n",
            "test/T33Q8O5V.png\n",
            "test/G2NK0KBW.png\n",
            "test/N0MWAM8W.png\n",
            "test/Q77W7ODA.png\n",
            "test/S27DOSI5.png\n",
            "test/CLUQAX50.png\n",
            "test/FJCRKUCG.png\n",
            "test/4Q62FDL5.png\n",
            "test/ZBDSHIWF.png\n",
            "test/DF0HF12D.png\n",
            "test/O77VDZUI.png\n",
            "test/PP8J6VEG.png\n",
            "test/2CNFM8FK.png\n",
            "test/DAINF4GE.png\n",
            "test/53SFYE58.png\n",
            "test/KB9VKJ4X.png\n",
            "test/OUUB94X4.png\n",
            "test/7X7QIZA6.png\n",
            "test/QE6OU9R5.png\n",
            "test/RSUMISLS.png\n",
            "test/NYO9UEUM.png\n",
            "test/6OV0NMMN.png\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s6L4G6cHBb3h"
      },
      "source": [
        "!mv /content/IDRND_FASDB_train/spoof/test /content"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oeAsrOBZCabm"
      },
      "source": [
        "!mkdir /content/testcut"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oYeKAWIACGTT"
      },
      "source": [
        "os.chdir(\"/content/test\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  if f.endswith(\"png\"):\n",
        "  \n",
        "    detections = embedder.extract(f, threshold=0.95)\n",
        "    i=load_img(f)\n",
        "  try:\n",
        "    c=detections[0][\"box\"]\n",
        "  except IndexError:\n",
        "    pass\n",
        "\n",
        "    im_crop = i.crop((c))\n",
        "    im_crop.save(\"/content/testcut/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NERhLoh0Nml3"
      },
      "source": [
        "!mkdir /content/testfiltered"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LYDLaQ0dNkpk"
      },
      "source": [
        "os.chdir(\"/content/test\")\n",
        "for f in glob.glob(\"*.png\"):\n",
        "  #im = load_img(f)\n",
        "  #Create image object\n",
        "  img = Image.open(f)#.convert(\"LA\")\n",
        "\n",
        "  img1 = img.filter(GaussianBlur(radius=10))\n",
        "\n",
        "  #enhancer = ImageEnhance.Brightness(img1)\n",
        "\n",
        "  #factor = 0.5\n",
        "  #im2= enhancer.enhance(factor)\n",
        "  img1.save(\"/content/testfiltered/\"+f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9uS7hw-gRN9L",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "716bdd2f-c0d8-4919-c422-a5d503ae3e0b"
      },
      "source": [
        "len(os.listdir(\"/content/testfiltered\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8OPUvMcMBjKY"
      },
      "source": [
        "sasha=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GipZXxjp6xZZ"
      },
      "source": [
        "os.chdir(\"/content/testfiltered\")\n",
        "for im in glob.glob(\"*.png\"):\n",
        "\n",
        "  img=load_img(im, target_size=(224, 224))\n",
        "\n",
        "  x = img_to_array(img) \n",
        "  x=preprocess_input(x)\n",
        "  x = x.reshape((1,) + x.shape) \n",
        "  predictions = my_model.predict(x)\n",
        "  sasha.append([im, predictions[0][1]])\n",
        "\n",
        "  "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lYVetGrW-xjv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "46d8f95e-5a70-4082-c9c3-679eb087fa6b"
      },
      "source": [
        "len(sasha)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dydNf0Pq-yJW"
      },
      "source": [
        "import pandas as pd"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RLnjcV73-yJh"
      },
      "source": [
        "df1=pd.DataFrame(sasha, columns=[\"0\", \"1\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "No9a1L-V-yJo"
      },
      "source": [
        "dfzap=pd.DataFrame(sasha, columns=[\"0\", \"1\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kkHrhq4C-yJu"
      },
      "source": [
        "df4=pd.DataFrame([answers[0], answers[1]])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "q7bWzK0g-yJ1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "81c561f5-7de6-4852-f5e2-94d57475db6b"
      },
      "source": [
        "df1.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.2</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7AERGO9A.png</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>PTEGYEV5.png</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>07ZI6T3X.png</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>79G9HK2P.png</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              0  1\n",
              "0           0.2   \n",
              "0  7AERGO9A.png  0\n",
              "1  PTEGYEV5.png  0\n",
              "2  07ZI6T3X.png  0\n",
              "3  79G9HK2P.png  0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HdVs4TP6-yJ8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "19657e10-c4b7-4591-8106-246fab350abc"
      },
      "source": [
        "df1.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10001, 2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FalR_KK2-yJ_"
      },
      "source": [
        "\n",
        "\n",
        "df1.to_csv(\"/content/vgg16_quite_sure.csv\", index=False, header=None)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7s2_4o4J-yKC"
      },
      "source": [
        "df.to_csv(\"/content/1027_on_arrays_df.csv\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jB_7lMuY-yKG"
      },
      "source": [
        "df1 = pd.DataFrame(list(zip(test_array_names, test_array)))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sSkMYXC1-yKK"
      },
      "source": [
        "df2=pd.DataFrame([[round(0.2, 1), \"\"]], columns=[\"0\", \"1\"])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "41so4UQw-yKO"
      },
      "source": [
        "df1 = pd.concat([df2, df1])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_fsn94YTitib"
      },
      "source": [
        "## and parallell convolution"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "elwJtMhmtaig"
      },
      "source": [
        "##IM ARRAYS +conv"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JKSOghJZteKE"
      },
      "source": [
        "from PIL import Image\n",
        "import operator\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8-tOXytZgjpM"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CxJxSTOXpfjE"
      },
      "source": [
        "\n",
        "im = Image.open('/content/IDRND_FASDB_train/real/AA5742_id154_s0_112.png').convert(\"L\")\n",
        "\n",
        "pixels =np.array(im)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RluvihEe3yVZ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 132
        },
        "outputId": "a241ef53-d437-469a-b7f7-20c7e4b22362"
      },
      "source": [
        "np.where(pixels<81)=0"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-16-b45ac9d2bc17>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    np.where(pixels<81)=0\u001b[0m\n\u001b[0m                         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m can't assign to function call\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zGyeesWTw4Zm",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b16fad17-622c-438b-81db-d06dd58bd956"
      },
      "source": [
        "pixels.mean()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "81.47030459919691"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jrwfSIC-dWWo"
      },
      "source": [
        "pixels[np.where(pixels<81)]=255"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iCD1UoStdvgF"
      },
      "source": [
        "save_img(\"ninesmaller.jpg\", ninesmaller)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f5-5e_kj-GS5"
      },
      "source": [
        "x_train = train_dataset[:, 1:]\n",
        "# Переформатируем данные в 2D, бэкенд TensorFlow\n",
        "x_train = x_train.reshape(x_train.shape[0], 28, 28, 1)\n",
        "input_shape = (28, 28, 1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ga0DtPJQVkEh"
      },
      "source": [
        "x_train /= 255.0"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IW7rhFNSAGIC"
      },
      "source": [
        "x_train[1].shape"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sjO-WFM0AnJI"
      },
      "source": [
        "y_train = train_dataset[:, 0]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_nsLwMHuGnHI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "68d419ed-8232-4c8e-cddc-455884c1c7b5"
      },
      "source": [
        "y_train[:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1., 0., 1., 4., 0.])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yQZ2utqhAutw"
      },
      "source": [
        "y_train = utils.to_categorical(y_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wWlQHgMkA_BQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 103
        },
        "outputId": "a1ed70f2-1a0c-4d70-e152-cea6f0604cea"
      },
      "source": [
        "y_train[:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
              "       [1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
              "       [0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
              "       [0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],\n",
              "       [1., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UjEDV7gSrthA"
      },
      "source": [
        "random_seed = 2\n",
        "X_train, X_val, Y_train, Y_val = train_test_split(x_train, y_train, test_size = 0.1, random_state=random_seed)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LJgbvHFTT2g7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "60d3ccce-ffda-4057-d8d4-224f32b1310c"
      },
      "source": [
        "X_train.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(37800, 28, 28, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YvRM8hR06iUt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 140
        },
        "outputId": "e1df8658-7b7e-468f-ace5-71745f3b458b"
      },
      "source": [
        "model = Sequential()\n",
        "\n",
        "model.add(\n",
        "model.add(Dropout(0.5))\n",
        "model.add(Dense(10, activation = \"softmax\"))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py:435: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "Colocations handled automatically by placer.\n",
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/layers/core.py:143: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PTcbSxchKZjd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 566
        },
        "outputId": "fc374df7-48f8-487b-fe5a-d7e916db2252"
      },
      "source": [
        "model.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n",
        "\n",
        "print(model.summary())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "conv2d (Conv2D)              (None, 28, 28, 32)        832       \n",
            "_________________________________________________________________\n",
            "conv2d_1 (Conv2D)            (None, 28, 28, 32)        25632     \n",
            "_________________________________________________________________\n",
            "max_pooling2d (MaxPooling2D) (None, 14, 14, 32)        0         \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 14, 14, 32)        0         \n",
            "_________________________________________________________________\n",
            "conv2d_2 (Conv2D)            (None, 14, 14, 64)        18496     \n",
            "_________________________________________________________________\n",
            "conv2d_3 (Conv2D)            (None, 14, 14, 64)        36928     \n",
            "_________________________________________________________________\n",
            "max_pooling2d_1 (MaxPooling2 (None, 7, 7, 64)          0         \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 7, 7, 64)          0         \n",
            "_________________________________________________________________\n",
            "flatten (Flatten)            (None, 3136)              0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 256)               803072    \n",
            "_________________________________________________________________\n",
            "dropout_2 (Dropout)          (None, 256)               0         \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 10)                2570      \n",
            "=================================================================\n",
            "Total params: 887,530\n",
            "Trainable params: 887,530\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lspCHiaCKl72"
      },
      "source": [
        "## Обучаем нейронную сеть"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "C3JnxgJMeKbn"
      },
      "source": [
        "сheckpoint = ModelCheckpoint('mnist-cnn.h5', \n",
        "                              monitor='val_acc', \n",
        "                              save_best_only=True,\n",
        "                              verbose=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZTRnbOV2dbfA"
      },
      "source": [
        "learning_rate_reduction = ReduceLROnPlateau(monitor='val_acc', \n",
        "                                            patience=3, \n",
        "                                            verbose=1, \n",
        "                                            factor=0.5, \n",
        "                                            min_lr=0.00001)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bldCePr5sUYg"
      },
      "source": [
        "batch_size=96"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H6EIXu1dKoju",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 2900
        },
        "outputId": "6c86d661-b6fa-42cf-ceb0-88c3cf23821f"
      },
      "source": [
        "сheckpoint = ModelCheckpoint('mnist-cnn.h5', \n",
        "                              monitor='val_acc', \n",
        "                              save_best_only=True,\n",
        "                              verbose=1)\n",
        "learning_rate_reduction = ReduceLROnPlateau(monitor='val_acc', \n",
        "                                            patience=3, \n",
        "                                            verbose=1, \n",
        "                                            factor=0.5, \n",
        "                                            min_lr=0.00001)\n",
        "model.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n",
        "history = model.fit(datagen.flow(X_train,Y_train, batch_size=batch_size), \n",
        "                    epochs=30,\n",
        "                    validation_data=(X_val, Y_val),\n",
        "                    steps_per_epoch=X_train.shape[0] // batch_size,\n",
        "                    verbose=1,\n",
        "                    callbacks=[сheckpoint, learning_rate_reduction])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "Use tf.cast instead.\n",
            "Epoch 1/30\n",
            "4200/4200 [==============================] - 1s 155us/sample - loss: 0.0646 - acc: 0.9795\n",
            "\n",
            "Epoch 00001: val_acc improved from -inf to 0.97952, saving model to mnist-cnn.hdf5\n",
            "394/394 [==============================] - 18s 47ms/step - loss: 0.4372 - acc: 0.8576 - val_loss: 0.0646 - val_acc: 0.9795\n",
            "Epoch 2/30\n",
            "4200/4200 [==============================] - 1s 130us/sample - loss: 0.0418 - acc: 0.9867\n",
            "\n",
            "Epoch 00002: val_acc improved from 0.97952 to 0.98667, saving model to mnist-cnn.hdf5\n",
            "394/394 [==============================] - 17s 43ms/step - loss: 0.1366 - acc: 0.9583 - val_loss: 0.0417 - val_acc: 0.9867\n",
            "Epoch 3/30\n",
            "4200/4200 [==============================] - 1s 119us/sample - loss: 0.0349 - acc: 0.9907\n",
            "\n",
            "Epoch 00003: val_acc improved from 0.98667 to 0.99071, saving model to mnist-cnn.hdf5\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0987 - acc: 0.9702 - val_loss: 0.0349 - val_acc: 0.9907\n",
            "Epoch 4/30\n",
            "4200/4200 [==============================] - 1s 127us/sample - loss: 0.0330 - acc: 0.9900\n",
            "\n",
            "Epoch 00004: val_acc did not improve from 0.99071\n",
            "394/394 [==============================] - 17s 43ms/step - loss: 0.0810 - acc: 0.9765 - val_loss: 0.0330 - val_acc: 0.9900\n",
            "Epoch 5/30\n",
            "4200/4200 [==============================] - 1s 128us/sample - loss: 0.0502 - acc: 0.9874\n",
            "\n",
            "Epoch 00005: val_acc did not improve from 0.99071\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0743 - acc: 0.9786 - val_loss: 0.0501 - val_acc: 0.9874\n",
            "Epoch 6/30\n",
            "4200/4200 [==============================] - 1s 125us/sample - loss: 0.0269 - acc: 0.9924\n",
            "\n",
            "Epoch 00006: val_acc improved from 0.99071 to 0.99238, saving model to mnist-cnn.hdf5\n",
            "394/394 [==============================] - 17s 43ms/step - loss: 0.0642 - acc: 0.9801 - val_loss: 0.0270 - val_acc: 0.9924\n",
            "Epoch 7/30\n",
            "4200/4200 [==============================] - 1s 130us/sample - loss: 0.0320 - acc: 0.9905\n",
            "\n",
            "Epoch 00007: val_acc did not improve from 0.99238\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0618 - acc: 0.9823 - val_loss: 0.0319 - val_acc: 0.9905\n",
            "Epoch 8/30\n",
            "4200/4200 [==============================] - 1s 125us/sample - loss: 0.0318 - acc: 0.9898\n",
            "\n",
            "Epoch 00008: val_acc did not improve from 0.99238\n",
            "394/394 [==============================] - 16s 42ms/step - loss: 0.0553 - acc: 0.9837 - val_loss: 0.0317 - val_acc: 0.9898\n",
            "Epoch 9/30\n",
            "4200/4200 [==============================] - 1s 121us/sample - loss: 0.0315 - acc: 0.9912\n",
            "\n",
            "Epoch 00009: val_acc did not improve from 0.99238\n",
            "\n",
            "Epoch 00009: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0535 - acc: 0.9842 - val_loss: 0.0314 - val_acc: 0.9912\n",
            "Epoch 10/30\n",
            "4200/4200 [==============================] - 1s 129us/sample - loss: 0.0183 - acc: 0.9940\n",
            "\n",
            "Epoch 00010: val_acc improved from 0.99238 to 0.99405, saving model to mnist-cnn.hdf5\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0401 - acc: 0.9882 - val_loss: 0.0183 - val_acc: 0.9940\n",
            "Epoch 11/30\n",
            "4200/4200 [==============================] - 1s 124us/sample - loss: 0.0187 - acc: 0.9940\n",
            "\n",
            "Epoch 00011: val_acc did not improve from 0.99405\n",
            "394/394 [==============================] - 16s 42ms/step - loss: 0.0372 - acc: 0.9889 - val_loss: 0.0189 - val_acc: 0.9940\n",
            "Epoch 12/30\n",
            "4200/4200 [==============================] - 0s 114us/sample - loss: 0.0204 - acc: 0.9940\n",
            "\n",
            "Epoch 00012: val_acc did not improve from 0.99405\n",
            "394/394 [==============================] - 16s 41ms/step - loss: 0.0356 - acc: 0.9892 - val_loss: 0.0203 - val_acc: 0.9940\n",
            "Epoch 13/30\n",
            "4200/4200 [==============================] - 0s 116us/sample - loss: 0.0224 - acc: 0.9940\n",
            "\n",
            "Epoch 00013: val_acc did not improve from 0.99405\n",
            "\n",
            "Epoch 00013: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n",
            "394/394 [==============================] - 16s 41ms/step - loss: 0.0377 - acc: 0.9893 - val_loss: 0.0225 - val_acc: 0.9940\n",
            "Epoch 14/30\n",
            "4200/4200 [==============================] - 0s 117us/sample - loss: 0.0182 - acc: 0.9957\n",
            "\n",
            "Epoch 00014: val_acc improved from 0.99405 to 0.99571, saving model to mnist-cnn.hdf5\n",
            "394/394 [==============================] - 16s 41ms/step - loss: 0.0300 - acc: 0.9904 - val_loss: 0.0181 - val_acc: 0.9957\n",
            "Epoch 15/30\n",
            "4200/4200 [==============================] - 1s 123us/sample - loss: 0.0197 - acc: 0.9948\n",
            "\n",
            "Epoch 00015: val_acc did not improve from 0.99571\n",
            "394/394 [==============================] - 17s 43ms/step - loss: 0.0266 - acc: 0.9918 - val_loss: 0.0197 - val_acc: 0.9948\n",
            "Epoch 16/30\n",
            "4200/4200 [==============================] - 1s 123us/sample - loss: 0.0208 - acc: 0.9940\n",
            "\n",
            "Epoch 00016: val_acc did not improve from 0.99571\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0273 - acc: 0.9919 - val_loss: 0.0207 - val_acc: 0.9940\n",
            "Epoch 17/30\n",
            "4200/4200 [==============================] - 1s 137us/sample - loss: 0.0190 - acc: 0.9950\n",
            "\n",
            "Epoch 00017: val_acc did not improve from 0.99571\n",
            "\n",
            "Epoch 00017: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0258 - acc: 0.9926 - val_loss: 0.0190 - val_acc: 0.9950\n",
            "Epoch 18/30\n",
            "4200/4200 [==============================] - 1s 133us/sample - loss: 0.0192 - acc: 0.9950\n",
            "\n",
            "Epoch 00018: val_acc did not improve from 0.99571\n",
            "394/394 [==============================] - 17s 43ms/step - loss: 0.0227 - acc: 0.9931 - val_loss: 0.0192 - val_acc: 0.9950\n",
            "Epoch 19/30\n",
            "4200/4200 [==============================] - 1s 132us/sample - loss: 0.0188 - acc: 0.9955\n",
            "\n",
            "Epoch 00019: val_acc did not improve from 0.99571\n",
            "394/394 [==============================] - 17s 43ms/step - loss: 0.0226 - acc: 0.9930 - val_loss: 0.0187 - val_acc: 0.9955\n",
            "Epoch 20/30\n",
            "4200/4200 [==============================] - 1s 123us/sample - loss: 0.0183 - acc: 0.9957\n",
            "\n",
            "Epoch 00020: val_acc did not improve from 0.99571\n",
            "\n",
            "Epoch 00020: ReduceLROnPlateau reducing learning rate to 6.25000029685907e-05.\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0216 - acc: 0.9934 - val_loss: 0.0183 - val_acc: 0.9957\n",
            "Epoch 21/30\n",
            "4200/4200 [==============================] - 1s 132us/sample - loss: 0.0175 - acc: 0.9962\n",
            "\n",
            "Epoch 00021: val_acc improved from 0.99571 to 0.99619, saving model to mnist-cnn.hdf5\n",
            "394/394 [==============================] - 17s 43ms/step - loss: 0.0200 - acc: 0.9939 - val_loss: 0.0174 - val_acc: 0.9962\n",
            "Epoch 22/30\n",
            "4200/4200 [==============================] - 1s 124us/sample - loss: 0.0181 - acc: 0.9960\n",
            "\n",
            "Epoch 00022: val_acc did not improve from 0.99619\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0207 - acc: 0.9937 - val_loss: 0.0181 - val_acc: 0.9960\n",
            "Epoch 23/30\n",
            "4200/4200 [==============================] - 1s 121us/sample - loss: 0.0185 - acc: 0.9955\n",
            "\n",
            "Epoch 00023: val_acc did not improve from 0.99619\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0198 - acc: 0.9938 - val_loss: 0.0185 - val_acc: 0.9955\n",
            "Epoch 24/30\n",
            "4200/4200 [==============================] - 1s 120us/sample - loss: 0.0160 - acc: 0.9960\n",
            "\n",
            "Epoch 00024: val_acc did not improve from 0.99619\n",
            "\n",
            "Epoch 00024: ReduceLROnPlateau reducing learning rate to 3.125000148429535e-05.\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0208 - acc: 0.9934 - val_loss: 0.0159 - val_acc: 0.9960\n",
            "Epoch 25/30\n",
            "4200/4200 [==============================] - 1s 129us/sample - loss: 0.0168 - acc: 0.9962\n",
            "\n",
            "Epoch 00025: val_acc did not improve from 0.99619\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0196 - acc: 0.9939 - val_loss: 0.0167 - val_acc: 0.9962\n",
            "Epoch 26/30\n",
            "4200/4200 [==============================] - 0s 119us/sample - loss: 0.0165 - acc: 0.9957\n",
            "\n",
            "Epoch 00026: val_acc did not improve from 0.99619\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0214 - acc: 0.9935 - val_loss: 0.0164 - val_acc: 0.9957\n",
            "Epoch 27/30\n",
            "4200/4200 [==============================] - 0s 115us/sample - loss: 0.0168 - acc: 0.9960\n",
            "\n",
            "Epoch 00027: val_acc did not improve from 0.99619\n",
            "\n",
            "Epoch 00027: ReduceLROnPlateau reducing learning rate to 1.5625000742147677e-05.\n",
            "394/394 [==============================] - 16s 42ms/step - loss: 0.0193 - acc: 0.9939 - val_loss: 0.0167 - val_acc: 0.9960\n",
            "Epoch 28/30\n",
            "4200/4200 [==============================] - 1s 131us/sample - loss: 0.0163 - acc: 0.9962\n",
            "\n",
            "Epoch 00028: val_acc did not improve from 0.99619\n",
            "394/394 [==============================] - 17s 42ms/step - loss: 0.0180 - acc: 0.9945 - val_loss: 0.0163 - val_acc: 0.9962\n",
            "Epoch 29/30\n",
            "4200/4200 [==============================] - 1s 132us/sample - loss: 0.0167 - acc: 0.9962\n",
            "\n",
            "Epoch 00029: val_acc did not improve from 0.99619\n",
            "394/394 [==============================] - 17s 43ms/step - loss: 0.0192 - acc: 0.9945 - val_loss: 0.0166 - val_acc: 0.9962\n",
            "Epoch 30/30\n",
            "4200/4200 [==============================] - 1s 121us/sample - loss: 0.0168 - acc: 0.9962\n",
            "\n",
            "Epoch 00030: val_acc did not improve from 0.99619\n",
            "\n",
            "Epoch 00030: ReduceLROnPlateau reducing learning rate to 1e-05.\n",
            "394/394 [==============================] - 17s 43ms/step - loss: 0.0189 - acc: 0.9943 - val_loss: 0.0168 - val_acc: 0.9962\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "epS8ggCmO1H7"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "miePM2tefyzO"
      },
      "source": [
        "model.load_weights('mnist-cnn.hdf5')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wYhse8xmmdS5"
      },
      "source": [
        "## Визуализация качества обучения\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ty0iVxcXmgHt",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "outputId": "1500186c-ef42-43e0-cd46-5147dec98870"
      },
      "source": [
        "plt.plot(history.history['acc'], \n",
        "         label='Доля верных ответов на обучающем наборе')\n",
        "plt.plot(history.history['val_acc'], \n",
        "         label='Доля верных ответов на проверочном наборе')\n",
        "plt.xlabel('Эпоха обучения')\n",
        "plt.ylabel('Доля верных ответов')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYYAAAEHCAYAAACqbOGYAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzs3Xl8VNX5+PHPbJlkspMVkEUEDqsL\nooKKoriLX+uurVWr1tqiRa11RatV9Kt1ly6oWLXftlYravtTFMFdXBAQZTuKbLIkBLLOZPaZ3x/3\nzpBAQiaBYZKZ5/0ir8zcbZ4zN9zn3nPuPccSjUYRQgghYqypDkAIIUT3IolBCCFEK5IYhBBCtCKJ\nQQghRCuSGIQQQrQiiUEIIUQr9lQHsKdqapq6fL9tcbGLurrmvRlOyqVbmaQ83V+6lSndygNtl6ms\nLN/S3vJJTQxKqVHA68CjWusZO807AbgPCANvaq3vMac/CowDosBUrfXCZMVnt9uStemUSbcySXm6\nv3QrU7qVBzpfpqQlBqVULvAkML+dRZ4ATgY2AR8opV4ByoAhWuvxSqnhwLPA+GTFKIQQYlfJbGPw\nA6cBm3eeoZQaBNRqrX/QWkeAN4FJ5s9rAFrrlUCxUqogiTEKIYTYSdKuGLTWISCklGprdiVQ0+L9\nVuAAoBRY1GJ6jblsY3ufU1zs2qNLv7Ky/C6v212lW5mkPN1fupUp3coDnStTd2l8bq8RpN3GkZg9\naSQqK8unpqapy+t3R+lWJilP95duZUq38kDbZdpdokhVYtiMcSUQ09ecFthpeh9gyz6MSwghMl5K\nnmPQWq8DCpRSA5VSdmAyMNf8ORdAKTUG2Ky1Tq/ULYQQ3Vwy70o6FHgYGAgElVLnAv8B1mqtXwV+\nCfzTXPxfWutvgW+VUouUUguACDAlWfEJIUR3EolG8IX82K12smyOlMaSzMbnRcDE3cz/kDZuRdVa\n35KsmITINNFoFE+ome3eWrZ5txOIhHBY7TisDvO3HYfN0eK9+drmIMvqwGLpsJmvS8KRMI2BJhoD\nTdT7G2kMNNLgb6LBfB2IhBLajs1ipdhZSElOCaU5vYyf7BJyHa6EY985FmtTmMYm754UbxeRaARv\n0EdzyEtzqJnmkA9v0Hwd9NIc8uIN+YhiPK+bY8+hMCufAmcBhVkFFDrzKXQWUJiVT6GzkIKsfIqc\nhUlLIN2l8VmIbiccCeMN+cz/yN4W/4F3vI79tlmsFDoLKMiK/Qc2/jMXZBWQY8/e7UEqdqYYP2iY\n24xGozsO1rYdB+7YGaXdfG/BQp2vjm2+WrZ5a40k4DMSwXZvLb6wv0vlt1qsuOw5uBw5uOyu+Osc\ne06L6TkUul3UNjQRjIQIhoPG70jQ+AnHXofwh/3GAdjfhDvoiR8Ek8Fpy6I0p4TS7F6U5Bg/Fiw0\n+htpCBgJqCHQuE9i2Z0sqwOXw0Whs4DeuRW4HDkEwyEazRirmre2u67D6uC2w6+n3FW61+OSxCD2\numg0SmPAzXbf9h0HKm8t28z3TQE3ffIqGVQ4kAMKBzCocCDF2UUpi9cfDlDt2coWTzVbPNVUNVez\nxbOV7d7avXLAcFgd8bO/XnmFNDV7WiUVX4szxb0py5ZFaXYv4wCZ04uS7F447U5CkeBOB/DQLgfx\nQCTQ6gy31ltHKBreKzEVZRVQkVtmJs+dk6mRUJ02J9FoFK8/hNsXwuMN4jZ/POaP2xfEFwhid/mw\nOn1EszwErG680UYaQ/XUeLezyd3+vStOaxa59jz6ZPfCQQ62SA6WYDbWaDae5iCBYJhAKGr+DhMM\nRQiFd7+f7DYLWQ4rWXYbWQ4bWXZr/LfTmkOOPZscew65DpfxOivLXNZYx2G3EgiGqXcHaIj4qfN7\n2d7cQL2vgcZgE80RD2GrF4vDT4go7iYr5a493i27lmPvb1Jkikg0wjbvdjY0beKHpk1UN2+NJ4JA\nJLjL8hYsFDkL6Z1bwRZ3FT80beKDjZ8AUOws4oCigRxQOJBBhQPpk1eJ1dL63ghvyGdufzvbfK0T\nToO/kSxbVqsz21a/7TnkOFy47Nl4Qz4jAXiMBFDrq9vlwJznyGVQ4QDys/J2OUPesa0cXPZsXA4X\n4WjYOAttcUYarx4JNNLob2Rtw3rWNBif47A6cNlzKHIW4DLPFGOx55ifY7NYCUSChCKhNs/GQ5EQ\ngUiQSCRCcXZR/OBvVKmUkOfI3WtVQdFolGAk2OaVU25eFj5PCIfNgd3qwG6x4/aE2d4QZHtdgK21\nfqq3B9hW5ycQttNstVBlsWC1gtViwWKxYLV4sFibsVqqsVosBEJhPN4QkU4NPew0f0oA4yBdUACu\nwgBOl48o4G920Nxko6nRhjdopb7dbWXHt5HjtONy2o3fOTteZzttRKPg9YfiP83+EF5PCK8/TL0/\nRDiyc/x+86f9T26LBQf5uZVU5GZRkJdFUa6Til459CtJzgmVpaeP+bwnnehlyv3KLUWjUb6oWsxm\nT1WLOsx888ytgGy7s831ItEIW5u38UPTJjY0beSHpk380LQZX9jXarlsWzZlOb0oySmhJKeY0uwd\ndb/F2cU4rMa5SDAcZEPTJtY0rOP7hnWsaViHJ9jcajv7F/anODefTfVb2ebb3mp+S7kOF0XOQoJh\n88AV8hKJRhL6vvKz8ujtqqB3XgWVrgp655ZTmVtBflZeQut3RiQawVVoo6k+GP8eeqpINEqzeSbv\nj8KK1dvYVONm4zYPW7Z5CIRaf/85ThsVxS6sVgvRaJRIxNhGJBolGoVIxHgdiUSNKjS7jbwcB3k5\nDnJz7ORmO+LvjWnGb6fDSpM3SKM7QL0nQIPbT4MnQIM7QINnx+vYAdpus1CYm0VBbhaFuU4Kch0U\n5DpbTMtiwH5F+JoDuJw2HHvw8Gw0GiUQisSTRjAUIRCMEAiFW/0OhsIEQhHzyiRClsNGYW4WRXlG\njIV5WeS7HNisXb+JtJ3nGFLTiZ7oXur9DfzfypdZWfttu8tk25wUOPPjl/XZ9my2uKvZ6N6EPxyI\nL2fBQrmrjNH5w+mf35d++X3pnVdJrj2xRj+HzWFcIRQN5ESM/0TVzTWtEsXK2m+hFuwWGyU5vRhQ\n0C9eZ9yy/jjHnt1q29FoFH/YH2/Qaw62biPIsmXRO7eCytxy8hy5Xf4+O8tqsZLvzMNnTc7JSDQa\npdkfor7JT707QL3bb/w07XgdikRxxqo3HDacjlhVh1Gd4TSn26wWmv07qnBiVTdurzHN4wvS1jml\n3WalT6mLvqV57FeWS9+yXPYry6M435m0huzy4t3Pj0SjeLxBrFYLLqe9wzj21gmjxWLB6bDhdNgo\nymv7hKu7ksTQjUSjUbwhHw2BRrMqwqiSKM4u4pCy0disXT97WVT9FS/qV2kOeRlRojip/0Q8wWYa\nAk00+hupNxviYp+9tXlbfF0LFipzy+mX35f++fvRL78v++X1JnunA/KesFiMz6jMLefIPocD4A54\nKCh2EnJbd6lW6mhb2fbsvRpfqgWCYercfuqb/OZv42Bf1+TfkQDcAYKh9q+UbFYLNpuFQDCxq6m2\n1s/NtpPvctC7xGWcuWc76Ne7gGKXg/3K8ygryt6jM9tksFos5LuyUh1GjyKJYS+JRqOsqNW7bexq\nKRKN0Bhwt7pLojHQSLCd2/T+m1PCKQOO5/DKMZ1KEM3BZv717Wt8Wf0VWVYHF6qzOLrPuA7PmmK3\n8DWHvJTmlOC07fv/WHlZuZS48qnxpFd1X0tef4hGj3GQb/AEWlWD1LsD5tm/H4+v/ds3LRYoyM2i\nT2kuxXlOivKyKMpzUpTf4nWekzyXA6vFqMoJhiLx6gt/0KjS8JuNrIFghFA4gstpJzdWbZPtIMdp\na/PvJh2rZDOdJIY9FIlG+GbbCuasnccP7l06kk2IBQsFWXn0zq2gIHbPclYBBc4CCrLyWFn7HZ9u\n/oL/W/Uyc9bN5+SBx3FE5aHYO6inXlX7HX9b+RL1/gYGFvTn0hEXUO4qSygmm9VGcXYRxaTubqHu\nKByJ4AuE8fpD+PxhvAGjodEfDMfrioOhCCHzwGscgMPx91gt1NQ2mwf/AP7g7u/0cTntFOU7GViZ\nHz/YF+cbB/rY74LcztU/WyyWeFUSOal9kEp0T5IYuigSjbC0Zjlz1s1jk3sLFiyMrTiYsRUHJ1Tt\nYcFCflYeBVkF5Gfl7nadg8pGcfKA43hnw/t8svkL/rHqFd5a9y4nDziOcb3H7pIgAuEgr3//Ju9v\n/ASrxcrk/U/ipAHH7VFVVCZp8AT4fEU1y9Zsx+0N4g2E8flDeAOhLlfDtGSxQIEri4peOfHGRaOx\ncUcjaKzh0Zkl+0zse3JXUicvgSPRCEu2fsNb6+az2VMVTwinDJxEZW55V0NJWL2/gXfWv88nmz8n\nGAlR7CzipAHHMb7PYTisdhpttTz2ybNUN2+lwlXOpSMuYEBBv6THlSz7qprCHwiz+LsaPl1exYq1\ndfHbJB12KzlOOzlZNrLN3znm7Yo5WcYtizlOO06HcQ+6w24ly/ztMO9L3/HeSu+KQvzNfqzW5DTE\npkK6VSWlW3lA7kpKmkg0wuKtXzNn3XyqPNVYsHBE5aGcPPB4KhKsntkbipyFnDf0TE4acBzzNnzA\nR5s+41/fvsrb699lRC/F51VfEo5GmLjfUZx5wGkp73OlO4tEoqxYX8uny6pZ/G1NvFpn/975jB9Z\nyeHDKyjI3bttK0X5Tmp8gY4XFCKFJDF0IBKNsKh6KXPWzae6eStWi5VxlWM5eeDxSXkUPVGFzgLO\nGXIGJw6YaCSIjZ+yYMsX9Mop4ifqPIb1GpKy2LqzaDTKhmo3ny6v4vMV1TR4jIN0aWE2J43sx7iR\nFfQu2Xe3sArRHUli2A1vyMcLK/7F19uWY7VYObL3YZw04HjKXCWpDi2uICufswdP5sT+E1m2fRXH\nDzscb8Oe14P3dKFwhJp6L9W1Xqpqm9la10xVrfFT7zaSQW62nYmH9OXIkZUc0LcgaffZC9HTSGJo\nR5Wnmqe+eYHq5hqGFg/mJ8POpTSnV6rDald+Vh7je48lLysXLz23fjQSjdLkCVDb5Ke20YdjXR2N\njWZfQsY/wDjzj0J8WihkJIKquma21nqpafDu8gCWBehV4GSsKmP8yEpGH1CC3da97rkXojuQxNCG\nr2qW8cKKF/GHA0zqfwxnDjpV7ujpQCQSxRcIEdmpewOj2wPMbhCM16FQhDq3n7pGXzwB1Db62d7o\nM57O7aCjso4UuBwM7ltIRS8XFcU5VPZyUdHLRXlRjnGLphBityQxtBCJRvh/a+by9vp3ybI6uHzk\njzm04uBUh9VtRaNR1mxu5LPl1Xyxqpqm5l07zkuUBeMhrX7l+fQqcNIrP5teBU4qSvNocvuwYCFW\n02OxGLf7mv/AAjarldLCbCqKXbiy5c9aiD0h/4NMnmAzf13+D1bWfktpTglXjb6Evnm9Ux1Wt7Rl\nu4fPllfz+YpqttYbA5rkuxwcPLgUm9WCxWrBamnRc2bLXjStFmxWC0V5WfQqyKZXvpNeBdkU5zvb\nrNZJx1sHhejuJDEAG5s289Q3L7DdV8vIkmFcNuJCXI4kdHLegzW4/XyxciufLq9iXZVxoM5yWBk3\nsoLxIysZMbC42/WRI4TomoxPDAurlvD3Vf8mGAly6sBJnLb/iZ3qsC0dRaNRmrxBaht9bNzq4fOV\n1axYV0s0apz5jx5UwviRFRwypEyezBUiDWVsYghHwjy35GXe/PZdsm3ZXD76xxxYNjLVYe0TwVDY\naPRt8LHdbPTd3uijttF4X9vo26WXzkF9Chg/spLDhpXv9Ye+hBDdS1ITg1LqUWAcxh2FU7XWC1vM\nOxOYhjGc0Yta6xlKqTzgBaAYYyimu7XWbycjtn/q2Xy6ZSGVrnKuGn0JFfugO4tki0ajNDUH2LjV\nTa3ZK2ddk5+6Jh91TYF4F81ub/uNxPkuB31KcykpMBp/SwtzOGhwCRXFUrUmRKZIWmJQSh0LDNFa\nj1dKDQeeBcab86zADGAMsB2Yo5R6DfgRoLXWtyql+gDvAsOSEV/v3ApOPGACp/Q9scf327+xxs38\nRRv5fEU1vkD7vXVmZ9koznfSrzyPXvlOSgqz6VWQTUlBNiWFRgOwU27nFCLjJfOKYRLwGoDWeqVS\nqlgpVaC1bgRKgXqtdQ2AUmo+cAKwDTjQXL/YfJ+c4Pof06PveIlEoixdvY15izaycn0dACUFTg4a\nUoYry0ZRvpNe+WY3zWYXzTnOjK05FEJ0QjKPFJXAohbva8xpjebrfKXUEGAdcBzwvtb6AaXUZUqp\n1RiJ4fSOPqS42IV9D8ZlLSvL7/K6qeD2Bnnn8/X8v0/WsrXWGAP5oCGlnHH0IMaOqMSWRr12xvS0\nfdSRdCsPpF+Z0q080Lky7ctTyPgRS2sdVUpdilG91ACsBSxKqYuBDVrrU5RSBwGzgLG722hdXdsD\nxCeiJ10xbN7mYf6ijXyybAuBYIQsu5VjD+7DpEP3Y78yY+D62u3uHlWmREh5ur90K1O6lQfa7Xa7\n3eWTmRg2Y1whxPQB4uNeaq0/ACYAKKXux7hyOBZ425y/VCnVRyll01rvfpirNLZ8bS1vfb6e5et2\nVBcdf/R+TDiwD3ky+pYQIgmSmRjmAncDM5VSY4DNWut4ylJKzQEuBTzAGcDDQF/gCOAVpdQAwJ2p\nSWHjVjf/em81y9fWAjCsfxGTDu3HwUNK5EEyIURSJS0xaK0XKKUWKaUWABFgilLqMqBBa/0q8DRG\n8ogC92uttymlZgLPKqU+MGO7OlnxdVcNbj+vfrSGj77eQjQKIwcWc+7EwQyoTL86TyFE95TUNgat\n9S07TVraYt5sYPZOy7uB85MZU3flD4aZ+8UG3vxsA/5gmD6luZx/3GBGD+ol4wQIIfYpuX8xxSLR\nKJ8uq2L2h2uoa/JT4HJwwfGDmXBQb6kyEkKkhCSGFFq1vo5/vbua9dVNOOxWTh8/gNPGDZDnDYQQ\nKSVHoBTYVu/lH/O+46vVxvN740ZWcM4xB1BS2LOfwBZCpAdJDPtQJBrlvcWb+Pf73+MPhhm6XyEX\nTBrC/r0LUh2aEELESWLYR6rrmvnrm6v49od6crPtXHzScI4cVSkNy0KIbkcSQ5JFIlHe+fIHXv1w\nDYFQhDFDy/jpSUMpzHOmOjQhhGiTJIYk2rzNw1/fXMn3mxvJy3Fw+enDOWxYuVwlCCG6NUkMSRCO\nRHjr8w28/vFaQuEohw8v58cnDqXAJQPcCCG6P0kMe9kPW908++ZK1lc1UZibxU9PVowZWpbqsIQQ\nImGSGPait7/YwL/f/55wJMpRoyq5YNIQ6ehOCNHjSGLYSz76ejP/enc1RXlZXHbqMA48oDTVIQkh\nRJdIYtgLVq6v44W3NLnZdm768Rgqe8n4yEKInks649lDW7Z7+OPsbwC45uzRkhSEED2eJIY90Ngc\n4LGXl9LsD3HZqcNQ/YtTHZIQQuwxSQxdFAyFmfHKN9TU+5h85ECOGt071SEJIcReIYmhC6LRKM++\nuYrVmxo4fHg5Z03YP9UhCSHEXtOpxKCU6q+UGpqsYHqK1z9ey+crqhnct5ArTh8uTzILIdJKh4lB\nKfWQUqpGKTUFeA94TSn1++SH1j0tWLaF/3yyjrKibK45ZzQOuy3VIQkhxF6VyBXDscBw4CZgpPlz\nYjKD6q70hjr++uYqXE471513kHRxIYRIS4kkhiat9TZgjdbap7WOAt4kx9XtVNc2M8O8LXXKWaPo\nXZKb4oiEECI5EnnAbYRS6gVguPnbgnEF0SGl1KPAOCAKTNVaL2wx70xgGuAHXtRazzCn/wTj6iQE\n3Km1fqMT5UkKtzfIoy8vxeML8bNThzF8YK9UhySEEEmTSGK42fw9v8W0eR2tpJQ6FhiitR6vlBoO\nPAuMN+dZgRnAGGA7MEcp9RrGlcjvgEOBPOBuIKWJIRSOMOOVr9la5+W0cQOYcFCfVIYjhBBJ12Fi\n0Fo/r5QaiHEQjwKLtNYbEtj2JOA1cxsrlVLFSqkCrXUjUArUa61rAJRS84ETMBLDPK11E9AEXNWF\nMu1VS1dv59uNDYwZWsbZxw5KdThCCJF0HSYGpdTVGFcNCzHaJB5WSt2ttX6+g1UrgUUt3teY0xrN\n1/lKqSHAOuA44H1zOZdS6j9AMXCX1rrllcouiotd2PfgzqCysvzdzg8buYsTDh9ARXnPGJu5ozL1\nNFKe7i/dypRu5YHOlSmRqqSfAsO11j4ApVQuRlVSR4lhZ/Gb/bXWUaXUpRjVSw3A2hbzS4CzgAHA\ne0qpAWaDd5vq6po7GcYOZWX51NQ07XaZqm1uAMLBUIfLdgeJlKknkfJ0f+lWpnQrD7Rdpt0likTu\nSgrFkgKA1toDBBJYbzPGFUJMH2BLi+18oLWeoLWejJEc1gHVwAKtdUhr/T1GdVJKR7nxeEMA5OZI\nR7RCiMyQyNHuB6XUk8A75vuTgUTaGOZiNB7PVEqNATabbQcAKKXmAJcCHuAM4GHACTynlHoAoyop\nD9iWYFmSwu0NApCXLQPuCCEyQyKJ4Srg18DPMBqfPwOe7GglrfUCpdQipdQCIAJMUUpdBjRorV8F\nnsZIHlHgfvNZCZRS/zY/A+BarXWkc0Xauzw+IzHkykhsQogMkUhi+KXW+n+7snGt9S07TVraYt5s\nYHYb68wEZnbl85LB4w1is1rIzpKuL4QQmSGRNobTkx5FN+b2hcjNtktHeUKIjJHIFcMYpdSHO0/U\nWh+ThHi6HY83SL5LqpGEEJkjkcSwFrgj2YF0R5FoFI8vSGWJDNcphMgciSSGeq31B0mPpBvy+UNE\no3JHkhAisyTSxnC2UqpEKTUW4v0cZYTYraryDIMQIpMkcpA/GeP20efM908qpa5IWkTdiMdnPtwm\nVwxCiAySSGL4DXAQRv9GADfSDTq32xc8sYfb5BkGIUQGSSQxNGit4x0Saa29JNYlRo+3oypJEoMQ\nInMkUnm+zezwLsfs2uICdlw9pLUdVUnSxiCEyByJXDFcDRwG5APPADnAlckMqrtwS1WSECIDJTJQ\nTz1wDYBSyglYzeqktBdrY5DGZyFEJunwikEpdYNS6kul1FnAeozeVq9OfmipF+tAT64YhBCZJJGq\npB9jVCc9DowC+gKXJTGmbsMtYzEIITJQIomhUWv9JbBGa71Na+0Huj5sWg/i8Rk9qzod0rOqECJz\nJHIqPEgp9XtgoPnbAuyf3LC6B7c3SF6OQ3pWFUJklEQSw193+g07noJOax5vkMI8Z6rDEEKIfSqR\nxODWWj+c9Ei6mUg0SrMvRN/S3FSHIoQQ+5QM1NOOZl+IKPLUsxAi88hAPe2Ij/UszzAIITKMDNTT\nDnnqWQiRqZI6UI9S6lFgHBAFpmqtF7aYdyYwDfADL2qtZ7SYlwMsA+7RWj/Xlc/eUx55hkEIkaES\nOeqdrZTKBRTGAV637G21PUqpY4EhWuvxSqnhwLPAeHOeFZgBjAG2A3OUUq9prTeaq08Dajtdmr0o\nXpUkVwxCiAyTSOPzscBq4C/A08C3SqlTE1hvEvAagNZ6JVCslCow55ViXInUaK0jwHzgBACl1DBg\nBPBGZwqyt8WrkqSNQQiRYRJJDL8FDtRaH661HgscTmJtDpW07p67xpwWe52vlBqilHIAxwEV5ryH\ngRsSCT6ZdnSgJ1VJQojMkshRL6C1jh/gtdablVL+LnxW/PFhrXXUHOPhWaABo4HbopS6BPhUa71W\nKZXQRouLXdjtXe+yoqwsv83pETPcfn2L2l2mu+pp8XZEytP9pVuZ0q080LkyJfSAm1LqN8A75vuT\ngaYE1tvMjisEgD7Altgbs0F7AoBS6n5gHXAWRhcck4H9AL9SaqPWel57H1JX1/Vum8rK8qmpabso\n28ztBryBdpfpjnZXpp5IytP9pVuZ0q080HaZdpcoEkkMVwC/By7GaHz+1JzWkbnA3cBMc+S3zVrr\neGRKqTnApYAHOAN4WGv9Yov5dwHrdpcUksktjc9CiAyVyEA9WzG63e4UrfUCpdQipdQCIAJMUUpd\nhjGG9KsYDdlzMZLN/VrrbZ39jGTyeIPYbVay7Ik0wwghRPpIasuq1vqWnSYtbTFvNjB7N+velaSw\nEuLxhsjLsUvPqkKIjCOnw+1we4NSjSSEyEiJDO3Zp41pByUnnO4hEonS7A9JP0lCiIyUyBXDB0qp\nH4PxxLJSahrwj+SGlVrNfqM7DOknSQiRiRJJDOOBE5VSrwAfAC7g0KRGlWJuebhNCJHBOkwM5t1C\nbwPDgSLgLa21L9mBpZJHelYVQmSwRNoY3gYmA0dhPG9wh1Lq6WQHlkrxKwZJDEKIDJRIXclfzOcO\nAOowqpV+mcSYUm7HID1SlSSEyDyJHPmKlVKX7zStK30l9RixsRikKkkIkYkSSQwT2pgWxegALy3t\naHyWxCCEyDyJdInxMwCllAU4zZw8J5lBpVqsKkmuGIQQmagzleiPAEcAjcCFwE+TElE3II3PQohM\n1pkuMQ4DjtZanwKUJSmebsHjM8d7lsZnIUQG6vDIZ47PDBAEouZ7b1KjSjGPN0iW3UqWo+sDAAkh\nRE+VyClxCKOx2QKEzWnRpEXUDUgHekKITJZI43PG9cDq8YUoKchOdRhCCJESiVQl/b6t6VrrO/d+\nOKkXjkTw+o2xGIQQIhMlcjUQNn8ubvE6vNs1erAdDc9SlSSEyEyJVCXdDaCUmhh7nc48cquqECLD\ndab9IK0bnGNi3WHkSlWSECJDJdLG8ANGUihXSm3AuDspqrXun+zgUsEtTz0LITJcIqfFR3d140qp\nR4FxGIllqtZ6YYt5ZwLTMDrke1FrPcOc/iBG/0x24H6t9eyufn5XeKSfJCFEhkskMWwHLgNGYBzg\nvwZe6GglpdSxwBCt9Xil1HCMTvfGm/OswAxgjLn9OUqp14AhwChznRJgCSCJQQgh9qFE2hheBA4H\nlgLfYJzN/zOB9SYBrwForVdidN9dYM4rBeq11jVa6wgwHzgB+BA4z1ymHshVSu3Tx4/dvliX29LG\nIITITAmNx6C1ntzi/V+UUh8lsF4lsKjF+xpzWqP5Ol8pNQRYBxwHvK+1DgMec/krgDfNafuM3JUk\nhMh0iSSGtUqpSq11FYBSqgL78/fqAAAgAElEQVT4rgufZYm90FpHlVKXYlQvNQBrW8432x+uAE7q\naKPFxS7s9q5fVJSV5bd6HzLvvRqwXzG9eujTzzuXqaeT8nR/6VamdCsPdK5MiSSGAcD3SqnlGFVP\nw4AVSqkPAbTWx7Sz3maMK4SYPsCW2But9QeYgwAppe7HuHJAKXUycDtwita6oaPg6uqaEyhC28rK\n8qmpaWo1bXu9sT2fx0+NP9jlbadKW2XqyaQ83V+6lSndygNtl2l3iSKRxDCti7HMBe4GZiqlxgCb\ntdbxyJRSc4BLMaqOzgAeVkoVAn8ATtBa13bxc/eIxxvC6bDhsGdcF1FCCAEk0PhsntnnAaPN1xuB\nD7XWH5jv21tvAbBIKbUAeAKYopS6TCl1lrnI0xjJ42OM21K3ARdgNEy/pJR63/zZp89LeHxBebhN\nCJHREnnA7QGM20gHYNxi+mOgHLi2o3W11rfsNGlpi3mz2elWVK31U8BTHUadRG5vkLKinFSGIIQQ\nKZVIfcmxWuuzMe4mQmt9D8bzB2knFI7gC4TlqWchREZLJDHERmuLApjPFaRlXYsM6SmEEIklhgVK\nqb8CfZRSNwAfAO8nNaoUiT3DIFcMQohMlkjj8+3AGxhPJ+8HPKK1vjnZgaWCxycPtwkhRKL3ZM7T\nWk8BXgXcSilLRyv0RG7pJ0kIIRK6K+kfwAlKqVnAsRiN0OcBP09ybPucjMUghBCJNSLvD/TG6AZj\nsNY6opT6OLlhpUbsiiFPrhiEEBksobuSzI7s1ps9oQIEkhhTykgbgxBCJHbFMMbsF+lA87cFGJXc\nsFIjfruqJAYhRAZLJDGcmfQouokdVUnSxiCEyFwdHgF31x9SupGxGIQQIvHbVTOCxxvEmWXDbpOv\nRQiRueQI2ILHF5Q7koQQGS+R5xjaHIhHa/3h3g8ntdy+EBXF0rOqECKzJdLK+h/ga3bcjbQMo0O9\n9kZu65FC4Qj+QFieehZCZLxEEsMSrfVxAEqp92Kv0410oCeEEIZE2hiyAZRSVmC4UupnyQ0pNdxy\nR5IQQgCJJYZ1Sqn5wEcY1UoTlVJ/Tm5Y+17s4bY86SdJCJHhEjkKXgKcAvgwelmNKqV2HrKzx/NI\nz6pCCAEklhgmAB7z9XFKKYAvkhZRiriljUEIIYDEEsMrwBKMu5JiosC7Ha2olHoUGGcuP1VrvbDF\nvDOBaYAfeFFrPaOjdZJpx7CekhiEEJktkcTwldb6+M5uWCl1LDBEaz1eKTUceBYYb86zAjOAMcB2\nYI5S6jXggPbWSbYdjc/SxiCEyGyJND7nKaX6d2HUtknAawBa65VAsVKqwJxXCtRrrWvMrrznAyd0\nsE5SxbrclqokIUSmS+T0uBp4C+itlFoLfArMMA/cu1MJLGrxvsac1mi+zldKDQHWAccB73ewTlJJ\n47MQQhgS6V11MoB5xTAQ44nnfwMjO/lZ8SsO886mSzGqihqAtbRuw9hlnfYUF7uw222dDGWHsrJ8\nAALhKAAD+xVj6+Gd6MXKlC6kPN1fupUp3coDnStTZyrUizGqf55XSm1OYPnNGGf7MX2ALbE3Znfe\nEwCUUvdjXDlk726dttTVNScSe5vKyvKpqWkyttPoI8dpo7bW08Fa3VvLMqUDKU/3l25lSrfyQNtl\n2l2i6PDUWCl1lFLqe0AD3ymlVgH1CcQyFzjX3MYYYLPWOh6ZUmqOUqpcKZULnAHM62idZHJ7g1KN\nJIQQJHbFcD9wptZ6GYBS6hDgcTroRE9rvUAptUgptQCIAFOUUpcBDVrrV4GnMRJBFLhfa70N2Lbz\nOl0sV6d5fEF6l+Tuq48TQohuK5HEEI4lBQCt9RKlVCiRjWutd35CemmLebOB2Qmsk3TBUJhAMCJD\negohBIklhohS6myMqh4wuscIJy+kfc/tNR9uk1tVhRAioecYrgauAtZj3D10qTktbcSeYZDEIIQQ\nid2u+h3GVUKcUurA2Mhu6TCSmzzDIIQQO7SbGJRSl+xmvVswurJIi5HcYlVJ8tSzEELs/orhQeCd\nduYVa61HJCGelIhXJUnjsxBC7DYxrNRa/7StGUqp95IUT0rIsJ5CCLHD7hJDuVLqeGAjsE5rHWgx\nL5rcsPYttzQ+CyFE3O4Sw9sYD5gNAAYppRoxOribA+Tsg9j2mR2Nz1KVJIQQ7R4JtdY3tHyvlKoE\njgQuBA5TSu0PWLTWa5IbYvJ5pPFZCCHiEj5F1lpXYTypPFsp9SLGCG5RYFCSYttnYo3PLrliEEKI\nTvWuGqe1vnBvB5JKbm8Ql9OOzdqzu9sWQoi9QY6EGOM9y5CeQghhkMSAdLkthBAtZXxiCATDBEMR\naXgWQghTxicGj096VhVCiJYyPjG4Y089S1WSEEIAkhh2PNwmjc9CCAFIYohfMUhVkhBCGDI+McQe\nbpOqJCGEMEhiiDc+S1WSEEJAF598TpRS6lFgHEbXGVO11gtbzJsCXIwxfvSXWuvrlFJ9gGcBJ2AD\nrtdaL0pmjFKVJIQQrSXtikEpdSwwRGs9HrgCeKLFvALgt8AErfXRwAil1DjgBuBVrfVxGKPETU9W\nfDEeuStJCCFaSWZV0iTgNQCt9Uqg2EwIAAHzJ08pZQdcQC2wDSgxlyk23yeVXDEIIURryUwMlUBN\ni/c15jS01j7gbmANsB74XGv9LfAocIFSahXwNHBnEuMDjDYGC+ByShuDEEJAktsYdmKJvTCvHG4D\nhgKNwLtKqYOAM4CXtNbTlVKTgYeAs3e30eJiF3a7rctB+YNhcnMcVFQUdLxwD1FWlp/qEPYqKU/3\nl25lSrfyQOfKlMzEsBnzCsHUB9hivh4OrNFabwNQSn0EHAocBUwzl3kH+FNHH1JX19zlAMvK8ql3\n+3Fl26mpaerydrqTsrL8tCkLSHl6gnQrU7qVB9ou0+4SRTKrkuYC5wIopcYAm7XWscjWAcOVUrEh\nQscC3wGrgSPMaYeZ05ImGo3i8YakZ1UhhGghaYlBa70AWKSUWoBxR9IUpdRlSqmztNbVwB+A95RS\nHwNLtNYfAfcBk5VS7wP3AtcnKz4AfyBMKCw9qwqxr1RXV/H++/NZu7bHjwjcJd9/v5o5c/4fHo87\n1aHsVlLbGLTWt+w0aWmLeTOBmTstvwU4LZkxtdTULP0kdQdXX305VquVUChEOBxm1qy/pToksZd5\nPG7uvfcumpubGTpUMXBgjx8RuFO+/341Dz10H0VFxQwePBSLxdLxSimU0UdEtzcAIFVJKVZXV8uL\nL75KVdUWpk27OdXhiCSYMeMxrr76GgYMGJjqUPa5UCjEM8/8mYceeoLc3LxUh5OQjE4MjR4jMUhV\nUuqEw2EsFssuZ1But5vp0+/C72/G6/Vz3XW/RalhNDU1ce65kxkyRFFbu50jj5zAlClTeeCBe1mz\n5nuysrJYu/Z73nhjfqvtnXvuGZSXVxCNRigpKeOee/6X7du3cf/99xAKBbFardx88x1UVlbyox+d\nysSJx7Ny5QrKysr43e+m8847b7Fmzfdcc811bNmymWnTbmbWrL9xzTVXccMNNzFo0OBWn/XCC//i\ntttu5Be/mMLw4SO5/vopXH75VRx//NHx5RYv/pKnnvoTdrudsrJybr31Th577A+sXv0da9euQalh\nTJ58JosWLUTrlRQUFBIKhbj33gcoLu7Fgw9OZ/PmTYRCIa688mp69+7DfffdTVXVFux2O6WlZdxz\nzwO8885bzJ8/F4AJE47l4osvY9asmbzzzluUlpbh9Xq57bbfccABO8rw5pv/bbO8c+fO4d///hc2\nm5WBAw/g5ptvb/U9b91azf33/55g0PhOb7nlDiore+N2u3njjddZsWI5++9/AL/+9Q386ldXctdd\n0+nbdz+2bq3mllt+w7nnXhD/3JYxPPnkI6xYsZxAIMCPfnQOZ5zxI2bNmklRURGnn34mt99+E83N\nHux2O7fccgd9++7H6adP4o035rNmzWoeeeRBZsx4ik8++Yj335/P7bffxdKlS5g584/Y7XbKyyu4\n+eZpbNtWwzHH/Ijrr7+Js846l+rqKs499wxuvfVOTjvtjC59P1qvYsCA/Xnoof+lurqKSZNO4pxz\nzm/zu7JYLNxxxy3069efH37YwLBhI7jxxlvYtq2mzb/VZMnoxOCOVSVlZ/TXAMBL765m4aqte3Wb\nhw0r5/zjB+92mZqaGkpLy3aZ/vLL/2TkyFFcf/21fPTR5zz55CPMmPEUVVVbOPjgMTzwwKPx/5yr\nV3/L+vXreOqp5wA4/fRJbX7WQw89QU5ODhdddA4ej4enn/4zF174Ew477Ag+/fRjnn/+mfjB4YQT\nTuG6637L7bf/ls8++6RL5b/hhpt4+OEHOe+8C6ms7MPo0QftFM/9PProH6moqOSRR4wD+E033R4/\n0MyY8RQAixYt5Be/uIajjprA9Ol38d13moaGBkpKSrn11jupr69n6tSref75F5kx46n4AfOccy5g\n8+ZNzJnzX55++gUArrrqUo477gQAzjvvQs455wJmzZrJ0qVLWiWG9ni9Xh5++Eny8/OZMuXnfP/9\nasrKDonPf+aZvzB58plMmnQS7703j2effYopU6ayZMmX/OQnT/CrX03l97+/g3nz3uaUU05j/vy5\nXHLJ5Xz88YeccMLJbX6m3++nsrIP1157A36/j/PP/xFnnPGj+Pz33ptHUVEhDz/8BB9//AGzZs3k\nzjvv6bAsjz32Bx5//M8UFBTypz89znvvzWP06IMYPnw4ixZ9wVlnncunn37MAQcM6XBbu/t+qqq2\n8MUXn/LYY3/G4XBw5ZU/Zfz4o3juuWd2+a6uuOIXrF79LdOnP0h5eQU///mlfPfdt/z73y+2+bea\nLBl9RGxsliuGVNu8eSN9+vTdZfqqVSu45JIrABg2bAQbN/4AwJYtm+nTZ79Wy2ZlOfH7/UQiEazW\n9u+nuPHGX1NXV8u4cePJy8tj2bKv2bBhPc8/P4tIJEJRUTEAOTk5jBo1GoCRIw9kw4b1FBf34t13\n32HVqhUEAoFW273vvt/jcDgYM2YsP//5L+PT+/cfyKhRo3nyyUfiB+aYxsYGLBYLFRXGWd+YMWP5\n6qvF7cY+c+YMnnvuaSwWK2PGHMaTTz7C0qVL+PrrrwDj4BkMBnE4Wv8tf/edZuTI0djtxn/10aMP\nYvXqbwF4+eUXeeedt2lsbOCPf3xml89sq7wFBQXceutvAFi/fi0NDfWt1tF6JVdffU28TM899wyB\nQIC8vHyGDRsBwPjxR7F8+TJ+9rMrueGGa7nkkstZsOAjbr55Gl9//RVut3HzYiDgB8DpdNLY2MDV\nV1+O3W6nvr4u/nkvv/wioVCIiy76abx8Tz/953a/x5ja2u1s3PgDt932WwB8Ph+FhUUA5ObmEgqF\n8Pv9fPnlFxx66GFtbiPR7ycYDKDUcAoKjGelDjroEL777ts2vyuAfv36x/8uRowYyYYN69v9W02W\njE4MbjMxSHcYcP7xgzs8u0+GlSuXM2jQAbtMt1gsRKPR+PtIJALApk0b6devf6tlBwwYyCGHjOGc\ncybTt2/rpNFS7Irh+uun8N13GrvdwT33PEBpaWmr5WKfZYjGq7mOP/7EVlUHMbfddicDBuzPz39+\nCSeeeEqrbdXWbsfhcNDU1Bg/MJglbFW+YDCIxdJ+UotdMTz33DO8/vor2O0OLrnk8l0+b1ftf07s\niuGtt97ghReeZerU37Rac+fyBoNBHnnkQZ577h+UlJRy003X7fbzgsEQFouV/PyCeGIC4sm7sLCI\n8vJyVq5cTiQSpaysnMMOG8frr8/mxht/DcDAgYNYsmQRixd/yYwZT2G32znxxAnxbZ133oV4PJ74\nPgqHwx18Hwa73UFpaVn8qixmy5bNABx88BgWLvyMYDCIy+VqcxuJfj/5+QXYbDsewt1x8rLrdwW0\n2l/RqPF/ob2/1WTJ6G6343clSeNzynz44fsceujhu0wfNmwES5Z8CcCyZd+w//5G8lixYhnDhg3f\nZflgMMiUKVN3+Y++M4vFQn5+AT6fjxEjRvHRR+8DRnXN3LlvAcbZ96pVK+OfncgdNDabDZcrl0hk\nx4Hpm2+W4na7ufXW3/HYY39otXxBQQEWi4WqqioAvvpqcZvl2llBQWE89o8//gAwGu9nzvxjm8sP\nHapYtuwbQqEQoVCIFSuWM3SoarVMYaGxzY40N3uw2WyUlJRSXV3FqlUrCYVCrZYZPnwEixd/aZZp\nEcOGDcflclFYWMTWrdUALFmyCKWGAXDyyafxyCMPcNxxk+LfyxNP/IWHHnqC448/EYCGhnrKyyuw\n2+18/PEHhMMRgsFg/DOHDRvBsmVfA7B8+TcMGdK6fG2JJenYbbP//veLrF6947Gp8eOP5uWXX+Tg\ngw/tcFsdfT+jRx+E1qvi+8CIcWib3xUYJz/btm0jEomwYsUyBg7cv92/1WTJ6CuGpnjjc0Z/DSkz\nbdpNrFy5nMcffwiAQCDAhg3rmTVrJhdddDH33Xc3l1xyCX5/kBtuuJmXXvoHHo+b4cNHttrO/Pnv\n4PP52q2jjrnxxl9jsVjo23c/Ro06MN5YO2/e21gsFm677XeAcaCcO/dNnnjiYUpKSjn88HHMnTun\n3e0+/vjD2Gw2+vcf0KoR+oknHuHuu++jT5++FBQU8u6787jggrPi82+6aRp33307NpuNvn33Y9Kk\nk9r9jJkzZ/DPf/4Nm83OXXfdS35+AYsXL+Tqqy8nHA5z+eVXtble7959+J//OYtrr72KSCTKGWec\nSWVlb8CohnnvvflEIpGE6qsLC4s47LAjuPLKSxg8eAg//vFPeeKJRzjppInxZa688mruv/8e/vvf\n17DbHdx66x0AXHXVFH73u9uw2Wz06dM3fqVz1FHH8MAD05k4se12IYCxY4/g739/nmuuuYoJE47l\nyCOP5qGH7qe8vAKAww47gg8/fI9rrrkKm80WL4vH4+GGG67F621m3bq13HDDtdTX11Fbu53Vq7/j\nllvu5L777sbhMK4e/ud/zmb7dqPfzgEDBlJdXc348UfFG+67+v0899w/OOWU07n22l8QiUQ49dQz\n6NOnb5vfVSgUon//ATz11B9Zu3YNo0cfyKBBB3DFFVe1+beaLJaWly09UU1NU5cLMPO/K/h8eRVP\nXjchba4aetLj/LG7d1peqi9e/CWzZ7/Evfc+CKSmPLG7WZKhJ+2fRO1JmRYv/pI33/wv06bdvZej\nat+sWTM55JBDGTNmbJvzU7mPWt7htDe10yVGuw9TZPSpclNzAIsFcqRnVSH2uVmzZvL5558yffqD\nqQ5F7CSjrxh+99eF1DX6eGLqhI4X7iHS7YxUytP9pVuZ0q080PkrhoxufHY3B+QZBiGE2EnGJoZo\nNEpTc0CeYRBCiJ1kbGLwB8OEwlF5hkEIIXaSsYkhPtZzmtyNJIQQe0vGVrB7vMaDOdLlthAi1dxu\nN8uWfY3dbmfs2F0f+NzXMvao6PEZVwzSxpB6Mh6DyGR/+tPjfP31UgYPHsrRRx+T6nCADE4MUpXU\nfch4DCJTvf76bA44YAi/+tXUVIfSSsYmBo9PqpK6AxmPIb3GY2i53dj+Oeec89scY6Ct8Qj69OnL\nsccewejRB+H3+xk16kCmTv0Na9eu4dFHH8RiseByubjttrtwu5sS3q7FYomXob39F+uu/Oqrr+RP\nf3qcb75ZSigU5pxzzueUU05n+vS7+PLLL5g9+w0sFgv/+7/3sGjRQl5++T+7/K3FnuifPv0uJk6c\nxMEHH8Ldd0/D6/Xi8/m4/vrfMmLEKBYvXsi4cUcxdeovyc7O5sYbb6WsrJyXXvrnLvts+vS7yMnJ\nYf369TQ01HPbbXcydOgwXnnlJebNewuLxcqECRO56KKL9+B/pCFjj4qxKwapSjLMXv3/WLL1m726\nzUPKR3P24Mm7XUbGY0iv8Rhabje2f4A2xxh4+eV/7jIewbRpd5OXl8eMGU/h9/u56KKzmTr1Nzz2\n2B/47W9vo1+//sye/TKzZ7/ESSedmvB2r7jiFwnvt4ULF7Jmzff8+c/P4vV6ufTSCznmmIkAVFRU\novUqlBpGTU1Nwtvcvn07kyf/iGOOmciiRQv5+9+fZ/r0P7Blyxaampp4/PE/85//vMrTT/+Zyy67\nst19Fg6HefzxP/Hxxx/y178+w7XXXs/778/nT3+aBcAvf3kFxx13wh4P4pOxicEjVUndgozHkF7j\nMbSnrTEG2huPwO12c801V1FVtYXzzrsIgBUrlvPAA/cCRk+6w4eP6NR2nU4nHo+baDTa5v7Lzs6m\nqmoLF110McuWLePgg8cAxt/CwIGD+OEH4+9v3Lgj+eyzT7BYLAwZMpT169e2Wd4bb/w1VquVDRvW\nM3HiJHr1KuH555/hn//8G8FgkOzsbADq6+viPcseeeQEXnnlpd3us1jD9KhRB/KXvzzJypXL2bjx\nB6691kh8zc0eqqo2d+/EoJR6FBgHRIGpWuuFLeZNAS4GwsCXWuvrzOk3mtODwK9arrM3SeNza2cP\nntzh2X0yyHgMhvQZj6FtbY0x0N54BLErhlAoxBVXXMwpp5xOdnY2Tz45s1WV45YtmxPebq9eJRxy\nyFiuueaqXU5EbrvtznhVEsT+9nbMN6oajc8dNepAXnzx/wBjwKF5895us7wPPfREvCoJ4KWX/kFp\naTl33HEPq1atYMaMx4DWYzXEPmN3+ywSibb4Po1xGsaPP4qbbmpdpbenkvYcg1LqWGCI1no8cAXw\nRIt5BcBvgQla66OBEUqpcUqpkcCFwFjgF0DSjlTx21XliiGlZDyG9BqPoT1tjTHQ3ngEMXa7nays\nLMLhEIMHD+GzzxYAMG/e23z55Red3u7NN9/OH//4dLtdlMeMGjWKJUsWmWVuZtOmjey3n3EyYrVa\nKSwsZNWqFYwadWBCZQdjTInYScsHH7wX/97Gjj2cJUuMK8XYOBW722dff70EgOXLv2bgwP1RajiL\nFy/C5/MRjUZ57LGH8Ps73pcdSeYVwyTgNQCt9UqlVLFSqkBr3QgEzJ88pZQbcAG1wFnAS1rrELDY\n/EkKt884C8hx2jpeWCSFjMeQfuMxtKetMQbaG7shVpUUCoUYO/YISkvLmDr1Rh58cDp///vzZGU5\nueuue/F4PJ3abqLGjh2LUsOYMuXnhEIhrr76GnJycuLzDztsHJ99tqDVqGwdOeWU07n33t/x3nvz\nOOec85k3by5vvPEfLrjgx9xzz53mVaCdW265g/Lyinb3WSAQ4KabrqO6upo777yHyspKzj//IqZM\n+TlWq5VjjpmI05ndqfK2JWm9qyqlngLe0Fq/br7/CLhCa/2t+f4nwJOAF3hRa/0bpdSfMaqWBgMO\n4Aat9dLdfU5Xe1e97/8W0dQc5P6rxnVl9W6rJ/UMKeMxpIeOypSsMQb25dgF3UHsDqejjup8b9Dd\neTyGeBBmVdJtwFCgEXhXKXWQuYwNOBU4CngGaHskblNxsQu7vfNn/bdeejihcISysrxOr9vdlZXl\npzqEhNhsVkpL88jNzY1PKypy4XQ6WpVhX5fHYrEk9TN7yv7pjN2Vye/PxW637vVyJ2u70D33UXa2\ng8LCnC7H1pn1knnFcBewRWs903y/BjhIa92klDoCmKa1PsOcdz/wHTAAWKW1/qc5vUZrveu9jC3s\nyXgM3fXMYE+kW5mkPN1fupUp3coD3Ws8hrnAuQBKqTHAZq11LLJ1wHClVKzibixGYpgDnGyuMwz4\nIYnxCSGEaEPSqpK01guUUouUUguACDBFKXUZ0KC1flUp9QfgPaVUCFigtf4IQCl1qlLqU3MzU5IV\nnxBCiLZl9NCemXLJ2JNJebq/dCtTupUHuldVkhBCiB5IEoMQQohWJDEIIYRoRRKDEEKIVnp847MQ\nQoi9S64YhBBCtCKJQQghRCuSGIQQQrQiiUEIIUQrkhiEEEK0IolBCCFEK5IYhBBCtLIvB+rpVpRS\njwLjgCgwVWu9MMUhdZlSaiLwMrDcnPSN1vra1EXUdUqpUcDrwKNa6xlKqX7A3zAGcNoC/FRr7U9l\njJ3VRpmeAw4FtpuL/EFr/Uaq4usspdSDwASM48f9wEJ68D5qozz/Q8/ePy7gOaACyAbuAZbSiX2U\nkVcMSqljgSFa6/HAFcATKQ5pb/hAaz3R/OmpSSEXY7jXluNq/h74o9Z6ArAauDwVsXVVO2UCuLXF\n/upJB53jgFHm/51TgMfowfuonfJAD90/pjOAL7XWxwLnA4/QyX2UkYkBmAS8BqC1XgkUm8ONitTy\nA6cBm1tMmwj8x3z9X+CEfRzTnmqrTD3Zh8B55ut6IJeevY/aKk/nxwruRrTW/9JaP2i+7QdspJP7\nKFOrkiqBRS3e15jTGlMTzl4xQin1H6AXcLfW+p1UB9RZWusQEFJKtZyc2+KSdyvQe58HtgfaKRPA\nNUqpGzDKdI3Wets+D64LtNZhwGO+vQJ4Ezi5p+6jdsoTpofun5bMQdL2AyYD8zqzjzL1imFn7Q5Y\n0UN8B9wNnAlcCsxSSmWlNqSk6On7KeZvwC1a6+OBr4C7UhtO5ymlzsQ4kF6z06weuY92Kk+P3z8A\nWusjMdpL/o/W+6XDfZSpiWEzxhVCTB+MBpkeSWu9ybx8jGqtvweqgL6pjmsvcbcYG7wvaVAlo7We\nr7X+ynz7H2B0KuPpLKXUycDtwKla6wZ6+D7auTxpsH8ONW/awCyHHWjqzD7K1MQwFzgXQCk1Btis\nte6xY/kppX6ilLrRfF2JcTfCptRGtdfMA84xX58DvJXCWPYKpdQrSqlB5tuJwLIUhtMpSqlC4A/A\nZK11rTm5x+6jtsrTk/eP6RjgNwBKqQogj07uo4ztdlsp9b8YX2AEmKK1XprikLpMKZUP/AMoArIw\n2hjeTG1UnaeUOhR4GBgIBDGS208wbr3LBtYDP9NaB1MUYqe1U6YngVuAZsCNUaatqYqxM5RSV2FU\nrXzbYvKlwDP0wH3UToLHCQUAAARUSURBVHn+ilGl1OP2D4B5ZTALo+E5B6Oa+UvgBRLcRxmbGIQQ\nQrQtU6uShBBCtEMSgxBCiFYkMQghhGhFEoMQQohWMvXJZyH2KaXUSGAU8LHWOl1uJRZpShKD6LGU\nUhcC12HcBpoNaOBGrXVVSgNrQSl1Ekbvllsx7of/JLURCdExSQyiR1JKDQZuAs6InYErpS4GXgXG\npzK2GKXU/sAvgGO11r5UxyNEouQ5BpFWlFLvYDzJ2gd4AFhpzhqHUZWzFqNr5UMxxuJ4V2t9h9lh\n2nCt9c+V0ePd68BhwEHmdvyAC/iV1nrxTp9ZgfFAUR7ghP/f3v2ESF2HcRx/L3pQEIRFECNlxeBD\npwiMCHXtYIoHD/0jyAwJTOzink1YS8EUD4XmWocQZE/SGlTsIbCZUpCOlcbHhJUIiiA6qG2lVofn\nGZoZ3FkjyCafF8xhfvP7fvf7m8Pv2e/3O7/n4aDtU9nnTSLX/xLgA9v7JZ0FXrbdyPaTxENvR4F1\nti9J2gPMtb07U0OPEjlurgPbbE9Jutx2/qPAPturJTWArbYvSxoBRmwPSVqZf2OamGEttj30D7/y\n8j9Um8+lr0laIKnRegH3Aw/mxx+1cuoT+aMg8tMvB1YRT76vz/ocr0d3WkXcPLdnmpRFwI5MqPYG\nsOsWw3iVrIdBJDIcy6fRVxDpjbcAG4DnJa0B3gK25vgHATFDioIsunIMeCLz6x8GDt3mdzMIPEME\nQHLsb2Y/m2+nj3J3qqWk0tdsXyXy2QCR54ZIYzCTh4kUxH8ANyV9CjxkuynpBaAJnLTdzPO/Bw5J\nmgcsBH6aoc+xHM8Pkr4lbvbzgIbt6Rzb+3nuEWCfpAXA48C47d8l/UwEoktEKoPrxCxnCTCRqbvn\n8NeNHmBc0jSRDqX7ukeJoDWW738h6g2U0lPNGEpfknSfpGe7js0HVgNf9GjavXY60HZskLi5Lmv7\n/ATwmu1hIgPn3+nzR+BG13Fyv2GCCApPAe/k5/uBIxncWvskvwLftFUTW5NjadmcM5WRrjEIWGZ7\nsu3YXmCHpM+B8RmupZQKDKVvXQMOSHoEQNIcooThV7Y/6dHuHPCYpAFJc4G1wLmcERwjyiL+JmlL\nnr8YOJ/9P03sIdyqzw05jnuI//ANTBLVAlvjGwY+yzZvAy8BA7anAGyfsL3S9pPA6TzvIrAo60Yj\naTgTv81mL7E53+4KEag2UktJpYcKDKUv2f6OqEy1J5eDviSWRjfN0vQksVRzJl/v2T5LLLmcsn0R\n2Am8IuleYuP5NFEO8TiwNDd0240CrU3fCeBF21dtfwxM5fjOAB+2gpbtC8Sy0PFZrnMaeI4ovtQk\nbvjNXm1Sw/bXrTe5V/EusLOeoyizqV8llXIHSBoiykg+0C8pqsvdo2YMpfzLJO0ifg67rYJC+S+q\nGUMppZQONWMopZTSoQJDKaWUDhUYSimldKjAUEoppUMFhlJKKR0qMJRSSunwJx/LLC814wOmAAAA\nAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_rQbSXc0CwSQ"
      },
      "source": [
        "## Загружаем данные для распознавания"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lw4F0rCbC0HA"
      },
      "source": [
        "test_dataset = np.loadtxt('test.csv', skiprows=1, delimiter=\",\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-Qaa-wwCDJxQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 103
        },
        "outputId": "5a332784-11f0-4af1-9638-d5601a3f3e23"
      },
      "source": [
        "test_dataset[:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 0., 0., ..., 0., 0., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 0.],\n",
              "       [0., 0., 0., ..., 0., 0., 0.]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KtCMLgC7Y53H"
      },
      "source": [
        "x_test = test_dataset.reshape(test_dataset.shape[0], 28, 28, 1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2edLWqi-DV8v"
      },
      "source": [
        "Нормализация данных"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lKKDMHoCDYKH"
      },
      "source": [
        "x_test = x_test / 255.0"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nCDrYOZVD8LS"
      },
      "source": [
        "## Запускаем распознавание рукописных цифр из тестового набора данных"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hkGx6etOEHW3"
      },
      "source": [
        "predictions = model.predict(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KpjMktszEOHX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 274
        },
        "outputId": "e2c8f7dd-9edc-425a-8cd8-215932f47fb7"
      },
      "source": [
        "predictions[:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[7.0808330e-19, 1.2293642e-15, 1.0000000e+00, 1.6526332e-13,\n",
              "        4.8959526e-16, 1.6048716e-18, 1.2838233e-17, 1.1961627e-12,\n",
              "        7.7564989e-14, 2.3213994e-16],\n",
              "       [9.9999893e-01, 1.6688695e-12, 6.3178089e-09, 6.3089062e-10,\n",
              "        7.1604861e-10, 2.8566465e-09, 2.1731910e-07, 2.6650182e-10,\n",
              "        3.7282078e-07, 4.8097058e-07],\n",
              "       [2.9786121e-10, 2.6178534e-10, 1.4524261e-07, 1.2859771e-09,\n",
              "        5.9936187e-06, 1.6657364e-10, 6.1487855e-12, 1.1224843e-08,\n",
              "        2.0155933e-06, 9.9999177e-01],\n",
              "       [9.9914634e-01, 1.0904064e-07, 7.0121109e-06, 1.3721834e-05,\n",
              "        4.1037286e-08, 5.3695007e-06, 3.6620080e-05, 4.0169263e-07,\n",
              "        2.4500233e-04, 5.4535794e-04],\n",
              "       [2.5390169e-13, 2.4379212e-11, 6.3516737e-08, 9.9996173e-01,\n",
              "        3.9227069e-17, 2.6025369e-09, 1.9312415e-11, 3.6186339e-11,\n",
              "        3.8091617e-05, 5.9398592e-10]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hxmUUZFeES83"
      },
      "source": [
        "Преобразуем результаты распознавания из формата one hot encoding в цифры"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9zXRff8tEZcw"
      },
      "source": [
        "predictions = np.argmax(predictions, axis=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I4JBXf1lEev6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e92a4fb4-0ce9-4169-84d5-9ea20a6fd02e"
      },
      "source": [
        "predictions[:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2, 0, 9, 0, 3])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ciJZLp7uEn5p"
      },
      "source": [
        "out = np.column_stack((range(1, predictions.shape[0]+1), predictions))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fbtqv-c7FH8S",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 103
        },
        "outputId": "50b24ff9-2e5e-4eed-8ea4-740bceb40f5f"
      },
      "source": [
        "out[:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2],\n",
              "       [2, 0],\n",
              "       [3, 9],\n",
              "       [4, 0],\n",
              "       [5, 3]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Njg9BTZUFSDx"
      },
      "source": [
        "Записываем результаты в файл "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aub5ObF2FUmy"
      },
      "source": [
        "np.savetxt('submission.csv', out, header=\"ImageId,Label\", \n",
        "            comments=\"\", fmt=\"%d,%d\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kdtnyQEOFX-x",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 188
        },
        "outputId": "e1b11b1e-0147-4fa7-e26f-e98c4c19ccb8"
      },
      "source": [
        "!head submission.csv"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "ImageId,Label\n",
            "1,2\n",
            "2,0\n",
            "3,9\n",
            "4,0\n",
            "5,3\n",
            "6,7\n",
            "7,0\n",
            "8,3\n",
            "9,0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y1ot315fZgE2"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}